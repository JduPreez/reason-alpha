["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/i18n/currency.js"],"~:js","goog.provide(\"goog.i18n.currency\");\ngoog.provide(\"goog.i18n.currency.CurrencyInfo\");\ngoog.provide(\"goog.i18n.currency.CurrencyInfoTier2\");\n/** @private */ goog.i18n.currency.PRECISION_MASK_ = 7;\n/** @private */ goog.i18n.currency.POSITION_FLAG_ = 16;\n/** @private */ goog.i18n.currency.SPACE_FLAG_ = 32;\n/** @private */ goog.i18n.currency.tier2Enabled_ = false;\n/**\n * @param {string} currencyCode\n * @return {boolean}\n */\ngoog.i18n.currency.isAvailable = function(currencyCode) {\n  return currencyCode in goog.i18n.currency.CurrencyInfo;\n};\ngoog.i18n.currency.addTier2Support = function() {\n  if (!goog.i18n.currency.tier2Enabled_) {\n    for (var key in goog.i18n.currency.CurrencyInfoTier2) {\n      goog.i18n.currency.CurrencyInfo[key] = goog.i18n.currency.CurrencyInfoTier2[key];\n    }\n    goog.i18n.currency.tier2Enabled_ = true;\n  }\n};\n/**\n * @param {string} currencyCode\n * @return {string}\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with {@link goog.i18n.NumberFormat.Format.CURRENCY} and {@link goog.i18n.NumberFormat.CurrencyStyle.GLOBAL}\n */\ngoog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  var patternNum = info[0];\n  if (currencyCode == info[1]) {\n    return goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\n  }\n  return currencyCode + \" \" + goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\n};\n/**\n * @param {string} currencyCode\n * @return {string}\n */\ngoog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  return currencyCode == info[1] ? currencyCode : currencyCode + \" \" + info[1];\n};\n/**\n * @param {string} currencyCode\n * @return {string}\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with {@link goog.i18n.NumberFormat.Format.CURRENCY} and {@link goog.i18n.NumberFormat.CurrencyStyle.LOCAL}\n */\ngoog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);\n};\n/**\n * @param {string} currencyCode\n * @return {string}\n */\ngoog.i18n.currency.getLocalCurrencySign = function(currencyCode) {\n  return goog.i18n.currency.CurrencyInfo[currencyCode][1];\n};\n/**\n * @param {string} currencyCode\n * @return {string}\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with {@link goog.i18n.NumberFormat.Format.CURRENCY} and {@link goog.i18n.NumberFormat.CurrencyStyle.PORTABLE}\n */\ngoog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);\n};\n/**\n * @param {string} currencyCode\n * @return {string}\n */\ngoog.i18n.currency.getPortableCurrencySign = function(currencyCode) {\n  return goog.i18n.currency.CurrencyInfo[currencyCode][2];\n};\n/**\n * @param {string} currencyCode\n * @return {boolean}\n */\ngoog.i18n.currency.isPrefixSignPosition = function(currencyCode) {\n  return (goog.i18n.currency.CurrencyInfo[currencyCode][0] & goog.i18n.currency.POSITION_FLAG_) == 0;\n};\n/**\n * @private\n * @param {number} patternNum\n * @param {string} sign\n * @return {string}\n */\ngoog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {\n  var strParts = [\"#,##0\"];\n  var precision = patternNum & goog.i18n.currency.PRECISION_MASK_;\n  if (precision > 0) {\n    strParts.push(\".\");\n    for (var i = 0; i < precision; i++) {\n      strParts.push(\"0\");\n    }\n  }\n  if ((patternNum & goog.i18n.currency.POSITION_FLAG_) == 0) {\n    strParts.unshift(patternNum & goog.i18n.currency.SPACE_FLAG_ ? \"' \" : \"'\");\n    strParts.unshift(sign);\n    strParts.unshift(\"'\");\n  } else {\n    strParts.push(patternNum & goog.i18n.currency.SPACE_FLAG_ ? \" '\" : \"'\", sign, \"'\");\n  }\n  return strParts.join(\"\");\n};\n/**\n * @param {string} pattern\n * @param {string} currencyCode\n * @return {string}\n */\ngoog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {\n  var strParts = [\"0\"];\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  var precision = info[0] & goog.i18n.currency.PRECISION_MASK_;\n  if (precision > 0) {\n    strParts.push(\".\");\n    for (var i = 0; i < precision; i++) {\n      strParts.push(\"0\");\n    }\n  }\n  return pattern.replace(/0.00/g, strParts.join(\"\"));\n};\n/** @const @type {!Object<?,!Array<?>>} */ goog.i18n.currency.CurrencyInfo = {\"AED\":[2, \"dh\", \"د.إ.\", \"DH\"], \"ALL\":[0, \"Lek\", \"Lek\"], \"AUD\":[2, \"$\", \"AU$\"], \"BDT\":[2, \"৳\", \"Tk\"], \"BGN\":[2, \"lev\", \"lev\"], \"BRL\":[2, \"R$\", \"R$\"], \"CAD\":[2, \"$\", \"C$\"], \"CDF\":[2, \"FrCD\", \"CDF\"], \"CHF\":[2, \"CHF\", \"CHF\"], \"CLP\":[0, \"$\", \"CL$\"], \"CNY\":[2, \"¥\", \"RMB¥\"], \"COP\":[32, \"$\", \"COL$\"], \"CRC\":[0, \"₡\", \"CR₡\"], \"CZK\":[50, \"Kč\", \"Kč\"], \"DKK\":[50, \"kr.\", \"kr.\"], \"DOP\":[2, \"RD$\", \"RD$\"], \"EGP\":[2, \"£\", \"LE\"], \"ETB\":[2, \n\"Birr\", \"Birr\"], \"EUR\":[2, \"€\", \"€\"], \"GBP\":[2, \"£\", \"GB£\"], \"HKD\":[2, \"$\", \"HK$\"], \"HRK\":[2, \"kn\", \"kn\"], \"HUF\":[34, \"Ft\", \"Ft\"], \"IDR\":[0, \"Rp\", \"Rp\"], \"ILS\":[34, \"₪\", \"IL₪\"], \"INR\":[2, \"₹\", \"Rs\"], \"IRR\":[0, \"Rial\", \"IRR\"], \"ISK\":[0, \"kr\", \"kr\"], \"JMD\":[2, \"$\", \"JA$\"], \"JPY\":[0, \"¥\", \"JP¥\"], \"KRW\":[0, \"₩\", \"KR₩\"], \"LKR\":[2, \"Rs\", \"SLRs\"], \"LTL\":[2, \"Lt\", \"Lt\"], \"MNT\":[0, \"₮\", \"MN₮\"], \"MVR\":[2, \"Rf\", \"MVR\"], \"MXN\":[2, \"$\", \"Mex$\"], \"MYR\":[2, \"RM\", \"RM\"], \"NOK\":[50, \"kr\", \"NOkr\"], \"PAB\":[2, \"B/.\", \n\"B/.\"], \"PEN\":[2, \"S/.\", \"S/.\"], \"PHP\":[2, \"₱\", \"PHP\"], \"PKR\":[0, \"Rs\", \"PKRs.\"], \"PLN\":[50, \"zł\", \"zł\"], \"RON\":[2, \"RON\", \"RON\"], \"RSD\":[0, \"din\", \"RSD\"], \"RUB\":[50, \"₽\", \"RUB\"], \"SAR\":[2, \"Rial\", \"Rial\"], \"SEK\":[50, \"kr\", \"kr\"], \"SGD\":[2, \"$\", \"S$\"], \"THB\":[2, \"฿\", \"THB\"], \"TRY\":[2, \"TL\", \"YTL\"], \"TWD\":[2, \"NT$\", \"NT$\"], \"TZS\":[0, \"TSh\", \"TSh\"], \"UAH\":[2, \"грн.\", \"UAH\"], \"USD\":[2, \"$\", \"US$\"], \"UYU\":[2, \"$\", \"$U\"], \"VND\":[48, \"₫\", \"VN₫\"], \"YER\":[0, \"Rial\", \"Rial\"], \"ZAR\":[2, \"R\", \"ZAR\"]};\n/** @const @type {!Object<?,!Array<?>>} */ goog.i18n.currency.CurrencyInfoTier2 = {\"AFN\":[48, \"Af.\", \"AFN\"], \"AMD\":[32, \"Dram\", \"dram\"], \"ANG\":[2, \"NAf.\", \"ANG\"], \"AOA\":[2, \"Kz\", \"Kz\"], \"ARS\":[34, \"$\", \"AR$\"], \"AWG\":[2, \"Afl.\", \"Afl.\"], \"AZN\":[34, \"₼\", \"AZN\"], \"BAM\":[2, \"KM\", \"KM\"], \"BBD\":[2, \"$\", \"Bds$\"], \"BHD\":[3, \"din\", \"din\"], \"BIF\":[0, \"FBu\", \"FBu\"], \"BMD\":[2, \"$\", \"BD$\"], \"BND\":[2, \"$\", \"B$\"], \"BOB\":[2, \"Bs\", \"Bs\"], \"BSD\":[2, \"$\", \"BS$\"], \"BTN\":[2, \"Nu.\", \"Nu.\"], \"BWP\":[2, \"P\", \"pula\"], \"BYR\":[48, \n\"p.\", \"BYR\"], \"BZD\":[2, \"$\", \"BZ$\"], \"CNH\":[2, \"¥\", \"RMB¥\"], \"CUC\":[1, \"$\", \"CUC$\"], \"CUP\":[2, \"$\", \"CU$\"], \"CVE\":[2, \"CVE\", \"Esc\"], \"DJF\":[0, \"Fdj\", \"Fdj\"], \"DZD\":[2, \"din\", \"din\"], \"ERN\":[2, \"Nfk\", \"Nfk\"], \"FJD\":[2, \"$\", \"FJ$\"], \"FKP\":[2, \"£\", \"FK£\"], \"GEL\":[2, \"GEL\", \"GEL\"], \"GHS\":[2, \"GHS\", \"GHS\"], \"GIP\":[2, \"£\", \"GI£\"], \"GMD\":[2, \"GMD\", \"GMD\"], \"GNF\":[0, \"FG\", \"FG\"], \"GTQ\":[2, \"Q\", \"GTQ\"], \"GYD\":[0, \"$\", \"GY$\"], \"HNL\":[2, \"L\", \"HNL\"], \"HTG\":[2, \"HTG\", \"HTG\"], \"IQD\":[0, \"din\", \"IQD\"], \"JOD\":[3, \n\"din\", \"JOD\"], \"KES\":[2, \"Ksh\", \"Ksh\"], \"KGS\":[2, \"KGS\", \"KGS\"], \"KHR\":[2, \"Riel\", \"KHR\"], \"KMF\":[0, \"CF\", \"KMF\"], \"KPW\":[0, \"₩KP\", \"KPW\"], \"KWD\":[3, \"din\", \"KWD\"], \"KYD\":[2, \"$\", \"KY$\"], \"KZT\":[2, \"₸\", \"KZT\"], \"LAK\":[0, \"₭\", \"₭\"], \"LBP\":[0, \"L£\", \"LBP\"], \"LRD\":[2, \"$\", \"L$\"], \"LSL\":[2, \"LSL\", \"LSL\"], \"LYD\":[3, \"din\", \"LD\"], \"MAD\":[2, \"dh\", \"MAD\"], \"MDL\":[2, \"MDL\", \"MDL\"], \"MGA\":[0, \"Ar\", \"MGA\"], \"MKD\":[2, \"din\", \"MKD\"], \"MMK\":[0, \"K\", \"MMK\"], \"MOP\":[2, \"MOP\", \"MOP$\"], \"MRO\":[0, \"MRO\", \"MRO\"], \"MUR\":[0, \n\"MURs\", \"MURs\"], \"MWK\":[2, \"MWK\", \"MWK\"], \"MZN\":[2, \"MTn\", \"MTn\"], \"NAD\":[2, \"$\", \"N$\"], \"NGN\":[2, \"₦\", \"NG₦\"], \"NIO\":[2, \"C$\", \"C$\"], \"NPR\":[2, \"Rs\", \"NPRs\"], \"NZD\":[2, \"$\", \"NZ$\"], \"OMR\":[3, \"Rial\", \"OMR\"], \"PGK\":[2, \"PGK\", \"PGK\"], \"PYG\":[16, \"Gs.\", \"PYG\"], \"QAR\":[2, \"Rial\", \"QR\"], \"RWF\":[0, \"RF\", \"RF\"], \"SBD\":[2, \"$\", \"SI$\"], \"SCR\":[2, \"SCR\", \"SCR\"], \"SDG\":[2, \"SDG\", \"SDG\"], \"SHP\":[2, \"£\", \"SH£\"], \"SLL\":[0, \"SLL\", \"SLL\"], \"SOS\":[0, \"SOS\", \"SOS\"], \"SRD\":[2, \"$\", \"SR$\"], \"SSP\":[2, \"£\", \"SSP\"], \"STD\":[0, \n\"Db\", \"Db\"], \"SYP\":[0, \"£\", \"SY£\"], \"SZL\":[2, \"SZL\", \"SZL\"], \"TJS\":[2, \"Som\", \"TJS\"], \"TND\":[3, \"din\", \"DT\"], \"TOP\":[2, \"T$\", \"T$\"], \"TTD\":[2, \"$\", \"TT$\"], \"UGX\":[0, \"UGX\", \"UGX\"], \"UZS\":[0, \"soʼm\", \"UZS\"], \"VEF\":[2, \"Bs\", \"Bs\"], \"VUV\":[0, \"VUV\", \"VUV\"], \"WST\":[2, \"WST\", \"WST\"], \"XAF\":[0, \"FCFA\", \"FCFA\"], \"XCD\":[2, \"$\", \"EC$\"], \"XOF\":[0, \"CFA\", \"CFA\"], \"XPF\":[48, \"FCFP\", \"FCFP\"], \"ZMW\":[0, \"ZMW\", \"ZMW\"], \"ZWD\":[0, \"$\", \"Z$\"]};\n","~:source","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @fileoverview A utility to get better currency format pattern.\n *\n * This module implements a new currency format representation model. It\n * provides 3 currency representation forms: global, portable and local. Local\n * format is the most popular format people use to represent currency in its\n * circulating country without worrying about how it should be distinguished\n * from other currencies.  Global format is a formal representation in context\n * of multiple currencies in same page, it is ISO 4217 currency code. Portable\n * format is a compromise between global and local. It looks similar to how\n * people would like to see how their currency is being represented in other\n * media. While at the same time, it should be distinguishable to world's\n * popular currencies (like USD, EUR) and currencies somewhat relevant in the\n * area (like CNY in HK, though native currency is HKD). There is no guarantee\n * of uniqueness.\n *\n */\n\n\ngoog.provide('goog.i18n.currency');\ngoog.provide('goog.i18n.currency.CurrencyInfo');\ngoog.provide('goog.i18n.currency.CurrencyInfoTier2');\n\n\n/**\n * The mask of precision field.\n * @private\n */\ngoog.i18n.currency.PRECISION_MASK_ = 0x07;\n\n\n/**\n * Whether the currency sign should be positioned after the number.\n * @private\n */\ngoog.i18n.currency.POSITION_FLAG_ = 0x10;\n\n\n/**\n * Whether a space should be inserted between the number and currency sign.\n * @private\n */\ngoog.i18n.currency.SPACE_FLAG_ = 0x20;\n\n\n/**\n * Whether tier2 was enabled already by calling addTier2Support().\n * @private\n */\ngoog.i18n.currency.tier2Enabled_ = false;\n\n\n/**\n * Tests if currency is available.\n *\n * Note: If the currency is not available it might be in the tier2 currency set:\n * {@link goog.i18n.currency.CurrencyInfoTier2}. If that is the case call\n * {@link goog.i18n.currency.addTier2Support} before calling any other function\n * in this namespace.\n *\n * @param {string} currencyCode Currency code to tested.\n * @return {boolean} If the currency is available.\n */\ngoog.i18n.currency.isAvailable = function(currencyCode) {\n  return currencyCode in goog.i18n.currency.CurrencyInfo;\n};\n\n/**\n * This function will add tier2 currency support. Be default, only tier1\n * (most popular currencies) are supported. If an application really needs\n * to support some of the rarely used currencies, it should call this function\n * before any other functions in this namespace.\n */\ngoog.i18n.currency.addTier2Support = function() {\n  // Protection from executing this these again and again.\n  if (!goog.i18n.currency.tier2Enabled_) {\n    for (var key in goog.i18n.currency.CurrencyInfoTier2) {\n      goog.i18n.currency.CurrencyInfo[key] =\n          goog.i18n.currency.CurrencyInfoTier2[key];\n    }\n    goog.i18n.currency.tier2Enabled_ = true;\n  }\n};\n\n\n/**\n * Deprecated.\n * Global currency pattern always uses ISO-4217 currency code as prefix. Local\n * currency sign is added if it is different from currency code. Each currency\n * is unique in this form. The negative side is that ISO code looks weird in\n * some countries as people normally do not use it. Local currency sign\n * alleviates the problem, but also makes it a little verbose.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Global currency pattern string for given currency.\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.GLOBAL}\n */\ngoog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  var patternNum = info[0];\n  if (currencyCode == info[1]) {\n    return goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\n  }\n  return currencyCode + ' ' +\n      goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\n};\n\n\n/**\n * Return global currency sign string for those applications\n * that want to handle currency sign themselves.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Global currency sign for given currency.\n */\ngoog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  return (currencyCode == info[1]) ? currencyCode :\n                                     currencyCode + ' ' + info[1];\n};\n\n\n/**\n * Deprecated.\n * Local currency pattern is the most frequently used pattern in currency's\n * native region. It does not care about how it is distinguished from other\n * currencies.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Local currency pattern string for given currency.\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.LOCAL}\n */\ngoog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);\n};\n\n\n/**\n * Returns local currency sign string for those applications that need to\n * handle currency sign separately.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Local currency sign for given currency.\n */\ngoog.i18n.currency.getLocalCurrencySign = function(currencyCode) {\n  return goog.i18n.currency.CurrencyInfo[currencyCode][1];\n};\n\n\n/**\n * Deprecated.\n * Portable currency pattern is a compromise between local and global. It is\n * not a mere blend or mid-way between the two. Currency sign is chosen so that\n * it looks familiar to native users. It also has enough information to\n * distinguish itself from other popular currencies in its native region.\n * In this pattern, currency sign symbols that has availability problem in\n * popular fonts are also avoided.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Portable currency pattern string for given currency.\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.PORTABLE}\n */\ngoog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);\n};\n\n\n/**\n * Return portable currency sign string for those applications that need to\n * handle currency sign themselves.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {string} Portable currency sign for given currency.\n */\ngoog.i18n.currency.getPortableCurrencySign = function(currencyCode) {\n  return goog.i18n.currency.CurrencyInfo[currencyCode][2];\n};\n\n\n/**\n * This function returns the default currency sign's position. Some applications\n * may want to handle currency sign and currency amount separately. This\n * function can be used in such situations to correctly position the currency\n * sign relative to the amount.\n *\n * Use {@link goog.i18n.NumberFormat#isCurrencyCodeBeforeValue} for a locale\n * aware version of this API (recommended). isPrefixSignPosition() returns the\n * default currency sign's position in the currency's default locale (e.g. 'en'\n * for 'USD'), but most commonly the position is needed for the locale in which\n * the number is going to be displayed. For example, in 'fr' 10.10 USD would be\n * displayed as '10,10 $'.\n *\n * @param {string} currencyCode ISO-4217 3-letter currency code.\n * @return {boolean} true if currency should be positioned before amount field.\n */\ngoog.i18n.currency.isPrefixSignPosition = function(currencyCode) {\n  return (goog.i18n.currency.CurrencyInfo[currencyCode][0] &\n          goog.i18n.currency.POSITION_FLAG_) == 0;\n};\n\n\n/**\n * This function constructs the currency pattern. Currency sign is provided. The\n * pattern information is encoded in patternNum.\n *\n * @param {number} patternNum Encoded pattern number that has\n *     currency pattern information.\n * @param {string} sign The currency sign that will be used in pattern.\n * @return {string} currency pattern string.\n * @private\n */\ngoog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {\n  var strParts = ['#,##0'];\n  var precision = patternNum & goog.i18n.currency.PRECISION_MASK_;\n  if (precision > 0) {\n    strParts.push('.');\n    for (var i = 0; i < precision; i++) {\n      strParts.push('0');\n    }\n  }\n  if ((patternNum & goog.i18n.currency.POSITION_FLAG_) == 0) {\n    strParts.unshift(\n        (patternNum & goog.i18n.currency.SPACE_FLAG_) ? \"' \" : \"'\");\n    strParts.unshift(sign);\n    strParts.unshift(\"'\");\n  } else {\n    strParts.push(\n        (patternNum & goog.i18n.currency.SPACE_FLAG_) ? \" '\" : \"'\", sign, \"'\");\n  }\n  return strParts.join('');\n};\n\n\n/**\n * Modify currency pattern string by adjusting precision for given currency.\n * Standard currency pattern will have 2 digit after decimal point.\n * Examples:\n *   $#,##0.00 ->  $#,##0    (precision == 0)\n *   $#,##0.00 ->  $#,##0.0  (precision == 1)\n *   $#,##0.00 ->  $#,##0.000  (precision == 3)\n *\n * @param {string} pattern currency pattern string.\n * @param {string} currencyCode 3-letter currency code.\n * @return {string} modified currency pattern string.\n */\ngoog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {\n  var strParts = ['0'];\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\n  var precision = info[0] & goog.i18n.currency.PRECISION_MASK_;\n  if (precision > 0) {\n    strParts.push('.');\n    for (var i = 0; i < precision; i++) {\n      strParts.push('0');\n    }\n  }\n  return pattern.replace(/0.00/g, strParts.join(''));\n};\n\n\n/**\n * Tier 1 currency information.\n *\n * The first number in the array is a combination of the precision mask and\n * other flags. The precision mask indicates how many decimal places to show for\n * the currency. Valid values are [0..7]. The position flag indicates whether\n * the currency sign should be positioned after the number. Valid values are 0\n * (before the number) or 16 (after the number). The space flag indicates\n * whether a space should be inserted between the currency sign and number.\n * Valid values are 0 (no space) and 32 (space).\n *\n * The number in the array is calculated by adding together the mask and flag\n * values. For example:\n *\n * 0: no precision (0), currency sign first (0), no space (0)\n * 2: two decimals precision (2), currency sign first (0), no space (0)\n * 18: two decimals precision (2), currency sign last (16), no space (0)\n * 50: two decimals precision (2), currency sign last (16), space (32)\n *\n * It's not recommended to read this data directly. Format numbers using\n * {@link goog.i18n.NumberFormat} with\n * {@link goog.i18n.NumberFormat.Format.CURRENCY} instead.\n *\n * @const {!Object<!Array<?>>}\n */\ngoog.i18n.currency.CurrencyInfo = {\n  'AED': [2, 'dh', '\\u062f.\\u0625.', 'DH'],\n  'ALL': [0, 'Lek', 'Lek'],\n  'AUD': [2, '$', 'AU$'],\n  'BDT': [2, '\\u09F3', 'Tk'],\n  'BGN': [2, 'lev', 'lev'],\n  'BRL': [2, 'R$', 'R$'],\n  'CAD': [2, '$', 'C$'],\n  'CDF': [2, 'FrCD', 'CDF'],\n  'CHF': [2, 'CHF', 'CHF'],\n  'CLP': [0, '$', 'CL$'],\n  'CNY': [2, '¥', 'RMB¥'],\n  'COP': [32, '$', 'COL$'],\n  'CRC': [0, '\\u20a1', 'CR\\u20a1'],\n  'CZK': [50, 'K\\u010d', 'K\\u010d'],\n  'DKK': [50, 'kr.', 'kr.'],\n  'DOP': [2, 'RD$', 'RD$'],\n  'EGP': [2, '£', 'LE'],\n  'ETB': [2, 'Birr', 'Birr'],\n  'EUR': [2, '€', '€'],\n  'GBP': [2, '£', 'GB£'],\n  'HKD': [2, '$', 'HK$'],\n  'HRK': [2, 'kn', 'kn'],\n  'HUF': [34, 'Ft', 'Ft'],\n  'IDR': [0, 'Rp', 'Rp'],\n  'ILS': [34, '\\u20AA', 'IL\\u20AA'],\n  'INR': [2, '\\u20B9', 'Rs'],\n  'IRR': [0, 'Rial', 'IRR'],\n  'ISK': [0, 'kr', 'kr'],\n  'JMD': [2, '$', 'JA$'],\n  'JPY': [0, '¥', 'JP¥'],\n  'KRW': [0, '\\u20A9', 'KR₩'],\n  'LKR': [2, 'Rs', 'SLRs'],\n  'LTL': [2, 'Lt', 'Lt'],\n  'MNT': [0, '\\u20AE', 'MN₮'],\n  'MVR': [2, 'Rf', 'MVR'],\n  'MXN': [2, '$', 'Mex$'],\n  'MYR': [2, 'RM', 'RM'],\n  'NOK': [50, 'kr', 'NOkr'],\n  'PAB': [2, 'B/.', 'B/.'],\n  'PEN': [2, 'S/.', 'S/.'],\n  'PHP': [2, '\\u20B1', 'PHP'],\n  'PKR': [0, 'Rs', 'PKRs.'],\n  'PLN': [50, 'z\\u0142', 'z\\u0142'],\n  'RON': [2, 'RON', 'RON'],\n  'RSD': [0, 'din', 'RSD'],\n  'RUB': [50, '\\u20bd', 'RUB'],\n  'SAR': [2, 'Rial', 'Rial'],\n  'SEK': [50, 'kr', 'kr'],\n  'SGD': [2, '$', 'S$'],\n  'THB': [2, '\\u0e3f', 'THB'],\n  'TRY': [2, 'TL', 'YTL'],\n  'TWD': [2, 'NT$', 'NT$'],\n  'TZS': [0, 'TSh', 'TSh'],\n  'UAH': [2, 'грн.', 'UAH'],\n  'USD': [2, '$', 'US$'],\n  'UYU': [2, '$', '$U'],\n  'VND': [48, '\\u20AB', 'VN\\u20AB'],\n  'YER': [0, 'Rial', 'Rial'],\n  'ZAR': [2, 'R', 'ZAR']\n};\n\n\n/**\n * Tier 2 currency information.\n *\n * It's not recommended to read this data directly. Format numbers using\n * {@link goog.i18n.NumberFormat} with\n * {@link goog.i18n.NumberFormat.Format.CURRENCY} instead.\n *\n * @const {!Object<!Array<?>>}\n */\ngoog.i18n.currency.CurrencyInfoTier2 = {\n  'AFN': [48, 'Af.', 'AFN'],\n  'AMD': [32, 'Dram', 'dram'],\n  'ANG': [2, 'NAf.', 'ANG'],\n  'AOA': [2, 'Kz', 'Kz'],\n  'ARS': [34, '$', 'AR$'],\n  'AWG': [2, 'Afl.', 'Afl.'],\n  'AZN': [34, '\\u20bc', 'AZN'],\n  'BAM': [2, 'KM', 'KM'],\n  'BBD': [2, '$', 'Bds$'],\n  'BHD': [3, 'din', 'din'],\n  'BIF': [0, 'FBu', 'FBu'],\n  'BMD': [2, '$', 'BD$'],\n  'BND': [2, '$', 'B$'],\n  'BOB': [2, 'Bs', 'Bs'],\n  'BSD': [2, '$', 'BS$'],\n  'BTN': [2, 'Nu.', 'Nu.'],\n  'BWP': [2, 'P', 'pula'],\n  'BYR': [48, 'p.', 'BYR'],\n  'BZD': [2, '$', 'BZ$'],\n  'CNH': [2, '¥', 'RMB¥'],\n  'CUC': [1, '$', 'CUC$'],\n  'CUP': [2, '$', 'CU$'],\n  'CVE': [2, 'CVE', 'Esc'],\n  'DJF': [0, 'Fdj', 'Fdj'],\n  'DZD': [2, 'din', 'din'],\n  'ERN': [2, 'Nfk', 'Nfk'],\n  'FJD': [2, '$', 'FJ$'],\n  'FKP': [2, '£', 'FK£'],\n  'GEL': [2, 'GEL', 'GEL'],\n  'GHS': [2, 'GHS', 'GHS'],\n  'GIP': [2, '£', 'GI£'],\n  'GMD': [2, 'GMD', 'GMD'],\n  'GNF': [0, 'FG', 'FG'],\n  'GTQ': [2, 'Q', 'GTQ'],\n  'GYD': [0, '$', 'GY$'],\n  'HNL': [2, 'L', 'HNL'],\n  'HTG': [2, 'HTG', 'HTG'],\n  'IQD': [0, 'din', 'IQD'],\n  'JOD': [3, 'din', 'JOD'],\n  'KES': [2, 'Ksh', 'Ksh'],\n  'KGS': [2, 'KGS', 'KGS'],\n  'KHR': [2, 'Riel', 'KHR'],\n  'KMF': [0, 'CF', 'KMF'],\n  'KPW': [0, '\\u20A9KP', 'KPW'],\n  'KWD': [3, 'din', 'KWD'],\n  'KYD': [2, '$', 'KY$'],\n  'KZT': [2, '\\u20B8', 'KZT'],\n  'LAK': [0, '\\u20AD', '\\u20AD'],\n  'LBP': [0, 'L£', 'LBP'],\n  'LRD': [2, '$', 'L$'],\n  'LSL': [2, 'LSL', 'LSL'],\n  'LYD': [3, 'din', 'LD'],\n  'MAD': [2, 'dh', 'MAD'],\n  'MDL': [2, 'MDL', 'MDL'],\n  'MGA': [0, 'Ar', 'MGA'],\n  'MKD': [2, 'din', 'MKD'],\n  'MMK': [0, 'K', 'MMK'],\n  'MOP': [2, 'MOP', 'MOP$'],\n  'MRO': [0, 'MRO', 'MRO'],\n  'MUR': [0, 'MURs', 'MURs'],\n  'MWK': [2, 'MWK', 'MWK'],\n  'MZN': [2, 'MTn', 'MTn'],\n  'NAD': [2, '$', 'N$'],\n  'NGN': [2, '\\u20A6', 'NG\\u20A6'],\n  'NIO': [2, 'C$', 'C$'],\n  'NPR': [2, 'Rs', 'NPRs'],\n  'NZD': [2, '$', 'NZ$'],\n  'OMR': [3, 'Rial', 'OMR'],\n  'PGK': [2, 'PGK', 'PGK'],\n  'PYG': [16, 'Gs.', 'PYG'],\n  'QAR': [2, 'Rial', 'QR'],\n  'RWF': [0, 'RF', 'RF'],\n  'SBD': [2, '$', 'SI$'],\n  'SCR': [2, 'SCR', 'SCR'],\n  'SDG': [2, 'SDG', 'SDG'],\n  'SHP': [2, '£', 'SH£'],\n  'SLL': [0, 'SLL', 'SLL'],\n  'SOS': [0, 'SOS', 'SOS'],\n  'SRD': [2, '$', 'SR$'],\n  'SSP': [2, '£', 'SSP'],\n  'STD': [0, 'Db', 'Db'],\n  'SYP': [0, '£', 'SY£'],\n  'SZL': [2, 'SZL', 'SZL'],\n  'TJS': [2, 'Som', 'TJS'],\n  'TND': [3, 'din', 'DT'],\n  'TOP': [2, 'T$', 'T$'],\n  'TTD': [2, '$', 'TT$'],\n  'UGX': [0, 'UGX', 'UGX'],\n  'UZS': [0, 'so\\u02bcm', 'UZS'],\n  'VEF': [2, 'Bs', 'Bs'],\n  'VUV': [0, 'VUV', 'VUV'],\n  'WST': [2, 'WST', 'WST'],\n  'XAF': [0, 'FCFA', 'FCFA'],\n  'XCD': [2, '$', 'EC$'],\n  'XOF': [0, 'CFA', 'CFA'],\n  'XPF': [48, 'FCFP', 'FCFP'],\n  'ZMW': [0, 'ZMW', 'ZMW'],\n  'ZWD': [0, '$', 'Z$']\n};\n","~:compiled-at",1574163696244,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.i18n.currency.js\",\n\"lineCount\":132,\n\"mappings\":\"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\",\n\"sources\":[\"goog/i18n/currency.js\"],\n\"sourcesContent\":[\"// Copyright 2009 The Closure Library Authors. All Rights Reserved.\\n//\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n// you may not use this file except in compliance with the License.\\n// You may obtain a copy of the License at\\n//\\n//      http://www.apache.org/licenses/LICENSE-2.0\\n//\\n// Unless required by applicable law or agreed to in writing, software\\n// distributed under the License is distributed on an \\\"AS-IS\\\" BASIS,\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n// See the License for the specific language governing permissions and\\n// limitations under the License.\\n\\n\\n/**\\n * @fileoverview A utility to get better currency format pattern.\\n *\\n * This module implements a new currency format representation model. It\\n * provides 3 currency representation forms: global, portable and local. Local\\n * format is the most popular format people use to represent currency in its\\n * circulating country without worrying about how it should be distinguished\\n * from other currencies.  Global format is a formal representation in context\\n * of multiple currencies in same page, it is ISO 4217 currency code. Portable\\n * format is a compromise between global and local. It looks similar to how\\n * people would like to see how their currency is being represented in other\\n * media. While at the same time, it should be distinguishable to world's\\n * popular currencies (like USD, EUR) and currencies somewhat relevant in the\\n * area (like CNY in HK, though native currency is HKD). There is no guarantee\\n * of uniqueness.\\n *\\n */\\n\\n\\ngoog.provide('goog.i18n.currency');\\ngoog.provide('goog.i18n.currency.CurrencyInfo');\\ngoog.provide('goog.i18n.currency.CurrencyInfoTier2');\\n\\n\\n/**\\n * The mask of precision field.\\n * @private\\n */\\ngoog.i18n.currency.PRECISION_MASK_ = 0x07;\\n\\n\\n/**\\n * Whether the currency sign should be positioned after the number.\\n * @private\\n */\\ngoog.i18n.currency.POSITION_FLAG_ = 0x10;\\n\\n\\n/**\\n * Whether a space should be inserted between the number and currency sign.\\n * @private\\n */\\ngoog.i18n.currency.SPACE_FLAG_ = 0x20;\\n\\n\\n/**\\n * Whether tier2 was enabled already by calling addTier2Support().\\n * @private\\n */\\ngoog.i18n.currency.tier2Enabled_ = false;\\n\\n\\n/**\\n * Tests if currency is available.\\n *\\n * Note: If the currency is not available it might be in the tier2 currency set:\\n * {@link goog.i18n.currency.CurrencyInfoTier2}. If that is the case call\\n * {@link goog.i18n.currency.addTier2Support} before calling any other function\\n * in this namespace.\\n *\\n * @param {string} currencyCode Currency code to tested.\\n * @return {boolean} If the currency is available.\\n */\\ngoog.i18n.currency.isAvailable = function(currencyCode) {\\n  return currencyCode in goog.i18n.currency.CurrencyInfo;\\n};\\n\\n/**\\n * This function will add tier2 currency support. Be default, only tier1\\n * (most popular currencies) are supported. If an application really needs\\n * to support some of the rarely used currencies, it should call this function\\n * before any other functions in this namespace.\\n */\\ngoog.i18n.currency.addTier2Support = function() {\\n  // Protection from executing this these again and again.\\n  if (!goog.i18n.currency.tier2Enabled_) {\\n    for (var key in goog.i18n.currency.CurrencyInfoTier2) {\\n      goog.i18n.currency.CurrencyInfo[key] =\\n          goog.i18n.currency.CurrencyInfoTier2[key];\\n    }\\n    goog.i18n.currency.tier2Enabled_ = true;\\n  }\\n};\\n\\n\\n/**\\n * Deprecated.\\n * Global currency pattern always uses ISO-4217 currency code as prefix. Local\\n * currency sign is added if it is different from currency code. Each currency\\n * is unique in this form. The negative side is that ISO code looks weird in\\n * some countries as people normally do not use it. Local currency sign\\n * alleviates the problem, but also makes it a little verbose.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {string} Global currency pattern string for given currency.\\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.GLOBAL}\\n */\\ngoog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {\\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\\n  var patternNum = info[0];\\n  if (currencyCode == info[1]) {\\n    return goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\\n  }\\n  return currencyCode + ' ' +\\n      goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);\\n};\\n\\n\\n/**\\n * Return global currency sign string for those applications\\n * that want to handle currency sign themselves.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {string} Global currency sign for given currency.\\n */\\ngoog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {\\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\\n  return (currencyCode == info[1]) ? currencyCode :\\n                                     currencyCode + ' ' + info[1];\\n};\\n\\n\\n/**\\n * Deprecated.\\n * Local currency pattern is the most frequently used pattern in currency's\\n * native region. It does not care about how it is distinguished from other\\n * currencies.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {string} Local currency pattern string for given currency.\\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.LOCAL}\\n */\\ngoog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {\\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);\\n};\\n\\n\\n/**\\n * Returns local currency sign string for those applications that need to\\n * handle currency sign separately.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {string} Local currency sign for given currency.\\n */\\ngoog.i18n.currency.getLocalCurrencySign = function(currencyCode) {\\n  return goog.i18n.currency.CurrencyInfo[currencyCode][1];\\n};\\n\\n\\n/**\\n * Deprecated.\\n * Portable currency pattern is a compromise between local and global. It is\\n * not a mere blend or mid-way between the two. Currency sign is chosen so that\\n * it looks familiar to native users. It also has enough information to\\n * distinguish itself from other popular currencies in its native region.\\n * In this pattern, currency sign symbols that has availability problem in\\n * popular fonts are also avoided.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {string} Portable currency pattern string for given currency.\\n * @deprecated Format numbers using {@link goog.i18n.NumberFormat} with\\n *   {@link goog.i18n.NumberFormat.Format.CURRENCY} and\\n *   {@link goog.i18n.NumberFormat.CurrencyStyle.PORTABLE}\\n */\\ngoog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {\\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\\n  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);\\n};\\n\\n\\n/**\\n * Return portable currency sign string for those applications that need to\\n * handle currency sign themselves.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {string} Portable currency sign for given currency.\\n */\\ngoog.i18n.currency.getPortableCurrencySign = function(currencyCode) {\\n  return goog.i18n.currency.CurrencyInfo[currencyCode][2];\\n};\\n\\n\\n/**\\n * This function returns the default currency sign's position. Some applications\\n * may want to handle currency sign and currency amount separately. This\\n * function can be used in such situations to correctly position the currency\\n * sign relative to the amount.\\n *\\n * Use {@link goog.i18n.NumberFormat#isCurrencyCodeBeforeValue} for a locale\\n * aware version of this API (recommended). isPrefixSignPosition() returns the\\n * default currency sign's position in the currency's default locale (e.g. 'en'\\n * for 'USD'), but most commonly the position is needed for the locale in which\\n * the number is going to be displayed. For example, in 'fr' 10.10 USD would be\\n * displayed as '10,10 $'.\\n *\\n * @param {string} currencyCode ISO-4217 3-letter currency code.\\n * @return {boolean} true if currency should be positioned before amount field.\\n */\\ngoog.i18n.currency.isPrefixSignPosition = function(currencyCode) {\\n  return (goog.i18n.currency.CurrencyInfo[currencyCode][0] &\\n          goog.i18n.currency.POSITION_FLAG_) == 0;\\n};\\n\\n\\n/**\\n * This function constructs the currency pattern. Currency sign is provided. The\\n * pattern information is encoded in patternNum.\\n *\\n * @param {number} patternNum Encoded pattern number that has\\n *     currency pattern information.\\n * @param {string} sign The currency sign that will be used in pattern.\\n * @return {string} currency pattern string.\\n * @private\\n */\\ngoog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {\\n  var strParts = ['#,##0'];\\n  var precision = patternNum & goog.i18n.currency.PRECISION_MASK_;\\n  if (precision > 0) {\\n    strParts.push('.');\\n    for (var i = 0; i < precision; i++) {\\n      strParts.push('0');\\n    }\\n  }\\n  if ((patternNum & goog.i18n.currency.POSITION_FLAG_) == 0) {\\n    strParts.unshift(\\n        (patternNum & goog.i18n.currency.SPACE_FLAG_) ? \\\"' \\\" : \\\"'\\\");\\n    strParts.unshift(sign);\\n    strParts.unshift(\\\"'\\\");\\n  } else {\\n    strParts.push(\\n        (patternNum & goog.i18n.currency.SPACE_FLAG_) ? \\\" '\\\" : \\\"'\\\", sign, \\\"'\\\");\\n  }\\n  return strParts.join('');\\n};\\n\\n\\n/**\\n * Modify currency pattern string by adjusting precision for given currency.\\n * Standard currency pattern will have 2 digit after decimal point.\\n * Examples:\\n *   $#,##0.00 ->  $#,##0    (precision == 0)\\n *   $#,##0.00 ->  $#,##0.0  (precision == 1)\\n *   $#,##0.00 ->  $#,##0.000  (precision == 3)\\n *\\n * @param {string} pattern currency pattern string.\\n * @param {string} currencyCode 3-letter currency code.\\n * @return {string} modified currency pattern string.\\n */\\ngoog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {\\n  var strParts = ['0'];\\n  var info = goog.i18n.currency.CurrencyInfo[currencyCode];\\n  var precision = info[0] & goog.i18n.currency.PRECISION_MASK_;\\n  if (precision > 0) {\\n    strParts.push('.');\\n    for (var i = 0; i < precision; i++) {\\n      strParts.push('0');\\n    }\\n  }\\n  return pattern.replace(/0.00/g, strParts.join(''));\\n};\\n\\n\\n/**\\n * Tier 1 currency information.\\n *\\n * The first number in the array is a combination of the precision mask and\\n * other flags. The precision mask indicates how many decimal places to show for\\n * the currency. Valid values are [0..7]. The position flag indicates whether\\n * the currency sign should be positioned after the number. Valid values are 0\\n * (before the number) or 16 (after the number). The space flag indicates\\n * whether a space should be inserted between the currency sign and number.\\n * Valid values are 0 (no space) and 32 (space).\\n *\\n * The number in the array is calculated by adding together the mask and flag\\n * values. For example:\\n *\\n * 0: no precision (0), currency sign first (0), no space (0)\\n * 2: two decimals precision (2), currency sign first (0), no space (0)\\n * 18: two decimals precision (2), currency sign last (16), no space (0)\\n * 50: two decimals precision (2), currency sign last (16), space (32)\\n *\\n * It's not recommended to read this data directly. Format numbers using\\n * {@link goog.i18n.NumberFormat} with\\n * {@link goog.i18n.NumberFormat.Format.CURRENCY} instead.\\n *\\n * @const {!Object<!Array<?>>}\\n */\\ngoog.i18n.currency.CurrencyInfo = {\\n  'AED': [2, 'dh', '\\\\u062f.\\\\u0625.', 'DH'],\\n  'ALL': [0, 'Lek', 'Lek'],\\n  'AUD': [2, '$', 'AU$'],\\n  'BDT': [2, '\\\\u09F3', 'Tk'],\\n  'BGN': [2, 'lev', 'lev'],\\n  'BRL': [2, 'R$', 'R$'],\\n  'CAD': [2, '$', 'C$'],\\n  'CDF': [2, 'FrCD', 'CDF'],\\n  'CHF': [2, 'CHF', 'CHF'],\\n  'CLP': [0, '$', 'CL$'],\\n  'CNY': [2, '\\u00a5', 'RMB\\u00a5'],\\n  'COP': [32, '$', 'COL$'],\\n  'CRC': [0, '\\\\u20a1', 'CR\\\\u20a1'],\\n  'CZK': [50, 'K\\\\u010d', 'K\\\\u010d'],\\n  'DKK': [50, 'kr.', 'kr.'],\\n  'DOP': [2, 'RD$', 'RD$'],\\n  'EGP': [2, '\\u00a3', 'LE'],\\n  'ETB': [2, 'Birr', 'Birr'],\\n  'EUR': [2, '\\u20ac', '\\u20ac'],\\n  'GBP': [2, '\\u00a3', 'GB\\u00a3'],\\n  'HKD': [2, '$', 'HK$'],\\n  'HRK': [2, 'kn', 'kn'],\\n  'HUF': [34, 'Ft', 'Ft'],\\n  'IDR': [0, 'Rp', 'Rp'],\\n  'ILS': [34, '\\\\u20AA', 'IL\\\\u20AA'],\\n  'INR': [2, '\\\\u20B9', 'Rs'],\\n  'IRR': [0, 'Rial', 'IRR'],\\n  'ISK': [0, 'kr', 'kr'],\\n  'JMD': [2, '$', 'JA$'],\\n  'JPY': [0, '\\u00a5', 'JP\\u00a5'],\\n  'KRW': [0, '\\\\u20A9', 'KR\\u20a9'],\\n  'LKR': [2, 'Rs', 'SLRs'],\\n  'LTL': [2, 'Lt', 'Lt'],\\n  'MNT': [0, '\\\\u20AE', 'MN\\u20ae'],\\n  'MVR': [2, 'Rf', 'MVR'],\\n  'MXN': [2, '$', 'Mex$'],\\n  'MYR': [2, 'RM', 'RM'],\\n  'NOK': [50, 'kr', 'NOkr'],\\n  'PAB': [2, 'B/.', 'B/.'],\\n  'PEN': [2, 'S/.', 'S/.'],\\n  'PHP': [2, '\\\\u20B1', 'PHP'],\\n  'PKR': [0, 'Rs', 'PKRs.'],\\n  'PLN': [50, 'z\\\\u0142', 'z\\\\u0142'],\\n  'RON': [2, 'RON', 'RON'],\\n  'RSD': [0, 'din', 'RSD'],\\n  'RUB': [50, '\\\\u20bd', 'RUB'],\\n  'SAR': [2, 'Rial', 'Rial'],\\n  'SEK': [50, 'kr', 'kr'],\\n  'SGD': [2, '$', 'S$'],\\n  'THB': [2, '\\\\u0e3f', 'THB'],\\n  'TRY': [2, 'TL', 'YTL'],\\n  'TWD': [2, 'NT$', 'NT$'],\\n  'TZS': [0, 'TSh', 'TSh'],\\n  'UAH': [2, '\\u0433\\u0440\\u043d.', 'UAH'],\\n  'USD': [2, '$', 'US$'],\\n  'UYU': [2, '$', '$U'],\\n  'VND': [48, '\\\\u20AB', 'VN\\\\u20AB'],\\n  'YER': [0, 'Rial', 'Rial'],\\n  'ZAR': [2, 'R', 'ZAR']\\n};\\n\\n\\n/**\\n * Tier 2 currency information.\\n *\\n * It's not recommended to read this data directly. Format numbers using\\n * {@link goog.i18n.NumberFormat} with\\n * {@link goog.i18n.NumberFormat.Format.CURRENCY} instead.\\n *\\n * @const {!Object<!Array<?>>}\\n */\\ngoog.i18n.currency.CurrencyInfoTier2 = {\\n  'AFN': [48, 'Af.', 'AFN'],\\n  'AMD': [32, 'Dram', 'dram'],\\n  'ANG': [2, 'NAf.', 'ANG'],\\n  'AOA': [2, 'Kz', 'Kz'],\\n  'ARS': [34, '$', 'AR$'],\\n  'AWG': [2, 'Afl.', 'Afl.'],\\n  'AZN': [34, '\\\\u20bc', 'AZN'],\\n  'BAM': [2, 'KM', 'KM'],\\n  'BBD': [2, '$', 'Bds$'],\\n  'BHD': [3, 'din', 'din'],\\n  'BIF': [0, 'FBu', 'FBu'],\\n  'BMD': [2, '$', 'BD$'],\\n  'BND': [2, '$', 'B$'],\\n  'BOB': [2, 'Bs', 'Bs'],\\n  'BSD': [2, '$', 'BS$'],\\n  'BTN': [2, 'Nu.', 'Nu.'],\\n  'BWP': [2, 'P', 'pula'],\\n  'BYR': [48, 'p.', 'BYR'],\\n  'BZD': [2, '$', 'BZ$'],\\n  'CNH': [2, '\\u00a5', 'RMB\\u00a5'],\\n  'CUC': [1, '$', 'CUC$'],\\n  'CUP': [2, '$', 'CU$'],\\n  'CVE': [2, 'CVE', 'Esc'],\\n  'DJF': [0, 'Fdj', 'Fdj'],\\n  'DZD': [2, 'din', 'din'],\\n  'ERN': [2, 'Nfk', 'Nfk'],\\n  'FJD': [2, '$', 'FJ$'],\\n  'FKP': [2, '\\u00a3', 'FK\\u00a3'],\\n  'GEL': [2, 'GEL', 'GEL'],\\n  'GHS': [2, 'GHS', 'GHS'],\\n  'GIP': [2, '\\u00a3', 'GI\\u00a3'],\\n  'GMD': [2, 'GMD', 'GMD'],\\n  'GNF': [0, 'FG', 'FG'],\\n  'GTQ': [2, 'Q', 'GTQ'],\\n  'GYD': [0, '$', 'GY$'],\\n  'HNL': [2, 'L', 'HNL'],\\n  'HTG': [2, 'HTG', 'HTG'],\\n  'IQD': [0, 'din', 'IQD'],\\n  'JOD': [3, 'din', 'JOD'],\\n  'KES': [2, 'Ksh', 'Ksh'],\\n  'KGS': [2, 'KGS', 'KGS'],\\n  'KHR': [2, 'Riel', 'KHR'],\\n  'KMF': [0, 'CF', 'KMF'],\\n  'KPW': [0, '\\\\u20A9KP', 'KPW'],\\n  'KWD': [3, 'din', 'KWD'],\\n  'KYD': [2, '$', 'KY$'],\\n  'KZT': [2, '\\\\u20B8', 'KZT'],\\n  'LAK': [0, '\\\\u20AD', '\\\\u20AD'],\\n  'LBP': [0, 'L\\u00a3', 'LBP'],\\n  'LRD': [2, '$', 'L$'],\\n  'LSL': [2, 'LSL', 'LSL'],\\n  'LYD': [3, 'din', 'LD'],\\n  'MAD': [2, 'dh', 'MAD'],\\n  'MDL': [2, 'MDL', 'MDL'],\\n  'MGA': [0, 'Ar', 'MGA'],\\n  'MKD': [2, 'din', 'MKD'],\\n  'MMK': [0, 'K', 'MMK'],\\n  'MOP': [2, 'MOP', 'MOP$'],\\n  'MRO': [0, 'MRO', 'MRO'],\\n  'MUR': [0, 'MURs', 'MURs'],\\n  'MWK': [2, 'MWK', 'MWK'],\\n  'MZN': [2, 'MTn', 'MTn'],\\n  'NAD': [2, '$', 'N$'],\\n  'NGN': [2, '\\\\u20A6', 'NG\\\\u20A6'],\\n  'NIO': [2, 'C$', 'C$'],\\n  'NPR': [2, 'Rs', 'NPRs'],\\n  'NZD': [2, '$', 'NZ$'],\\n  'OMR': [3, 'Rial', 'OMR'],\\n  'PGK': [2, 'PGK', 'PGK'],\\n  'PYG': [16, 'Gs.', 'PYG'],\\n  'QAR': [2, 'Rial', 'QR'],\\n  'RWF': [0, 'RF', 'RF'],\\n  'SBD': [2, '$', 'SI$'],\\n  'SCR': [2, 'SCR', 'SCR'],\\n  'SDG': [2, 'SDG', 'SDG'],\\n  'SHP': [2, '\\u00a3', 'SH\\u00a3'],\\n  'SLL': [0, 'SLL', 'SLL'],\\n  'SOS': [0, 'SOS', 'SOS'],\\n  'SRD': [2, '$', 'SR$'],\\n  'SSP': [2, '\\u00a3', 'SSP'],\\n  'STD': [0, 'Db', 'Db'],\\n  'SYP': [0, '\\u00a3', 'SY\\u00a3'],\\n  'SZL': [2, 'SZL', 'SZL'],\\n  'TJS': [2, 'Som', 'TJS'],\\n  'TND': [3, 'din', 'DT'],\\n  'TOP': [2, 'T$', 'T$'],\\n  'TTD': [2, '$', 'TT$'],\\n  'UGX': [0, 'UGX', 'UGX'],\\n  'UZS': [0, 'so\\\\u02bcm', 'UZS'],\\n  'VEF': [2, 'Bs', 'Bs'],\\n  'VUV': [0, 'VUV', 'VUV'],\\n  'WST': [2, 'WST', 'WST'],\\n  'XAF': [0, 'FCFA', 'FCFA'],\\n  'XCD': [2, '$', 'EC$'],\\n  'XOF': [0, 'CFA', 'CFA'],\\n  'XPF': [48, 'FCFP', 'FCFP'],\\n  'ZMW': [0, 'ZMW', 'ZMW'],\\n  'ZWD': [0, '$', 'Z$']\\n};\\n\"],\n\"names\":[\"goog\",\"provide\",\"i18n\",\"currency\",\"PRECISION_MASK_\",\"POSITION_FLAG_\",\"SPACE_FLAG_\",\"tier2Enabled_\",\"isAvailable\",\"goog.i18n.currency.isAvailable\",\"currencyCode\",\"CurrencyInfo\",\"addTier2Support\",\"goog.i18n.currency.addTier2Support\",\"key\",\"CurrencyInfoTier2\",\"getGlobalCurrencyPattern\",\"goog.i18n.currency.getGlobalCurrencyPattern\",\"info\",\"patternNum\",\"getCurrencyPattern_\",\"getGlobalCurrencySign\",\"goog.i18n.currency.getGlobalCurrencySign\",\"getLocalCurrencyPattern\",\"goog.i18n.currency.getLocalCurrencyPattern\",\"getLocalCurrencySign\",\"goog.i18n.currency.getLocalCurrencySign\",\"getPortableCurrencyPattern\",\"goog.i18n.currency.getPortableCurrencyPattern\",\"getPortableCurrencySign\",\"goog.i18n.currency.getPortableCurrencySign\",\"isPrefixSignPosition\",\"goog.i18n.currency.isPrefixSignPosition\",\"goog.i18n.currency.getCurrencyPattern_\",\"sign\",\"strParts\",\"precision\",\"push\",\"i\",\"unshift\",\"join\",\"adjustPrecision\",\"goog.i18n.currency.adjustPrecision\",\"pattern\",\"replace\"]\n}\n"]