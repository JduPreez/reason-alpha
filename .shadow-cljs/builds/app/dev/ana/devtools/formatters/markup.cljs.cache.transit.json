["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\r\ngoog.require('cljs.core');\r\ngoog.require('devtools.formatters.helpers');\r\ngoog.require('devtools.formatters.printing');\r\ngoog.require('devtools.formatters.state');\r\ngoog.require('devtools.formatters.templating');\r\ngoog.require('devtools.munging');\r\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23853 = arguments.length;\r\nvar i__4731__auto___23854 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23854 < len__4730__auto___23853)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23854]));\r\n\r\nvar G__23855 = (i__4731__auto___23854 + (1));\r\ni__4731__auto___23854 = G__23855;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((3) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((3)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__23502){\r\nvar vec__23503 = p__23502;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23503,(0),null);\r\nvar job_fn = ((function (vec__23503,max_level){\r\nreturn (function (){\r\nvar G__23506 = value;\r\nvar G__23507 = tag;\r\nvar G__23508 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\r\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__23506,G__23507,G__23508) : method.call(null,G__23506,G__23507,G__23508));\r\n});})(vec__23503,max_level))\r\n;\r\nif((!((max_level == null)))){\r\nvar _STAR_print_level_STAR__orig_val__23509 = cljs.core._STAR_print_level_STAR_;\r\nvar _STAR_print_level_STAR__temp_val__23510 = (max_level + (1));\r\ncljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__23510;\r\n\r\ntry{return job_fn();\r\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__23509;\r\n}} else {\r\nreturn job_fn();\r\n}\r\n});\r\n\r\ndevtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq23493){\r\nvar G__23494 = cljs.core.first(seq23493);\r\nvar seq23493__$1 = cljs.core.next(seq23493);\r\nvar G__23495 = cljs.core.first(seq23493__$1);\r\nvar seq23493__$2 = cljs.core.next(seq23493__$1);\r\nvar G__23496 = cljs.core.first(seq23493__$2);\r\nvar seq23493__$3 = cljs.core.next(seq23493__$2);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23494,G__23495,G__23496,seq23493__$3);\r\n});\r\n\r\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23858 = arguments.length;\r\nvar i__4731__auto___23859 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23859 < len__4730__auto___23858)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23859]));\r\n\r\nvar G__23860 = (i__4731__auto___23859 + (1));\r\ni__4731__auto___23859 = G__23860;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__23540){\r\nvar vec__23541 = p__23540;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23541,(0),null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\r\n});\r\n\r\ndevtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq23526){\r\nvar G__23527 = cljs.core.first(seq23526);\r\nvar seq23526__$1 = cljs.core.next(seq23526);\r\nvar G__23528 = cljs.core.first(seq23526__$1);\r\nvar seq23526__$2 = cljs.core.next(seq23526__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23527,G__23528,seq23526__$2);\r\n});\r\n\r\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23861 = arguments.length;\r\nvar i__4731__auto___23862 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23862 < len__4730__auto___23861)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23862]));\r\n\r\nvar G__23863 = (i__4731__auto___23862 + (1));\r\ni__4731__auto___23862 = G__23863;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__23565){\r\nvar vec__23566 = p__23565;\r\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23566,(0),null);\r\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\r\n});\r\n\r\ndevtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq23562){\r\nvar G__23563 = cljs.core.first(seq23562);\r\nvar seq23562__$1 = cljs.core.next(seq23562);\r\nvar G__23564 = cljs.core.first(seq23562__$1);\r\nvar seq23562__$2 = cljs.core.next(seq23562__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23563,G__23564,seq23562__$2);\r\n});\r\n\r\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23865 = arguments.length;\r\nvar i__4731__auto___23867 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23867 < len__4730__auto___23865)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23867]));\r\n\r\nvar G__23868 = (i__4731__auto___23867 + (1));\r\ni__4731__auto___23867 = G__23868;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\r\n});\r\n\r\ndevtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq23569){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23569));\r\n});\r\n\r\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23874 = arguments.length;\r\nvar i__4731__auto___23875 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23875 < len__4730__auto___23874)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23875]));\r\n\r\nvar G__23876 = (i__4731__auto___23875 + (1));\r\ni__4731__auto___23875 = G__23876;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\r\n});\r\n\r\ndevtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq23570){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23570));\r\n});\r\n\r\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23886 = arguments.length;\r\nvar i__4731__auto___23887 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23887 < len__4730__auto___23886)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23887]));\r\n\r\nvar G__23889 = (i__4731__auto___23887 + (1));\r\ni__4731__auto___23887 = G__23889;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__23599){\r\nvar vec__23600 = p__23599;\r\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23600,(0),null);\r\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23600,(1),null);\r\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23600,(2),null);\r\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23600,(3),null);\r\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\r\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\r\n});\r\n\r\ndevtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq23574){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23574));\r\n});\r\n\r\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23898 = arguments.length;\r\nvar i__4731__auto___23900 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23900 < len__4730__auto___23898)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23900]));\r\n\r\nvar G__23901 = (i__4731__auto___23900 + (1));\r\ni__4731__auto___23900 = G__23901;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\r\n});\r\n\r\ndevtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq23605){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23605));\r\n});\r\n\r\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23903 = arguments.length;\r\nvar i__4731__auto___23904 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23904 < len__4730__auto___23903)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23904]));\r\n\r\nvar G__23905 = (i__4731__auto___23904 + (1));\r\ni__4731__auto___23904 = G__23905;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\r\n});\r\n\r\ndevtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq23610){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23610));\r\n});\r\n\r\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23913 = arguments.length;\r\nvar i__4731__auto___23914 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23914 < len__4730__auto___23913)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23914]));\r\n\r\nvar G__23920 = (i__4731__auto___23914 + (1));\r\ni__4731__auto___23914 = G__23920;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\r\n});\r\n\r\ndevtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq23614){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23614));\r\n});\r\n\r\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\r\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__23617_SHARP_){\r\nreturn devtools.formatters.state.set_prevent_recursion(p1__23617_SHARP_,true);\r\n})], 0));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\r\n});\r\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\r\n});\r\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23926 = arguments.length;\r\nvar i__4731__auto___23927 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23927 < len__4730__auto___23926)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23927]));\r\n\r\nvar G__23932 = (i__4731__auto___23927 + (1));\r\ni__4731__auto___23927 = G__23932;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\r\n});\r\n\r\ndevtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq23622){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23622));\r\n});\r\n\r\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\r\n});\r\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\r\n});\r\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\r\n});\r\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\r\n});\r\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\r\nif(cljs.core.integer_QMARK_(number)){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\r\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\r\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\r\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\r\nvar inline_string = string.replace(re_nl,nl_marker);\r\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\r\nvar quote_string = ((function (dq,re_nl,nl_marker,inline_string,max_inline_string_size){\r\nreturn (function (s){\r\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\r\n});})(dq,re_nl,nl_marker,inline_string,max_inline_string_size))\r\n;\r\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\r\nif(should_abbreviate_QMARK_){\r\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\r\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\r\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\r\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\r\n} else {\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\r\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\r\n});\r\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\r\n});\r\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\r\nvar prepend_li_tag = (function (line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\r\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\r\n});\r\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23954 = arguments.length;\r\nvar i__4731__auto___23955 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23955 < len__4730__auto___23954)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23955]));\r\n\r\nvar G__23957 = (i__4731__auto___23955 + (1));\r\ni__4731__auto___23955 = G__23957;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__23633){\r\nvar vec__23634 = p__23633;\r\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23634,(0),null);\r\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\r\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\r\nvar prepend_li_tag = ((function (ol_tag,li_tag,vec__23634,no_margin_QMARK_){\r\nreturn (function (line){\r\nif(cljs.core.truth_(line)){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\r\n} else {\r\nreturn null;\r\n}\r\n});})(ol_tag,li_tag,vec__23634,no_margin_QMARK_))\r\n;\r\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\r\n});\r\n\r\ndevtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq23631){\r\nvar G__23632 = cljs.core.first(seq23631);\r\nvar seq23631__$1 = cljs.core.next(seq23631);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23632,seq23631__$1);\r\n});\r\n\r\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\r\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\r\n});\r\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\r\n});\r\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\r\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\r\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\r\n});\r\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\r\nvar work = data;\r\nvar index = starting_index;\r\nvar lines = cljs.core.PersistentVector.EMPTY;\r\nwhile(true){\r\nif(cljs.core.empty_QMARK_(work)){\r\nreturn lines;\r\n} else {\r\nvar G__23961 = cljs.core.rest(work);\r\nvar G__23962 = (index + (1));\r\nvar G__23963 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\r\nwork = G__23961;\r\nindex = G__23962;\r\nlines = G__23963;\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\r\nvar seq = cljs.core.seq(value);\r\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\r\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\r\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\r\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\r\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\r\nif((!(continue_QMARK_))){\r\nreturn lines;\r\n} else {\r\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\r\nvar start_index = (starting_index + max_number_body_items);\r\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\r\n}\r\n});\r\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\r\nvar has_continuation_QMARK_ = (starting_index > (0));\r\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\r\nif(has_continuation_QMARK_){\r\nreturn body_markup;\r\n} else {\r\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\r\n});\r\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___23984 = arguments.length;\r\nvar i__4731__auto___23987 = (0);\r\nwhile(true){\r\nif((i__4731__auto___23987 < len__4730__auto___23984)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___23987]));\r\n\r\nvar G__23989 = (i__4731__auto___23987 + (1));\r\ni__4731__auto___23987 = G__23989;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__23644){\r\nvar vec__23645 = p__23644;\r\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23645,(0),null);\r\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\r\nvar more_count = (cljs.core.count(items) - max_count);\r\nvar more_QMARK_ = (more_count > (0));\r\nvar separator = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\r\n}\r\n})();\r\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5718__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(temp__5718__auto__)){\r\nvar more_symbol = temp__5718__auto__;\r\nif(cljs.core.fn_QMARK_(more_symbol)){\r\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\r\n} else {\r\nreturn more_symbol;\r\n}\r\n} else {\r\nreturn devtools.formatters.helpers.get_more_marker(more_count);\r\n}\r\n})():null);\r\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\r\n}\r\n})(),(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\r\n}\r\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\r\n}\r\n})()], null)], 0));\r\nif(more_QMARK_){\r\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\r\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__4131__auto__ = details_markup;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn default_details_fn;\r\n}\r\n})()], 0));\r\n} else {\r\nreturn preview_markup;\r\n}\r\n});\r\n\r\ndevtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq23640){\r\nvar G__23641 = cljs.core.first(seq23640);\r\nvar seq23640__$1 = cljs.core.next(seq23640);\r\nvar G__23642 = cljs.core.first(seq23640__$1);\r\nvar seq23640__$2 = cljs.core.next(seq23640__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23641,G__23642,seq23640__$2);\r\n});\r\n\r\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\r\nvar body_fn = (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\r\n});\r\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\r\n});\r\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24010 = arguments.length;\r\nvar i__4731__auto___24011 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24011 < len__4730__auto___24010)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24011]));\r\n\r\nvar G__24012 = (i__4731__auto___24011 + (1));\r\ni__4731__auto___24011 = G__24012;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\r\n});\r\n\r\ndevtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq23648){\r\nvar G__23649 = cljs.core.first(seq23648);\r\nvar seq23648__$1 = cljs.core.next(seq23648);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23649,seq23648__$1);\r\n});\r\n\r\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\r\nif(cljs.core.fn_QMARK_(fn_obj)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\r\n}\r\n\r\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\r\nvar make_arity_markup_list = ((function (arities__$1){\r\nreturn (function (arity){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\r\n});})(arities__$1))\r\n;\r\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\r\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\r\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\r\n});\r\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\r\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\r\n});\r\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\r\nif(cljs.core.fn_QMARK_(fn_obj)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\r\n}\r\n\r\nvar vec__23657 = devtools.munging.parse_fn_info(fn_obj);\r\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23657,(0),null);\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23657,(1),null);\r\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\r\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\r\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\r\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\r\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\r\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\r\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\r\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\r\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\r\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\r\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\r\n});\r\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\r\n});\r\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\r\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\r\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\r\n});\r\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\r\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\r\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\r\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\r\n});\r\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24017 = arguments.length;\r\nvar i__4731__auto___24018 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24018 < len__4730__auto___24017)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24018]));\r\n\r\nvar G__24019 = (i__4731__auto___24018 + (1));\r\ni__4731__auto___24018 = G__24019;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__23668){\r\nvar vec__23669 = p__23668;\r\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23669,(0),null);\r\nvar vec__23676 = devtools.munging.parse_constructor_info(constructor_fn);\r\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23676,(0),null);\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23676,(1),null);\r\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23676,(2),null);\r\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\r\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = header_tag;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\r\n}\r\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\r\n});\r\n\r\ndevtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq23666){\r\nvar G__23667 = cljs.core.first(seq23666);\r\nvar seq23666__$1 = cljs.core.next(seq23666);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23667,seq23666__$1);\r\n});\r\n\r\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24020 = arguments.length;\r\nvar i__4731__auto___24021 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24021 < len__4730__auto___24020)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24021]));\r\n\r\nvar G__24022 = (i__4731__auto___24021 + (1));\r\ni__4731__auto___24021 = G__24022;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__23686){\r\nvar vec__23687 = p__23686;\r\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23687,(0),null);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\r\n});\r\n\r\ndevtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq23684){\r\nvar G__23685 = cljs.core.first(seq23684);\r\nvar seq23684__$1 = cljs.core.next(seq23684);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23685,seq23684__$1);\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\r\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\r\n});\r\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\r\n});\r\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24024 = arguments.length;\r\nvar i__4731__auto___24025 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24025 < len__4730__auto___24024)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24025]));\r\n\r\nvar G__24028 = (i__4731__auto___24025 + (1));\r\ni__4731__auto___24025 = G__24028;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__23703){\r\nvar vec__23704 = p__23703;\r\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23704,(0),null);\r\nvar max_fns__$1 = (function (){var or__4131__auto__ = max_fns;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\r\n}\r\n})();\r\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\r\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\r\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\r\nif(more_QMARK_){\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\r\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\r\n} else {\r\nreturn preview_markup;\r\n}\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq23698){\r\nvar G__23699 = cljs.core.first(seq23698);\r\nvar seq23698__$1 = cljs.core.next(seq23698);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23699,seq23698__$1);\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\r\n});\r\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\r\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\r\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\r\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\r\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\r\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (protocol_obj,ns_markups_list,native_markups_list,methods$){\r\nreturn (function (p__23715){\r\nvar vec__23716 = p__23715;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23716,(0),null);\r\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23716,(1),null);\r\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\r\n});})(protocol_obj,ns_markups_list,native_markups_list,methods$))\r\n,methods$);\r\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\r\n});\r\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24034 = arguments.length;\r\nvar i__4731__auto___24035 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24035 < len__4730__auto___24034)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24035]));\r\n\r\nvar G__24037 = (i__4731__auto___24035 + (1));\r\ni__4731__auto___24035 = G__24037;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__23736){\r\nvar vec__23737 = p__23736;\r\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23737,(0),null);\r\nvar map__23740 = protocol;\r\nvar map__23740__$1 = (((((!((map__23740 == null))))?(((((map__23740.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__23740.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23740):map__23740);\r\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23740__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\r\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23740__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\r\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23740__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\r\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23740__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\r\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__4131__auto__ = tag;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\r\n}\r\n})(),name], null);\r\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\r\nif((!((obj == null)))){\r\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\r\n} else {\r\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\r\n}\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq23721){\r\nvar G__23722 = cljs.core.first(seq23721);\r\nvar seq23721__$1 = cljs.core.next(seq23721);\r\nvar G__23723 = cljs.core.first(seq23721__$1);\r\nvar seq23721__$2 = cljs.core.next(seq23721__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23722,G__23723,seq23721__$2);\r\n});\r\n\r\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\r\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\r\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\r\n});\r\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24047 = arguments.length;\r\nvar i__4731__auto___24048 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24048 < len__4730__auto___24047)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24048]));\r\n\r\nvar G__24049 = (i__4731__auto___24048 + (1));\r\ni__4731__auto___24048 = G__24049;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__23748){\r\nvar vec__23749 = p__23748;\r\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23749,(0),null);\r\nvar max_protocols__$1 = (function (){var or__4131__auto__ = max_protocols;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\r\n}\r\n})();\r\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\r\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\r\n});\r\n\r\ndevtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq23745){\r\nvar G__23746 = cljs.core.first(seq23745);\r\nvar seq23745__$1 = cljs.core.next(seq23745);\r\nvar G__23747 = cljs.core.first(seq23745__$1);\r\nvar seq23745__$2 = cljs.core.next(seq23745__$1);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23746,G__23747,seq23745__$2);\r\n});\r\n\r\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__23754_SHARP_){\r\nreturn devtools.formatters.state.set_managed_print_level(p1__23754_SHARP_,(1));\r\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\r\n});\r\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\r\nvar vec__23756 = field;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23756,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23756,(1),null);\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\r\n});\r\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24052 = arguments.length;\r\nvar i__4731__auto___24053 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24053 < len__4730__auto___24052)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24053]));\r\n\r\nvar G__24054 = (i__4731__auto___24053 + (1));\r\ni__4731__auto___24053 = G__24054;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\ndevtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__23774){\r\nvar vec__23775 = p__23774;\r\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23775,(0),null);\r\nif((cljs.core.count(fields) === (0))){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\r\n} else {\r\nvar max_fields__$1 = (function (){var or__4131__auto__ = max_fields;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\r\n}\r\n})();\r\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\r\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (max_fields__$1,more_QMARK_,vec__23775,max_fields){\r\nreturn (function (p__23782){\r\nvar vec__23784 = p__23782;\r\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23784,(0),null);\r\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23784,(1),null);\r\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\r\n});})(max_fields__$1,more_QMARK_,vec__23775,max_fields))\r\n,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\r\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\r\n}\r\n});\r\n\r\ndevtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\ndevtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq23761){\r\nvar G__23762 = cljs.core.first(seq23761);\r\nvar seq23761__$1 = cljs.core.next(seq23761);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23762,seq23761__$1);\r\n});\r\n\r\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\r\nvar protocols = devtools.munging.scan_protocols(obj);\r\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\r\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\r\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\r\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\r\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\r\n});\r\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\r\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\r\nvar vec__23828 = devtools.munging.parse_constructor_info(constructor_fn);\r\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23828,(0),null);\r\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23828,(1),null);\r\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23828,(2),null);\r\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\r\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\r\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\r\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\r\nvar fields_details_markup_fn = ((function (constructor_fn,vec__23828,_ns,_name,basis,custom_printing_QMARK_,type_markup,fields,fields_markup){\r\nreturn (function (){\r\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\r\n});})(constructor_fn,vec__23828,_ns,_name,basis,custom_printing_QMARK_,type_markup,fields,fields_markup))\r\n;\r\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\r\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\r\n});\r\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\r\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\r\n});\r\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\r\nvar or__4131__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\r\n}\r\n});\r\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\r\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\r\nif(cljs.core.seqable_QMARK_(target)){\r\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\r\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\r\n} else {\r\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\r\n}\r\n});\r\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\r\nvar temp__5718__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\r\nif(cljs.core.truth_(temp__5718__auto__)){\r\nvar body = temp__5718__auto__;\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\r\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\r\n} else {\r\nreturn body;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n});\r\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\r\nreturn devtools.formatters.markup._LT_nil_GT_();\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\r\nreturn devtools.formatters.markup._LT_bool_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\r\nreturn devtools.formatters.markup._LT_string_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\r\nreturn devtools.formatters.markup._LT_number_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\r\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\r\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\r\nreturn devtools.formatters.markup._LT_instance_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\r\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\r\n} else {\r\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\r\nreturn devtools.formatters.markup._LT_function_GT_(value);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\r\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\r\ndevtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]);\r\n} else {\r\n}\r\n\r\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^K",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^L","~:macro",true]],"^R","^L","~:op","^T","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^Y","~$devtools.formatters.printing","^Z","~$devtools.formatters.state","^[","~$devtools.formatters.templating","^10","~$devtools.munging","^11","~$munging","^11","~$cljs.core","^13","~$goog","^14"],"~:seen",["^N",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^Y","~$should-render?","^Y","~$set-managed-print-level","^[","~$bool?","^Y","~$cljs-instance?","^Y","~$get-surrogate-body","^10","~$get-constructor","^Y","~$managed-print-via-writer","^Z","~$pref","^Y","~$wrap-arity","^Y","~$cljs-function?","^Y","~$get-more-marker","^Y","~$fetch-fields-values","^Y","~$managed-print-via-protocol","^Z","~$abbreviated?","^Y","~$get-surrogate-header","^10","~$reset-depth-limits","^[","~$get-surrogate-target","^10","~$set-prevent-recursion","^[","~$get-surrogate-start-index","^10","~$abbreviate-long-string","^Y","~$cljs-type?","^Y","~$should-render-instance?","^Y"],"^17",["^ ","^L","^L","^13","^13","^11","^11","^12","^11"],"~:form",["^Q",["~$ns","^L",["^Q",["^17",["^L","~:refer",["^K"]]]],["^Q",["^16",["^Y","^1R",["^1<","^1C","^1N","^1=","^1O","^19","^1G","^1M","^1?","^1A","^1:","^1D","^1B","^1E"]],["^Z","^1R",["^1@","^1F"]],["^[","^1R",["^1K","^1;","^1I"]],["^10","^1R",["^1>","^1J","^1L","^1H"]],["^11","~:as","^12"]]]]],"~:flags",["^ ","^17",["^N",[]],"^16",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^Y","^Z","^[","^10","^11"]],"^T","^L","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1574163713002,"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (integer? number)\n    [:integer-tag number]\n    [:float-tag number]))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;;;AAgBA,AAAA,AAIA,AAAA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAAYW,AAAOC,AAAMC;AAA/B,AAAA,AAAAX,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAsCY;AAAtC,AACE,AAAA,AAAMC;;AAAN,AAAc,AAAAC,AAAQJ;AAARK,AAAcJ;AAAdK,AAAkB,AAACC,AAAAA,AAAAA;AAAnB,AAAA,AAAAH,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAACP,AAAAA,AAAAA;;;AAAf,AACE,AAAI,AAAA,AAAA,AAAOG;AACT,AAAAM,AAAUE;AAAVD,AAAwB,AAAA,AAAKP;AAA7B,AAAA,AAAAO,AAAUC;;AAAV,AAAA,AACE,AAACP;AADH,AAAA,AAAAK,AAAUE;;AAEV,AAACP;;;;AALP,AAAA,AAAA,AAAMf;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAK,AAAA,AAAAH,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAM,AAAA;AAAA,AAAA,AAAAA,AAAAL,AAAAG,AAAAC,AAAAL;;;AAAA,AAOA,AAAA,AAAA,AAAAV,AAAM6B;AAAN,AAAA,AAAA5B,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA4B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAzB;;;AAAA,AAAA,AAAA,AAAA,AAAA0B,AAAMD,AAAkBX,AAAMC;AAA9B,AAAA,AAAAY,AAAAD;AAAA,AAAArB,AAAAsB,AAAA,AAAA,AAAqCX;AAArC,AACE,AAACe,AAAWC,AAAyBlB,AAAMC,AAAIC;;;AADjD,AAAA,AAAA,AAAMS;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAArB,AAAAoB;AAAAA,AAAA,AAAAnB,AAAAmB;AAAAE,AAAA,AAAAtB,AAAAoB;AAAAA,AAAA,AAAAnB,AAAAmB;AAAA,AAAA,AAAAhB,AAAA;AAAA,AAAA,AAAAA,AAAAiB,AAAAC,AAAAF;;;AAAA,AAGA,AAAA,AAAA,AAAAhC,AAAMqC;AAAN,AAAA,AAAApC,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAoC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAjC;;;AAAA,AAAA,AAAA,AAAA,AAAAkC,AAAMD,AAAoBnB,AAAMC;AAAhC,AAAA,AAAAoB,AAAAD;AAAA,AAAA7B,AAAA8B,AAAA,AAAA,AAAuCnB;AAAvC,AACE,AAACe,AAAWQ,AAA2BzB,AAAMC,AAAIC;;;AADnD,AAAA,AAAA,AAAMiB;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAA7B,AAAA4B;AAAAA,AAAA,AAAA3B,AAAA2B;AAAAE,AAAA,AAAA9B,AAAA4B;AAAAA,AAAA,AAAA3B,AAAA2B;AAAA,AAAA,AAAAxB,AAAA;AAAA,AAAA,AAAAA,AAAAyB,AAAAC,AAAAF;;;AAAA,AAKA,AAAA,AAAA,AAAAxC,AAAM4C;AAAN,AAAA,AAAA3C,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA2C,AAAAxC;;;AAAA,AAAA,AAAA,AAAA,AAAMwC,AAAgBI;AAAtB,AACE,AAAMC,AAAa,AAAA,AAAA,AAACC,AAA+BF;AAAnD,AAAA,AAAA,AAAA,AACsCC;;;AAFxC,AAAA,AAAA,AAAML;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AAIA,AAAA,AAAA,AAAA7C,AAAMmD;AAAN,AAAA,AAAAlD,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAkD,AAAA/C;;;AAAA,AAAA,AAAA,AAAA,AAAM+C,AAAmBE;AAAzB,AACE,AAAA,AAAA,AAACH,AAAqBG;;;AADxB,AAAA,AAAA,AAAMF;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAK;;;AAAA,AAGA,AAAA,AAAA,AAAApD,AAAMsD;AAAN,AAAA,AAAArD,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAqD,AAAAlD;;;AAAA,AAAA,AAAA,AAAA,AAAAmD,AAAMD;AAAN,AAAA,AAAAE,AAAAD;AAAA,AAAA9C,AAAA+C,AAAA,AAAA,AAAsBE;AAAtB,AAAAjD,AAAA+C,AAAA,AAAA,AAA6BG;AAA7B,AAAAlD,AAAA+C,AAAA,AAAA,AAAoCI;AAApC,AAAAnD,AAAA+C,AAAA,AAAA,AAAyCK;AAAzC,AACE,AAAMF,AAAO,AAAI,AAAA,AAAA,AAAOC,AAAM,AAACE,AAAaH,AAAQA;AAApD,AACE,AAACI,AAAgBL,AAAOC,AAAOC,AAAKC;;;AAFxC,AAAA,AAAA,AAAMP;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAR,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAU;;;AAAA,AAIA,AAAA,AAAA,AAAAzD,AAAMgE;AAAN,AAAA,AAAA/D,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA+D,AAAA5D;;;AAAA,AAAA,AAAA,AAAA,AAAM4D,AAAeX;AAArB,AACE,AAAA,AAAA,AAACH,AAAqBG;;;AADxB,AAAA,AAAA,AAAMW;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAlB,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAkB;;;AAAA,AAGA,AAAA,AAAA,AAAAjE,AAAMkE;AAAN,AAAA,AAAAjE,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAiE,AAAA9D;;;AAAA,AAAA,AAAA,AAAA,AAAM8D,AAAyBb;AAA/B,AACE,AAACe,AAAY,AAACC,AAAMf,AAAYD;;;AADlC,AAAA,AAAA,AAAMa;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAApB,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAoB;;;AAAA,AAGA,AAAA,AAAA,AAAAnE,AAAMsE;AAAN,AAAA,AAAArE,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAqE,AAAAlE;;;AAAA,AAAA,AAAA,AAAA,AAAMkE,AAAwBtB;AAA9B,AACE,AAAA,AAAA,AAAA,AAAA,AAACwB,AAAuE,AAAA,AAAA,AAACtB,AAAsCF;;;AADjH,AAAA,AAAA,AAAMsB;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAxB,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAwB;;;AAAA,AAGA,AAAA,AAAME,AAAoBf;AAA1B,AACE,AAAMgB,AAAU,AAAA,AAAAC,AAACP,AAAYV;AAAb,AAAqB,AAAAiB,AAAA,AAACC;;AAAtC,AAAA,AAAA,AAAA,AAAA,AAAA,AACqFF;;AAEvF,AAAA,AAAMG,AAAmBnB;AAAzB,AACE,AAACU,AAAY,AAAA,AAAA,AAACL,AAAgBL,AAAwCoB;;AAIxE,AAAA,AAAA,AAAA9E,AAAM+E;AAAN,AAAA,AAAA9E,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA8E,AAAA3E;;;AAAA,AAAA,AAAA,AAAA,AAAM2E,AAAe/B;AAArB,AACE,AAAA,AAAA,AAACE,AAAwBF;;;AAD3B,AAAA,AAAA,AAAM+B;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAjC,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAiC;;;AAAA,AAGA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAMC,AAAQC;AAAd,AAAA,AAAA,AACa,AAAKA;;AAElB,AAAA,AAAMC,AAAWC;AAAjB,AAAA,AAAA,AACgB,AAAKA;;AAErB,AAAA,AAAMC,AAAUC;AAAhB,AAAA,AAAA,AACe,AAAKA;;AAEpB,AAAA,AAAMC,AAAUC;AAAhB,AACE,AAAI,AAACC,AAASD;AAAd,AAAA,AACgBA;;AADhB,AAAA,AAEcA;;;AAIhB,AAAA,AAAME,AAAUC;AAAhB,AACE,AAAMC,AAAG,AAAA,AAACC;AACJC,AAAM,AAAAC,AAAA,AAAA;AACNC,AAAU,AAAA,AAACH;AACXI,AAAc,AAAUN,AAAOG,AAAME;AACrCE,AAAuB,AAAG,AAAA,AAACL,AAA2B,AAAA,AAACA;AACvDM,AAAa;AAAKC;AAAL,AAAQ,AAAKR,AAAGQ,AAAER;;;AAC/BS,AAAmB,AAAG,AAACC,AAAML,AAAeC;AANlD,AAOE,AAAIG;AACF,AAAME,AAAmB,AAACC,AAAuBP,AACA,AAAA,AAACJ,AACD,AAAA,AAACA,AACD,AAAA,AAACA;AAHlD,AAAA,AAIMY,AAAuC,AAACN,AAAaI;AACrDG,AAAuB,AAAUf,AAAOG,AAAM,AAAA,AAAKE;AALzD,AAAA,AAMMW,AAAqCD;AAN3C,AAOE,AAACnC,AAAsBoB,AAAOc,AAA0BE;;AAR5D,AAAA,AASe,AAACR,AAAaF;;;AAIjC,AAAA,AAAMW,AAAW3F;AAAjB,AACE,AAAA,AAAC4F,AAAiB5F,AAAkB,AAAA,AAAC4E;;AAIvC,AAAA,AAAMiB,AAAQC;AAAd,AAAA,AAAA,AACaA;;AAEb,AAAA,AAAMC,AAAgBC;AAAtB,AACE,AAAMC,AAAe,AAAKC;AAAL,AACE,AAAIA;AACF,AAAA,AAAA,AAAClE,AAAyBkE;;AAD5B;;;AAEjBC,AAAc,AAACC,AAAKH,AAAeD;AAHzC,AAIE,AAACH,AAAO,AAAA,AAAA,AAAC7D,AAAoCmE;;AAEjD,AAAA,AAAA,AAAArH,AAAMuH;AAAN,AAAA,AAAAtH,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAsH,AAAA,AAAA,AAAA,AAAAnH;;;AAAA,AAAA,AAAA,AAAA,AAAAoH,AAAMD,AAAiBL;AAAvB,AAAA,AAAAO,AAAAD;AAAA,AAAA/G,AAAAgH,AAAA,AAAA,AAAwCG;AAAxC,AACE,AAAMC,AAAO,AAAA,AAAA,AAAID;AACXE,AAAO,AAAA,AAAA,AAAIF;AACXT,AAAe;AAAKC;AAAL,AACE,AAAIA;AACF,AAAA,AAAClE,AAAQ4E,AAAQV;;AADnB;;;;AAEjBW,AAAc,AAACT,AAAKH,AAAeD;AALzC,AAME,AAAA,AAAChE,AAAQ2E,AAAQE;;;AAPrB,AAAA,AAAA,AAAMR;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAA/G,AAAA8G;AAAAA,AAAA,AAAA7G,AAAA6G;AAAA,AAAA,AAAA1G,AAAA;AAAA,AAAA,AAAAA,AAAA2G,AAAAD;;;AAAA,AASA,AAAA,AAAMM,AAA2BC;AAAjC,AACE,AAAA,AAAA,AAACV,AAAkB,AAACnD,AAAY6D;;AAIlC,AAAA,AAAMC,AAAShH;AAAf,AAAA,AAAA,AAAA,AACcA;;AAEd,AAAA,AAAOiH,AAAWC,AAAMlH;AAAxB,AACE,AAAMmH,AAAa,AAACH,AAAQE;AACtBE,AAAa,AAAA,AAACxB,AAAiB5F,AAAgB,AAAA,AAAC4E;AADtD,AAAA,AAEGuC,AAAaC;;AAGlB,AAAA,AAAOC,AAAoBC,AAAKC;AAAhC,AACE,AAAOC,AAAKF;AACLJ,AAAMK;AADb,AAEOE;;AAFP,AAGE,AAAI,AAACC,AAAOF;AACVC;;AACA,AAAO,AAACE,AAAKH;AAAM,AAAA,AAAKN;AAAO,AAACU,AAAKH,AAAM,AAACR,AAAUC,AAAM,AAACxH,AAAM8H;;;;;;;;;AAEzE,AAAA,AAAOK,AAAY7H,AAAMuH;AAAzB,AACE,AAAMO,AAAI,AAACjG,AAAI7B;AACT+H,AAAsB,AAAA,AAACnD;AACvBoD,AAAM,AAACC,AAAKF,AAAsBD;AAClCI,AAAK,AAACC,AAAKJ,AAAsBD;AACjCL,AAAM,AAACJ,AAAmBW,AAAMT;AAChCa,AAAU,AAAK,AAACV,AAAO,AAAA,AAACO,AAAOC;AALrC,AAME,AAAA,AAAQE;AACNX;;AACA,AAAA,AAAA,AAAA,AAAMY;AACA1F,AAAY,AAAG4E,AAAeQ;AAC9BO,AAAY,AAAA,AAAChF,AAAsB4E,AAAKG,AAA0B1F;AAFxE,AAGE,AAAA,AAACiF,AAAKH,AAAOa;;;AAErB,AAAA,AAAMC,AAAWvI,AAAMuH;AAAvB,AACE,AAAMiB,AAAkB,AAAA,AAAMjB;AACxBkB,AAAY,AAACC,AAAgB,AAACb,AAAW7H,AAAMuH,AAAgBiB;AADrE,AAEE,AAAIA;AACFC;;AACA,AAAC5C,AAAO4C;;;AAId,AAAA,AAAME,AAAgBC,AAAMC;AAA5B,AACE,AAAC9C,AAAe,AAAC+C,AAAIC,AAAKH;;AAE5B,AAAA,AAAA,AAAA9J,AAAMkK;AAAN,AAAA,AAAAjK,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAiK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA9J;;;AAAA,AAAA,AAAA,AAAA,AAAA+J,AAAMD,AAAQJ,AAAMU;AAApB,AAAA,AAAAJ,AAAAD;AAAA,AAAA1J,AAAA2J,AAAA,AAAA,AAAiCK;AAAjC,AACE,AAAMC,AAAc,AAACvB,AAAKqB,AAAUV;AAC9Ba,AAAW,AAAG,AAACpE,AAAMuD,AAAOU;AAC5BI,AAAM,AAAA,AAAMD;AACZE,AAAU,AAAAC,AAAI,AAAA,AAAYL;AAAhB,AAAA,AAAAK;AAAAA;;AAAA;;;AACVC,AAAY,AAAIH,AACF,AAAAI,AAAqB,AAAA,AAAcP;AAAnC,AAAA,AAAAO;AAAA,AAAAA,AAASD;AAAT,AACE,AAAI,AAACE,AAAIF;AACP,AAACA,AAAAA,AAAAA,AAAYJ,AAAAA;;AACbI;;;AACF,AAACG,AAAgBP;;AALrB;AAMZQ,AAAe,AAAA,AAACC,AAAQ,AAAAN,AAAI,AAAA,AAAML;AAAV,AAAA,AAAAK;AAAAA;;AAAA;;AACA,AAAAA,AAAI,AAAA,AAAcL;AAAlB,AAAA,AAAAK;AAAAA;;AAAA;;AADT,AAEQ,AAACO,AAAUR,AAAUH,AACrB,AAAA,AAAA,AAAIE,AAAOC,AAAUE,AACpB,AAAAD,AAAI,AAAA,AAAeL;AAAnB,AAAA,AAAAK;AAAAA;;AAAA;;;AAd9B,AAeE,AAAIF;AACF,AAAMhE,AAAe,AAAA,AAAU6D;AACzBa,AAAmB,AAACC,AAAQ1B,AAAeC,AAAMW;AADvD,AAEE,AAAA,AAACjG,AAA0B2G,AAAe,AAAAL,AAAIlE;AAAJ,AAAA,AAAAkE;AAAAA;;AAAmBQ;;;;AAC/DH;;;;AApBN,AAAA,AAAA,AAAMjB;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAA1J,AAAAyJ;AAAAA,AAAA,AAAAxJ,AAAAwJ;AAAAE,AAAA,AAAA3J,AAAAyJ;AAAAA,AAAA,AAAAxJ,AAAAwJ;AAAA,AAAA,AAAArJ,AAAA;AAAA,AAAA,AAAAA,AAAAsJ,AAAAC,AAAAF;;;AAAA,AAwBA,AAAA,AAAMmB,AAAQC;AAAd,AACE,AAAMC,AAAQ;AAAA,AAAA,AAAA,AAAuB,AAAC7E,AAAU4E;;AAAhD,AAAA,AAAA,AACM9H;AADN,AAAA,AAAA,AAEuB,AAACa,AAAsBiH,AAAS9H,AAAO+H;;AAEhE,AAAA,AAAA,AAAA1L,AAAM2L;AAAN,AAAA,AAAA1L,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA0L,AAAA,AAAA,AAAA,AAAAvL;;;AAAA,AAAA,AAAA,AAAA,AAAMuL,AAAgBF,AAAWzI;AAAjC,AACE,AAAA,AAAA,AAAA,AAACoI,AAA2BpI,AAAU,AAACwI,AAAOC;;;AADhD,AAAA,AAAA,AAAME;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAjL,AAAAgL;AAAAA,AAAA,AAAA/K,AAAA+K;AAAA,AAAA,AAAA5K,AAAA;AAAA,AAAA,AAAAA,AAAA6K,AAAAD;;;AAAA,AAKA,AAAA,AAAMG,AAAoBC,AAAOC,AAAGC,AAAMC,AAAQC;AAAlD,AAAA,AACS,AAACnB,AAAIe;AADd;AAAA,AAAA,AAAA,AAAAF,AAAA;;;AAEE,AAAMK,AAAQ,AAACnC,AAAIqC,AAAWF;AACxBG,AAAuB;AAAKC;AAAL,AAAA,AAAA,AAAA,AAAA,AAAA,AACoCH,AACnBG;;;AACxCC,AAAuB,AAAA,AAAI,AAAA,AAAG,AAACjG,AAAM4F,AAAY,AAACnC,AAAIsC,AAAuBH;AAC7EM,AAAgB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAQ,AAAC7D,AAAOqD,AAA+BA;AALrE,AAAA,AAMMS,AAAkC,AAACjI,AAAmBuH;AAN5D,AAOE,AAAC/E,AAAe,AAAA,AAAC/D,AAAOsJ,AAAwBC,AAAgBC;;AAEpE,AAAA,AAAMC,AAAWR;AAAjB,AACE,AAAMS,AAAa,AAAA,AAAG,AAACrG,AAAM4F;AAA7B,AAAA,AAAA,AACgB,AAACE,AAAW,AAAIO,AACF,AAAA,AAAC9G,AACD,AAAClF,AAAMuL;;AAEvC,AAAA,AAAMU,AAAYb;AAAlB,AAAA,AACS,AAACf,AAAIe;AADd;AAAA,AAAA,AAAA,AAAAF,AAAA;;;AAEE,AAAAgB,AAAgB,AAACE,AAAsBhB;AAAvC,AAAAvL,AAAAqM,AAAA,AAAA,AAAOb;AAAP,AAAAxL,AAAAqM,AAAA,AAAA,AAAUC;AACJE,AAAQ,AAACrE,AAAOmE;AAChBG,AAAc,AAAA,AAACpH;AACfqH,AAAY,AAAA,AAACrH;AACbsH,AAAmB,AAAA,AAACtH;AACpBqG,AAAQ,AAAA,AAACkB,AAAwBrB,AAAYkB,AAAcE,AAAmBD;AAC9EG,AAAe,AAACX,AAAUR;AAC1BoB,AAAY,AAAA,AAAA,AAAA,AAAA,AAAQN,AAAsBF;AAC1CS,AAAY,AAAA,AAAA,AAAIP;AARtB,AAAA,AASMQ,AAA8BD,AAAYD;AAThD,AAAA,AAUMpC,AAA+BsC,AAAcH;AAC7CI,AAAW,AAACC,AAAQ5B,AAAmBC,AAAOC,AAAGc,AAAKZ,AAAQsB;AAXpE,AAYE,AAACjJ,AAAsBwH,AAAOb,AAAeuC;;AAIjD,AAAA,AAAME,AAAmBC;AAAzB,AAAA,AAAA,AACwB,AAACC,AAAKD;;AAE9B,AAAA,AAAME,AAAcC;AAApB,AACE,AAAMC,AAAa,AAACjE,AAAI4D,AAAkBI;AACpCE,AAAiB,AAAA,AAAC7C,AAAqC4C;AAD7D,AAEE,AAAA,AAAA,AAAC/K,AAAyBgL;;AAE9B,AAAA,AAAMC,AAAgBC,AAAenC,AAAGC,AAAM8B;AAA9C,AACE,AAAMK,AAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAQ,AAACzF,AAAOqD,AAA+BA;AACzDqC,AAAa,AAAA,AAAA,AAAA,AAAA,AAAI,AAAC1F,AAAOoF,AAEG,AAACD,AAAaC;AAHhD,AAAA,AAIMO,AAA4B,AAAC9J,AAAmB2J;AAJtD,AAKE,AAAA,AAACnH,AAAgBqH,AAAaD,AAAUE;;AAE5C,AAAA,AAAA,AAAAvO,AAAMwO;AAAN,AAAA,AAAAvO,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAuO,AAAA,AAAA,AAAA,AAAApO;;;AAAA,AAAA,AAAA,AAAA,AAAAqO,AAAMD,AAAQJ;AAAd,AAAA,AAAAM,AAAAD;AAAA,AAAAhO,AAAAiO,AAAA,AAAA,AAAgCG;AAAhC,AACE,AAAAC,AAAsB,AAACC,AAA+BX;AAAtD,AAAA3N,AAAAqO,AAAA,AAAA,AAAO7C;AAAP,AAAAxL,AAAAqO,AAAA,AAAA,AAAU/B;AAAV,AAAAtM,AAAAqO,AAAA,AAAA,AAAed;AAAf,AAAA,AACMT,AAA4BR;AADlC,AAEM5B,AAAgB,AAAAL,AAAI+D;AAAJ,AAAA,AAAA/D;AAAAA;;AAAA;;AAFtB,AAEoEyC;AAC9DyB,AAAkB,AAACrB,AAAQQ,AAAeC,AAAenC,AAAGc,AAAKiB;AAHvE,AAAA,AAAA,AAAA,AAAA,AAAA,AAMkB,AAACxJ,AAAsB4J,AAAejD,AAAe6D;;;AAPzE,AAAA,AAAA,AAAMR;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAhO,AAAA+N;AAAAA,AAAA,AAAA9N,AAAA8N;AAAA,AAAA,AAAA3N,AAAA;AAAA,AAAA,AAAAA,AAAA4N,AAAAD;;;AAAA,AASA,AAAA,AAAA,AAAA3O,AAAMiP;AAAN,AAAA,AAAAhP,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAgP,AAAA,AAAA,AAAA,AAAA7O;;;AAAA,AAAA,AAAA,AAAA,AAAA8O,AAAMD,AAAmBb;AAAzB,AAAA,AAAAe,AAAAD;AAAA,AAAAzO,AAAA0O,AAAA,AAAA,AAA2CN;AAA3C,AAAA,AAAA,AACwB,AAACS,AAAOlB,AAAeS;;;AAD/C,AAAA,AAAA,AAAMI;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAzO,AAAAwO;AAAAA,AAAA,AAAAvO,AAAAuO;AAAA,AAAA,AAAApO,AAAA;AAAA,AAAA,AAAAA,AAAAqO,AAAAD;;;AAAA,AAKA,AAAA,AAAMG,AAAyBC;AAA/B,AACE,AAACpL,AAAYoL;;AAEf,AAAA,AAAMC,AAAmCC;AAAzC,AACE,AAACzI,AAAe,AAAC+C,AAAIuF,AAAwBG;;AAE/C,AAAA,AAAA,AAAA1P,AAAM2P;AAAN,AAAA,AAAA1P,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA0P,AAAA,AAAA,AAAA,AAAAvP;;;AAAA,AAAA,AAAA,AAAA,AAAAwP,AAAMD,AAA2BD;AAAjC,AAAA,AAAAG,AAAAD;AAAA,AAAAnP,AAAAoP,AAAA,AAAA,AAAwCG;AAAxC,AACE,AAAMA,AAAQ,AAAAlF,AAAIkF;AAAJ,AAAA,AAAAlF;AAAAA;;AAAY,AAAA,AAAChF;;;AACrB8E,AAAM,AAAG,AAACrE,AAAMmJ,AAAKM;AACrBC,AAAiB,AAACjG,AAAIuF,AAAwB,AAACpG,AAAK6G,AAAQN;AAC5DvE,AAAe,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACO,AAAA,AAACC,AAAyD4E,AAC1D,AAAA,AAAA,AAAA,AAAIrF;AALjC,AAOE,AAAIA;AACF,AAAMoE,AAAkB,AAACkB,AAAQT,AAAkCC;AAAnE,AACE,AAAA,AAAClL,AAA0B2G,AAAe6D;;AAC5C7D;;;;AAXN,AAAA,AAAA,AAAMwE;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAnP,AAAAkP;AAAAA,AAAA,AAAAjP,AAAAiP;AAAA,AAAA,AAAA9O,AAAA;AAAA,AAAA,AAAAA,AAAA+O,AAAAD;;;AAAA,AAaA,AAAA,AAAMK,AAAmBpD,AAAKZ;AAA9B,AAAA,AAAA,AAAA,AAAA,AAAA,AAG8BY,AAC3B,AAAC4C,AAA0BxD;;AAE9B,AAAA,AAAMiE,AAAoBC,AAAIpE,AAAGC,AAAMoE,AAASC;AAAhD,AACE,AAAMC,AAAa,AAACC,AAA4BH;AAC1C7D,AAAgB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAQ,AAAC7D,AAAOqD,AAAqCA;AACrES,AAAoB,AAAA,AAAA,AAAA,AAAI,AAAA,AAAA,AAAO8D,AAA4B,AAAC/L,AAAmB+L;AAC/EE,AAAQ,AAACC,AAAiCN,AAAIC;AAC9CM,AAAgB,AAAC5G,AAAI;AAAA6G;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAApQ,AAAAqQ,AAAA,AAAA,AAAM/D;AAAN,AAAAtM,AAAAqQ,AAAA,AAAA,AAAW3E;AAAX,AAAqB,AAACgE,AAAkBpD,AAAKZ;;AAAUuE;AAC5EK,AAAsB,AAAC/G,AAAIC,AAAK2G;AALtC,AAME,AAAC3J,AAAe,AAAA,AAAC/D,AAAO6N,AAAuBtE,AAAgBC;;AAEnE,AAAA,AAAA,AAAA1M,AAAMgR;AAAN,AAAA,AAAA/Q,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA+Q,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA5Q;;;AAAA,AAAA,AAAA,AAAA,AAAA6Q,AAAMD,AAAYX,AAAIiB;AAAtB,AAAA,AAAAJ,AAAAD;AAAA,AAAAxQ,AAAAyQ,AAAA,AAAA,AAAkC/P;AAAlC,AACE,AAAAoQ,AAAuCD;AAAvCC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAlN,AAAAoN,AAAAF,AAAAA;AAAA,AAAAG,AAAAH,AAAA,AAActF;AAAd,AAAAyF,AAAAH,AAAA,AAAiBxE;AAAjB,AAAA2E,AAAAH,AAAA,AAAsBjB;AAAtB,AAAAoB,AAAAH,AAAA,AAA+BI;AAA/B,AACMxG,AAAgB,AAAAL,AAAI3J;AAAJ,AAAA,AAAA2J;AAAAA;;AAAA;;AAA4BiC;AADlD,AAAA,AAEMU,AAAe,AAAA,AAAA,AAAIkE;AAFzB,AAGE,AAAI,AAAA,AAAA,AAAOtB;AACT,AAAMrB,AAAkB,AAACrB,AAAQyC,AAAmBC,AAAIpE,AAAGc,AAAKuD,AAASqB;AAAzE,AACE,AAAC7I,AAAK2E,AAAc,AAACjJ,AAAsB6L,AAAIlF,AAAe6D;;AAChE,AAAClG,AAAK2E,AAActC;;;;AAP1B,AAAA,AAAA,AAAM6F;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAxQ,AAAAuQ;AAAAA,AAAA,AAAAtQ,AAAAsQ;AAAAE,AAAA,AAAAzQ,AAAAuQ;AAAAA,AAAA,AAAAtQ,AAAAsQ;AAAA,AAAA,AAAAnQ,AAAA;AAAA,AAAA,AAAAA,AAAAoQ,AAAAC,AAAAF;;;AAAA,AASA,AAAA,AAAMS,AAAkBjH;AAAxB,AACE,AAAA,AAAA,AAAMkH,AAAqB,AAAC3G,AAAgBP;AAA5C,AACE,AAAA,AAAA,AAACmH,AAAeD;;AAEpB,AAAA,AAAA,AAAA7R,AAAM+R;AAAN,AAAA,AAAA9R,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA8R,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA3R;;;AAAA,AAAA,AAAA,AAAA,AAAA4R,AAAMD,AAAkB1B,AAAIgC;AAA5B,AAAA,AAAAJ,AAAAD;AAAA,AAAAvR,AAAAwR,AAAA,AAAA,AAAyCK;AAAzC,AACE,AAAMA,AAAc,AAAAxH,AAAIwH;AAAJ,AAAA,AAAAxH;AAAAA;;AAAkB,AAAA,AAAChF;;;AACjCyM,AAAkB,AAACvI,AAAI,AAACkG,AAAQc,AAAWX,AAAKgC;AADtD,AAEE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACG,AAAOD,AAAkBD,AAI6BV;;;AAP3D,AAAA,AAAA,AAAMG;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAvR,AAAAsR;AAAAA,AAAA,AAAArR,AAAAqR;AAAAE,AAAA,AAAAxR,AAAAsR;AAAAA,AAAA,AAAArR,AAAAqR;AAAA,AAAA,AAAAlR,AAAA;AAAA,AAAA,AAAAA,AAAAmR,AAAAC,AAAAF;;;AAAA,AAWA,AAAA,AAAMO,AAAS1F,AAAK7L;AAApB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAE2B,AAAK6L,AAEJ,AAAA,AAAA2F,AAACtO,AAAY,AAACuO,AAAYzR;AAA1B,AAAkC,AAAAwR,AAAA,AAACE;AAJ/D;;AAOA,AAAA,AAAMC,AAAsBC;AAA5B,AACE,AAAAC,AAAmBD;AAAnB,AAAArS,AAAAsS,AAAA,AAAA,AAAOhG;AAAP,AAAAtM,AAAAsS,AAAA,AAAA,AAAY7R;AAAZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAI0B,AAAK6L,AAIJ,AAACvI,AAAsBtD;;AAEpD,AAAA,AAAA,AAAAlB,AAAMgT;AAAN,AAAA,AAAA/S,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA+S,AAAA,AAAA,AAAA,AAAA5S;;;AAAA,AAAA,AAAA,AAAA,AAAA6S,AAAMD,AAAUK;AAAhB,AAAA,AAAAH,AAAAD;AAAA,AAAAxS,AAAAyS,AAAA,AAAA,AAA0BI;AAA1B,AACE,AAAI,AAAA,AAAO,AAAC/M,AAAM8M;AAAlB,AAAA,AAAA;;AAEE,AAAMC,AAAW,AAAAxI,AAAIwI;AAAJ,AAAA,AAAAxI;AAAAA;;AAAe,AAAA,AAAChF;;;AAC3B8E,AAAM,AAAG,AAACrE,AAAM8M,AAAQC;AACxBC,AAAe,AAACvJ,AAAI;AAAAwJ;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAA/S,AAAAgT,AAAA,AAAA,AAAM1G;AAAN,AAAAtM,AAAAgT,AAAA,AAAA,AAAWvS;AAAX,AAAmB,AAACuR,AAAQ1F,AAAK7L;;AAAQ,AAACiI,AAAKmK,AAAWD;AAFpF,AAGE,AAAA,AAAA,AAAA,AAAA,AAAA,AAACjI,AAEOmI,AACC,AAAA,AAAA,AAAI3I;;;;AATnB,AAAA,AAAA,AAAMoI;;AAAN;AAAA,AAAA,AAAA,AAAAG,AAAMH;AAAN,AAAA,AAAAI,AAAA,AAAAxS,AAAAuS;AAAAA,AAAA,AAAAtS,AAAAsS;AAAA,AAAA,AAAAnS,AAAA;AAAA,AAAA,AAAAA,AAAAoS,AAAAD;;;AAAA,AAYA,AAAA,AAAMO,AAAkBL,AAAOhD;AAA/B,AACE,AAAMgC,AAAU,AAACsB,AAAuBtD;AAClCuD,AAAe,AAAK,AAAChL,AAAOyJ;AAC5BwB,AAAc,AAAA,AAAA,AAAA,AAAA,AAAQ,AAAA,AAAO,AAACtN,AAAM8M,AACN,AAAA,AAAA,AAACnQ,AAAyC,AAAC8G,AAAI6I,AAAqBQ;AAClGS,AAAsB,AAAA,AAAA,AAAA,AAAIF,AAAgC,AAAC7B,AAAiB1B,AAAIgC;AAJtF,AAAA,AAKM9D,AAA4B,AAAC9J,AAAmB4L;AALtD,AAME,AAAA,AAACpJ,AAAgB4M,AAAcC,AAAsBvF;;AAIzD,AAAA,AAAMwF,AAAY7S;AAAlB,AACE,AAAMkN,AAAe,AAAC6F,AAAgB/S;AAAtC8S,AACwB,AAACjF,AAA+BX;AADxD,AAAA3N,AAAAuT,AAAA,AAAA,AACOE;AADP,AAAAzT,AAAAuT,AAAA,AAAA,AACW9H;AADX,AAAAzL,AAAAuT,AAAA,AAAA,AACiBhG;AACXmG,AAAiB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA3C,AAAA,AAAA,AAAA,AAAA,AAA8BtQ,AAAAA,AAAAA;AAC/CkT,AAAY,AAAA,AAAC9E,AAAOlB;AACpBiF,AAAO,AAACgB,AAAoBnT,AAAM8M;AAClC6F,AAAc,AAACS,AAASjB,AAAO,AAAA,AAAA,AAAIc;AALzC,AAMMI;;AANN,AAMgC,AAACb,AAAiBL,AAAOnS;;;AANzD,AAAA,AAOMsT,AAA2C,AAAChQ,AAAsBtD,AAAM2S,AAAcU;AACtFE,AAAuB,AAAA,AAAA,AAAA,AAAA,AAAIN,AAGD,AAAA,AAAC9R,AAAmBnB;AAXpD,AAAA,AAAA,AAAA,AAcGsT,AACAC,AACAL;;AAIL,AAAA,AAAMM,AAAUxT;AAAhB,AACE,AAACyT,AAAY,AAAC9N,AAAU3F;;AAE1B,AAAA,AAAM0T,AAAoBC;AAA1B,AACE,AAAA/J,AAAI,AAACgK,AAAqBD;AAA1B,AAAA,AAAA/J;AAAAA;;AACI,AAACjE,AAAU,AAACkO,AAAqBF;;;AAEvC,AAAA,AAAMG,AAAoBH;AAA1B,AACE,AAAMI,AAAO,AAACF,AAAqBF;AAAnC,AACE,AAAI,AAACK,AAASD;AACZ,AAAMxM,AAAe,AAAC0M,AAA0BN;AAAhD,AACE,AAACpL,AAAUwL,AAAOxM;;AACpB,AAACT,AAA0BiN;;;AAEjC,AAAA,AAAMG,AAAkBP;AAAxB,AACE,AAAA7J,AAAc,AAACqK,AAAmBR;AAAlC,AAAA,AAAA7J;AAAA,AAAAA,AAASpH;AAAT,AACE,AAAI,AAAA,AAAC0R,AAAU1R;AACb,AAACoR,AAAmBH;;AACpBjR;;;AAHJ;;;AAOF,AAAA,AAAM2R,AAAUrU;AAAhB,AACE,AACE,AAAA,AAACsU,AAA4BtU,AAAMuU;AAAM,AAACxQ;;AAD5C,AAEE,AAAA,AAACuQ,AAA6BtU,AAAMwU;AAAO,AAACxQ,AAAOhE;;AAFrD,AAGE,AAAA,AAACsU,AAA+BtU,AAAMyU;AAAS,AAAChQ,AAASzE;;AAH3D,AAIE,AAAA,AAACsU,AAA+BtU,AAAM0U;AAAS,AAACpQ,AAAStE;;AAJ3D,AAKE,AAAA,AAACsU,AAAgCtU,AAAM2U;AAAU,AAACzQ,AAAUlE;;AAL9D,AAME,AAAA,AAACsU,AAA+BtU,AAAM4U;AAAS,AAACxQ,AAASpE;;AAN3D,AAOE,AAAA,AAACsU,AAAiCtU,AAAM6U;AAAyB,AAAChC,AAAW7S;;AAP/E,AAQE,AAAA,AAACsU,AAA6BtU,AAAM8U;AAAY,AAAC/G,AAAkB/N;;AARrE,AASE,AAAA,AAACsU,AAAiCtU,AAAM+U;AAAgB,AAACpJ,AAAW3L;;AATtE;;;;;;;;;;;AAaF,AAYA,AAAA,AAAMO;AAAN,AACE,AAAI,AAAA,AAAMyU;AA7ZNtT,AAIAO,AAGAG,AAIAU,AAGAE,AAGAI,AAGAG,AAIAI,AAKAE,AAGAE,AAIAC,AAGAE,AAGAE,AAGAE,AAOAG,AAqBAkB,AAKAE,AAGAE,AAOAM,AASAS,AAKAE,AA+BAuB,AASAI,AAGAK,AAwBAsB,AAKAG,AAKAI,AAWAY,AAMAE,AAkBAe,AAGAG,AAKAI,AAQAK,AASAS,AAKAM,AAGAE,AAGAE,AAaAQ,AAMAC,AASAY,AASAY,AAIAG,AAWAU,AAOAI,AAWAG,AAYAU,AAWAK,AAqBAW,AAGAE,AAIAI,AAOAI,AAQAG,AA4BF,AAAMW,AAAY,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AADpB;;AAEAD","names",["var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__23502","vec__23503","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq23493","G__23494","cljs.core/first","cljs.core/next","G__23495","G__23496","self__4717__auto__","method","value","tag","max-level","job-fn","G__23506","G__23507","G__23508","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__23509","*print-level*-temp-val__23510","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__23540","vec__23541","seq23526","G__23527","G__23528","devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__23565","vec__23566","seq23562","G__23563","G__23564","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq23569","self__4718__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<raw-surrogate>","seq23570","args","devtools.formatters.markup/<surrogate>","p__23599","vec__23600","seq23574","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<reference>","seq23605","devtools.formatters.markup/<reference-surrogate>","seq23610","devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<circular-reference>","seq23614","devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<native-reference>","reference","p1__23617#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq23622","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","cljs.core/integer?","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<standard-body>","p__23633","vec__23634","seq23631","G__23632","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take.cljs$core$IFn$_invoke$arity$2","rest","cljs.core.drop.cljs$core$IFn$_invoke$arity$2","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/list","devtools.formatters.markup/<list>","p__23644","vec__23645","seq23640","G__23641","G__23642","max-count","opts","items-markups","more-count","more?","separator","or__4131__auto__","more-symbol","temp__5718__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","default-details-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq23648","G__23649","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__23657","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__23668","vec__23669","seq23666","G__23667","header-tag","vec__23676","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__23686","vec__23687","seq23684","G__23685","devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__23703","vec__23704","seq23698","G__23699","max-fns","aritites-markups","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__23715","vec__23716","methods-markups-lists","devtools.formatters.markup/<protocol>","p__23736","vec__23737","seq23721","G__23722","G__23723","protocol","map__23740","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<protocols-list>","p__23748","vec__23749","seq23745","G__23746","G__23747","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<field>","p1__23754#","devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__23756","devtools.formatters.markup/<fields>","p__23774","vec__23775","seq23761","G__23762","fields","max-fields","fields-markups","p__23782","vec__23784","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__23828","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]]],"~:cache-keys",["~#cmap",[["^1X","devtools/formatters/printing.cljs"],[1567262098116,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^14","^13","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^[","^Y"]]],["^1X","goog/labs/useragent/platform.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","~$goog.labs.userAgent.util","~$goog.string"]]],["^1X","devtools/formatters/markup.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","^Y","^Z","^[","^10","^11"]]],["^1X","devtools/formatters/helpers.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","^2=","^11","^2>","^2?"]]],["^1X","goog/math/math.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","~$goog.array","~$goog.asserts"]]],["^1X","goog/labs/useragent/browser.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2B","^2@","~$goog.object","^2A"]]],["^1X","goog/array/array.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2C"]]],["^1X","goog/useragent/useragent.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2@","~$goog.reflect","^2A"]]],["^1X","devtools/formatters/templating.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","~$clojure.walk","~$devtools.util","^2?","^Y","^[","~$clojure.string"]]],["^1X","goog/debug/error.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","goog/dom/nodetype.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","cljs/pprint.cljs"],[1567262080081,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","^2K","^2A","~$goog.string.StringBuffer"]]],["^1X","goog/object/object.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],"~:SHADOW-TIMESTAMP",[1574163601000,1567262080000],["^1X","goog/math/long.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2C","^2H"]]],["^1X","devtools/version.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","goog/functions/functions.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","devtools/prefs.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","~$devtools.defaults"]]],["^1X","clojure/walk.cljs"],[1567262080081,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","goog/structs/map.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2D"]]],["^1X","devtools/munging.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","^2K","~$devtools.context","^2D","^2L"]]],["^1X","goog/labs/useragent/engine.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2B","^2@","^2A"]]],["^1X","goog/asserts/asserts.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","~$goog.debug.Error","~$goog.dom.NodeType","^2A"]]],["^1X","goog/uri/uri.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2B","^2C","^2A","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1X","goog/base.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",[]]],["^1X","goog/structs/structs.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2B","^2D"]]],["^1X","clojure/string.cljs"],[1567262080081,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","^2A","^2L"]]],["^1X","devtools/formatters/state.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","goog/string/string.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","clojure/data.cljs"],[1567262080081,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","~$clojure.set"]]],["^1X","goog/reflect/reflect.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","goog/labs/useragent/util.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2A"]]],["^1X","goog/string/stringbuffer.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","goog/iter/iter.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2B","^2C","~$goog.functions","~$goog.math"]]],["^1X","devtools/defaults.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","cljs/core.cljs"],[1567262080081,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["~$goog.math.Long","~$goog.math.Integer","^2A","^2D","^2B","~$goog.Uri","^2L"]]],["^1X","devtools/context.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","goog/math/integer.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14"]]],["^1X","devtools/format.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","^2Q"]]],["^1X","clojure/set.cljs"],[1567262080081,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","goog/uri/utils.js"],[1567356087625,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^2B","^2C","^2A"]]],["^1X","devtools/protocols.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13"]]],["^1X","devtools/util.cljs"],[1567262098116,"^29",["^ ","^2:",null,"^2;",["^N",[]],"^2<",["^14","^13","~$goog.userAgent","~$clojure.data","~$devtools.version","^2Q","^G","^2="]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1567262076000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/prefs.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/walk.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/formatters/markup.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/munging.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/compiler.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/version.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/oops.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1567262098000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",["^ ","^K","^L"],"^M",["^N",[]],"^O",["^ ","^K",["^ ","^P",["^Q",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^R","^S","^T","^L","^U",true]],"^R","^L","^W",null,"^X",["^ ","^Y","^Y","^Z","^Z","^[","^[","^10","^10","^11","^11","^12","^11","^13","^13","^14","^14"],"^15",["^N",["^16","^17"]],"~:shadow/js-access-global",["^N",["RegExp","Error"]],"^18",["^ ","^19","^Y","^1:","^Y","^1;","^[","^1<","^Y","^1=","^Y","^1>","^10","^1?","^Y","^1@","^Z","^1A","^Y","^1B","^Y","^1C","^Y","^1D","^Y","^1E","^Y","^1F","^Z","^1G","^Y","^1H","^10","^1I","^[","^1J","^10","^1K","^[","^1L","^10","^1M","^Y","^1N","^Y","^1O","^Y"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",117,"^8",7,"^9",117,"^:",21,"^P",["^Q",["~$quote",["^Q",[["~$markups-lists"]]]]]],"^R","~$devtools.formatters.markup/<aligned-body>","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^Q",[["^49"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"~:variadic?",false,"^7",117,"~:ret-tag","~$cljs.core/IVector","^9",117,"~:max-fixed-arity",1,"~:fn-var",true,"^P",["^Q",["^48",["^Q",[["^49"]]]]]],"~$<native-reference>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^P",["^Q",["^48",["^Q",[["~$object"]]]]]],"^R","~$devtools.formatters.markup/<native-reference>","^6","devtools/formatters/markup.cljs","^:",25,"^4;",["^Q",[["^4D"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",56,"^4?","^4@","^9",56,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4D"]]]]]],"~$<reference-surrogate>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^P",["^Q",["^48",["^Q",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^4>",true,"~:fixed-arity",0,"^4A",0,"^4;",[["^Q",["^4G"]]],"^P",["^Q",[["~$&","^4G"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<reference-surrogate>","^6","devtools/formatters/markup.cljs","^:",28,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^4G"]]],"^P",["^Q",[["~$&","^4G"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^4G"]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"~:methods",[["^ ","^4I",0,"^4>",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^4?","~$any","^9",50,"^4A",0,"^4B",true,"^P",["^Q",[["~$&","^4G"]]]],"~$<keyword>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^P",["^Q",["^48",["^Q",[["~$keyword"]]]]]],"^R","~$devtools.formatters.markup/<keyword>","^6","devtools/formatters/markup.cljs","^:",16,"^4;",["^Q",[["^4P"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",75,"^4?","^4@","^9",75,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4P"]]]]]],"~$print-via-writer",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^P",["^Q",["^48",["^Q",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^4S","^4T",["^4U"]]]],"^P",["^Q",[["^4S","^4T","~$&",["^4U"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/print-via-writer","^6","devtools/formatters/markup.cljs","^:",23,"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^4S","^4T",["^4U"]]]],"^P",["^Q",[["^4S","^4T","~$&",["^4U"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^4S","^4T",["^4U"]]]],"^4<",null,"^4I",2,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",2,"^4>",true,"^4L",["^N",[null,"^4N"]]]],"^7",28,"^4?","^4N","^9",28,"^4A",2,"^4B",true,"^P",["^Q",[["^4S","^4T","~$&",["^4U"]]]]],"~$<protocol-method-arities>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",286,"^8",7,"^9",286,"^:",32,"^P",["^Q",["^48",["^Q",[["~$fns","~$&",["~$max-fns"]]]]]],"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^4X",["^4Y"]]]],"^P",["^Q",[["^4X","~$&",["^4Y"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<protocol-method-arities>","^6","devtools/formatters/markup.cljs","^:",32,"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^4X",["^4Y"]]]],"^P",["^Q",[["^4X","~$&",["^4Y"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^4X",["^4Y"]]]],"^4<",null,"^4I",1,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",1,"^4>",true,"^4L","^4M"]],"^7",286,"^4?","^4N","^9",286,"^4A",1,"^4B",true,"^P",["^Q",[["^4X","~$&",["^4Y"]]]]],"~$<surrogate-header>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",403,"^8",7,"^9",403,"^:",25,"^P",["^Q",["^48",["^Q",[["~$surrogate"]]]]]],"^R","~$devtools.formatters.markup/<surrogate-header>","^6","devtools/formatters/markup.cljs","^:",25,"^4;",["^Q",[["^50"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",403,"^4?",["^N",[null,"^4N"]],"^9",403,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^50"]]]]]],"~$<details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",169,"^8",7,"^9",169,"^:",16,"^P",["^Q",["^48",["^Q",[["^4S","~$starting-index"]]]]]],"^R","~$devtools.formatters.markup/<details>","^6","devtools/formatters/markup.cljs","^:",16,"^4;",["^Q",[["^4S","^53"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",169,"^4?","~$clj","^9",169,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S","^53"]]]]]],"~$<more-protocols>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",323,"^8",7,"^9",323,"^:",23,"^P",["^Q",["^48",["^Q",[["~$more-count"]]]]]],"^R","~$devtools.formatters.markup/<more-protocols>","^6","devtools/formatters/markup.cljs","^:",23,"^4;",["^Q",[["^57"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",323,"^4?","^55","^9",323,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^57"]]]]]],"~$<field>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",338,"^8",7,"^9",338,"^:",14,"^P",["^Q",["^48",["^Q",[["~$name","^4S"]]]]]],"^R","~$devtools.formatters.markup/<field>","^6","devtools/formatters/markup.cljs","^:",14,"^4;",["^Q",[["^5:","^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",338,"^4?","^4@","^9",338,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5:","^4S"]]]]]],"~$<symbol>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^P",["^Q",["^48",["^Q",[["~$symbol"]]]]]],"^R","~$devtools.formatters.markup/<symbol>","^6","devtools/formatters/markup.cljs","^:",15,"^4;",["^Q",[["^5="]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",78,"^4?","^4@","^9",78,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5="]]]]]],"~$<fields-details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",368,"^8",7,"^9",368,"^:",23,"^P",["^Q",["^48",["^Q",[["~$fields","~$obj"]]]]]],"^R","~$devtools.formatters.markup/<fields-details>","^6","devtools/formatters/markup.cljs","^:",23,"^4;",["^Q",[["^5@","^5A"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",368,"^4?","^4@","^9",368,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5@","^5A"]]]]]],"~$<atomic>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",422,"^8",7,"^9",422,"^:",15,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"^R","~$devtools.formatters.markup/<atomic>","^6","devtools/formatters/markup.cljs","^:",15,"^4;",["^Q",[["^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",422,"^4?",["^N",["^55","^4@","^4M","~$clj-nil"]],"^9",422,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"~$<string>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",88,"^8",7,"^9",88,"^:",15,"^P",["^Q",["^48",["^Q",[["~$string"]]]]]],"^R","~$devtools.formatters.markup/<string>","^6","devtools/formatters/markup.cljs","^:",15,"^4;",["^Q",[["^5G"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",88,"^4?","^55","^9",88,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5G"]]]]]],"~$<standard-body>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",124,"^8",7,"^9",124,"^:",22,"^P",["^Q",["^48",["^Q",[["^49","~$&",["~$no-margin?"]]]]]],"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^49",["^5J"]]]],"^P",["^Q",[["^49","~$&",["^5J"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<standard-body>","^6","devtools/formatters/markup.cljs","^:",22,"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^49",["^5J"]]]],"^P",["^Q",[["^49","~$&",["^5J"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^49",["^5J"]]]],"^4<",null,"^4I",1,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",1,"^4>",true,"^4L","^4M"]],"^7",124,"^4?","^4N","^9",124,"^4A",1,"^4B",true,"^P",["^Q",[["^49","~$&",["^5J"]]]]],"~$<type-basis>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",253,"^8",7,"^9",253,"^:",19,"^P",["^Q",["^48",["^Q",[["~$basis"]]]]]],"^R","~$devtools.formatters.markup/<type-basis>","^6","devtools/formatters/markup.cljs","^:",19,"^4;",["^Q",[["^5M"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",253,"^4?","^4M","^9",253,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5M"]]]]]],"~$*markup-db*",["^ ","^R","~$devtools.formatters.markup/*markup-db*","^6","devtools/formatters/markup.cljs","^7",436,"^8",1,"^9",436,"^:",27,"~:dynamic",true,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",436,"^8",16,"^9",436,"^:",27,"^5Q",true]],"~$print-via-protocol",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^P",["^Q",["^48",["^Q",[["^4S","^4T","~$&",["^4U"]]]]]],"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^4S","^4T",["^4U"]]]],"^P",["^Q",[["^4S","^4T","~$&",["^4U"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/print-via-protocol","^6","devtools/formatters/markup.cljs","^:",25,"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^4S","^4T",["^4U"]]]],"^P",["^Q",[["^4S","^4T","~$&",["^4U"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^4S","^4T",["^4U"]]]],"^4<",null,"^4I",2,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",2,"^4>",true,"^4L",["^N",[null,"^4N"]]]],"^7",31,"^4?","^4N","^9",31,"^4A",2,"^4B",true,"^P",["^Q",[["^4S","^4T","~$&",["^4U"]]]]],"~$print-with",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^P",["^Q",["^48",["^Q",[["~$method","^4S","^4T","~$&",["^4U"]]]]]],"^4H",["^ ","^4>",true,"^4I",3,"^4A",3,"^4;",[["^Q",["^5U","^4S","^4T",["^4U"]]]],"^P",["^Q",[["^5U","^4S","^4T","~$&",["^4U"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/print-with","^6","devtools/formatters/markup.cljs","^:",17,"^4H",["^ ","^4>",true,"^4I",3,"^4A",3,"^4;",[["^Q",["^5U","^4S","^4T",["^4U"]]]],"^P",["^Q",[["^5U","^4S","^4T","~$&",["^4U"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^5U","^4S","^4T",["^4U"]]]],"^4<",null,"^4I",3,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",3,"^4>",true,"^4L",["^N",[null,"^4N"]]]],"^7",21,"^4?","^4N","^9",21,"^4A",3,"^4B",true,"^P",["^Q",[["^5U","^4S","^4T","~$&",["^4U"]]]]],"~$<bool>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^P",["^Q",["^48",["^Q",[["~$bool"]]]]]],"^R","~$devtools.formatters.markup/<bool>","^6","devtools/formatters/markup.cljs","^:",13,"^4;",["^Q",[["^5X"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",72,"^4?","^4@","^9",72,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5X"]]]]]],"~$<standalone-type>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",275,"^8",7,"^9",275,"^:",24,"^P",["^Q",["^48",["^Q",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^5[",["^60"]]]],"^P",["^Q",[["^5[","~$&",["^60"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<standalone-type>","^6","devtools/formatters/markup.cljs","^:",24,"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^5[",["^60"]]]],"^P",["^Q",[["^5[","~$&",["^60"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^5[",["^60"]]]],"^4<",null,"^4I",1,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",1,"^4>",true,"^4L","^4@"]],"^7",275,"^4?","^4N","^9",275,"^4A",1,"^4B",true,"^P",["^Q",[["^5[","~$&",["^60"]]]]],"~$<preview>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",109,"^8",7,"^9",109,"^:",16,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"^R","~$devtools.formatters.markup/<preview>","^6","devtools/formatters/markup.cljs","^:",16,"^4;",["^Q",[["^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",109,"^4?",["^N",[null,"^4N"]],"^9",109,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"~$<header>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",400,"^8",7,"^9",400,"^:",15,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"^R","~$devtools.formatters.markup/<header>","^6","devtools/formatters/markup.cljs","^:",15,"^4;",["^Q",[["^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",400,"^4?","^4M","^9",400,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"~$<protocol-method>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",24,"^P",["^Q",["^48",["^Q",[["^5:","~$arities"]]]]]],"^R","~$devtools.formatters.markup/<protocol-method>","^6","devtools/formatters/markup.cljs","^:",24,"^4;",["^Q",[["^5:","^67"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",299,"^4?","^4@","^9",299,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5:","^67"]]]]]],"~$<cljs-land>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^P",["^Q",["^48",["^Q",[["~$&","~$children"]]]]],"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^6:"]]],"^P",["^Q",[["~$&","^6:"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<cljs-land>","^6","devtools/formatters/markup.cljs","^:",18,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^6:"]]],"^P",["^Q",[["~$&","^6:"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^6:"]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",0,"^4>",true,"^4L","^4M"]],"^7",65,"^4?","^4N","^9",65,"^4A",0,"^4B",true,"^P",["^Q",[["~$&","^6:"]]]],"~$<type-basis-item>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",250,"^8",7,"^9",250,"^:",24,"^P",["^Q",["^48",["^Q",[["~$basis-item"]]]]]],"^R","~$devtools.formatters.markup/<type-basis-item>","^6","devtools/formatters/markup.cljs","^:",24,"^4;",["^Q",[["^6="]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",250,"^4?","^4@","^9",250,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^6="]]]]]],"~$<protocol-method-arities-details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",283,"^8",7,"^9",283,"^:",40,"^P",["^Q",["^48",["^Q",[["^4X"]]]]]],"^R","~$devtools.formatters.markup/<protocol-method-arities-details>","^6","devtools/formatters/markup.cljs","^:",40,"^4;",["^Q",[["^4X"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",283,"^4?","^4@","^9",283,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4X"]]]]]],"~$<fields-details-row>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",345,"^8",7,"^9",345,"^:",27,"^P",["^Q",["^48",["^Q",[["~$field"]]]]]],"^R","~$devtools.formatters.markup/<fields-details-row>","^6","devtools/formatters/markup.cljs","^:",27,"^4;",["^Q",[["^6B"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",345,"^4?","^4@","^9",345,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^6B"]]]]]],"~$<standard-body-reference>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",133,"^8",7,"^9",133,"^:",32,"^P",["^Q",["^48",["^Q",[["~$o"]]]]]],"^R","~$devtools.formatters.markup/<standard-body-reference>","^6","devtools/formatters/markup.cljs","^:",32,"^4;",["^Q",[["~$o"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",133,"^4?","^4M","^9",133,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",414,"^8",7,"^9",414,"^:",23,"^P",["^Q",["^48",["^Q",[["^50"]]]]]],"^R","~$devtools.formatters.markup/<surrogate-body>","^6","devtools/formatters/markup.cljs","^:",23,"^4;",["^Q",[["^50"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",414,"^4?",["^N",["^55","^4N","^5E"]],"^9",414,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^50"]]]]]],"~$get-markup-db",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",448,"^8",7,"^9",448,"^:",20,"^P",["^Q",["^48",["^Q",[[]]]]]],"^R","~$devtools.formatters.markup/get-markup-db","^6","devtools/formatters/markup.cljs","^:",20,"^4;",["^Q",[[]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",448,"^9",448,"^4A",0,"^4B",true,"^P",["^Q",["^48",["^Q",[[]]]]]],"~$<expandable>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^P",["^Q",["^48",["^Q",[["~$&","^6:"]]]]],"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^6:"]]],"^P",["^Q",[["~$&","^6:"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<expandable>","^6","devtools/formatters/markup.cljs","^:",19,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^6:"]]],"^P",["^Q",[["~$&","^6:"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^6:"]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",0,"^4>",true,"^4L","^4@"]],"^7",36,"^4?","^4N","^9",36,"^4A",0,"^4B",true,"^P",["^Q",[["~$&","^6:"]]]],"~$<type>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",13,"^P",["^Q",["^48",["^Q",[["^5[","~$&",["^60"]]]]]],"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^5[",["^60"]]]],"^P",["^Q",[["^5[","~$&",["^60"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<type>","^6","devtools/formatters/markup.cljs","^:",13,"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^5[",["^60"]]]],"^P",["^Q",[["^5[","~$&",["^60"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^5[",["^60"]]]],"^4<",null,"^4I",1,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",1,"^4>",true,"^4L","^4@"]],"^7",266,"^4?","^4N","^9",266,"^4A",1,"^4B",true,"^P",["^Q",[["^5[","~$&",["^60"]]]]],"~$<protocol-method-arity>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",280,"^8",7,"^9",280,"^:",30,"^P",["^Q",["^48",["^Q",[["~$arity-fn"]]]]]],"^R","~$devtools.formatters.markup/<protocol-method-arity>","^6","devtools/formatters/markup.cljs","^:",30,"^4;",["^Q",[["^6O"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",280,"^4?","^4M","^9",280,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^6O"]]]]]],"~$<raw-surrogate>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^P",["^Q",["^48",["^Q",[["~$&","^4G"]]]]],"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^4G"]]],"^P",["^Q",[["~$&","^4G"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<raw-surrogate>","^6","devtools/formatters/markup.cljs","^:",22,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^4G"]]],"^P",["^Q",[["~$&","^4G"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^4G"]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",0,"^4>",true,"^4L","^4M"]],"^7",40,"^4?","^4N","^9",40,"^4A",0,"^4B",true,"^P",["^Q",[["~$&","^4G"]]]],"~$<type-details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",258,"^8",7,"^9",258,"^:",21,"^P",["^Q",["^48",["^Q",[["^5[","^1Q","~$_name","^5M"]]]]]],"^R","~$devtools.formatters.markup/<type-details>","^6","devtools/formatters/markup.cljs","^:",21,"^4;",["^Q",[["^5[","^1Q","^6T","^5M"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",258,"^4?","^4@","^9",258,"^4A",4,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5[","^1Q","^6T","^5M"]]]]]],"~$<list>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",181,"^8",7,"^9",181,"^:",13,"^P",["^Q",["^48",["^Q",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^6W","^6X",["^6Y"]]]],"^P",["^Q",[["^6W","^6X","~$&",["^6Y"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<list>","^6","devtools/formatters/markup.cljs","^:",13,"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^6W","^6X",["^6Y"]]]],"^P",["^Q",[["^6W","^6X","~$&",["^6Y"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^6W","^6X",["^6Y"]]]],"^4<",null,"^4I",2,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",2,"^4>",true,"^4L","^4M"]],"^7",181,"^4?","^4N","^9",181,"^4A",2,"^4B",true,"^P",["^Q",[["^6W","^6X","~$&",["^6Y"]]]]],"~$<meta-wrapper>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",210,"^8",7,"^9",210,"^:",21,"^P",["^Q",["^48",["^Q",[["~$metadata","~$&","^6:"]]]]],"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^70","^6:"]]],"^P",["^Q",[["^70","~$&","^6:"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<meta-wrapper>","^6","devtools/formatters/markup.cljs","^:",21,"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^70","^6:"]]],"^P",["^Q",[["^70","~$&","^6:"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^70","^6:"]]],"^4<",null,"^4I",1,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",1,"^4>",true,"^4L","^4M"]],"^7",210,"^4?","^4N","^9",210,"^4A",1,"^4B",true,"^P",["^Q",[["^70","~$&","^6:"]]]],"~$<protocol>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",314,"^8",7,"^9",314,"^:",17,"^P",["^Q",["^48",["^Q",[["^5A","~$protocol","~$&",["^4T"]]]]]],"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^5A","^73",["^4T"]]]],"^P",["^Q",[["^5A","^73","~$&",["^4T"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<protocol>","^6","devtools/formatters/markup.cljs","^:",17,"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^5A","^73",["^4T"]]]],"^P",["^Q",[["^5A","^73","~$&",["^4T"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^5A","^73",["^4T"]]]],"^4<",null,"^4I",2,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",2,"^4>",true,"^4L","^55"]],"^7",314,"^4?","^4N","^9",314,"^4A",2,"^4B",true,"^P",["^Q",[["^5A","^73","~$&",["^4T"]]]]],"~$<index>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",138,"^8",7,"^9",138,"^:",14,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"^R","~$devtools.formatters.markup/<index>","^6","devtools/formatters/markup.cljs","^:",14,"^4;",["^Q",[["^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",138,"^4?","^4@","^9",138,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"~$<surrogate>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^P",["^Q",["^48",["^Q",[["~$&",["^4D","~$header","~$body","~$start-index"]]]]]],"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",[["^4D","^78","^79","^7:"]]]],"^P",["^Q",[["~$&",["^4D","^78","^79","^7:"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<surrogate>","^6","devtools/formatters/markup.cljs","^:",18,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",[["^4D","^78","^79","^7:"]]]],"^P",["^Q",[["~$&",["^4D","^78","^79","^7:"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",[["^4D","^78","^79","^7:"]]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",0,"^4>",true,"^4L","^4M"]],"^7",43,"^4?","^4N","^9",43,"^4A",0,"^4B",true,"^P",["^Q",[["~$&",["^4D","^78","^79","^7:"]]]]],"~$<protocols-list>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",23,"^P",["^Q",["^48",["^Q",[["^5A","~$protocols","~$&",["~$max-protocols"]]]]]],"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^5A","^7=",["^7>"]]]],"^P",["^Q",[["^5A","^7=","~$&",["^7>"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<protocols-list>","^6","devtools/formatters/markup.cljs","^:",23,"^4H",["^ ","^4>",true,"^4I",2,"^4A",2,"^4;",[["^Q",["^5A","^7=",["^7>"]]]],"^P",["^Q",[["^5A","^7=","~$&",["^7>"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^5A","^7=",["^7>"]]]],"^4<",null,"^4I",2,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",2,"^4>",true,"^4L","^4M"]],"^7",327,"^4?","^4N","^9",327,"^4A",2,"^4B",true,"^P",["^Q",[["^5A","^7=","~$&",["^7>"]]]]],"~$<meta>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",205,"^8",7,"^9",205,"^:",13,"^P",["^Q",["^48",["^Q",[["^70"]]]]]],"^R","~$devtools.formatters.markup/<meta>","^6","devtools/formatters/markup.cljs","^:",13,"^4;",["^Q",[["^70"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",205,"^4?","^4@","^9",205,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^70"]]]]]],"~$<instance>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",379,"^8",7,"^9",379,"^:",17,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"^R","~$devtools.formatters.markup/<instance>","^6","devtools/formatters/markup.cljs","^:",17,"^4;",["^Q",[["^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",379,"^4?","^4@","^9",379,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S"]]]]]],"~$<reference>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^P",["^Q",["^48",["^Q",[["~$&","^4G"]]]]],"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^4G"]]],"^P",["^Q",[["~$&","^4G"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<reference>","^6","devtools/formatters/markup.cljs","^:",18,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^4G"]]],"^P",["^Q",[["~$&","^4G"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^4G"]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",0,"^4>",true,"^4L","^4M"]],"^7",47,"^4?","^4N","^9",47,"^4A",0,"^4B",true,"^P",["^Q",[["~$&","^4G"]]]],"~$<function-details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",215,"^8",7,"^9",215,"^:",25,"^P",["^Q",["^48",["^Q",[["~$fn-obj","^1Q","^6T","^67","~$prefix"]]]]]],"^R","~$devtools.formatters.markup/<function-details>","^6","devtools/formatters/markup.cljs","^:",25,"^4;",["^Q",[["^7G","^1Q","^6T","^67","^7H"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",215,"^4?","^4@","^9",215,"^4A",5,"^4B",true,"^P",["^Q",["^48",["^Q",[["^7G","^1Q","^6T","^67","^7H"]]]]]],"~$<function>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",232,"^8",7,"^9",232,"^:",17,"^P",["^Q",["^48",["^Q",[["^7G"]]]]]],"^R","~$devtools.formatters.markup/<function>","^6","devtools/formatters/markup.cljs","^:",17,"^4;",["^Q",[["^7G"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",232,"^4?","^4M","^9",232,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^7G"]]]]]],"~$<arities>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",226,"^8",7,"^9",226,"^:",16,"^P",["^Q",["^48",["^Q",[["^67"]]]]]],"^R","~$devtools.formatters.markup/<arities>","^6","devtools/formatters/markup.cljs","^:",16,"^4;",["^Q",[["^67"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",226,"^4?","^4@","^9",226,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^67"]]]]]],"~$<header-expander>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^P",["^Q",["^48",["^Q",[["^4D"]]]]]],"^R","~$devtools.formatters.markup/<header-expander>","^6","devtools/formatters/markup.cljs","^:",24,"^4;",["^Q",[["^4D"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",60,"^4?","^4M","^9",60,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4D"]]]]]],"~$<list-details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",178,"^8",7,"^9",178,"^:",21,"^P",["^Q",["^48",["^Q",[["^6W","~$_opts"]]]]]],"^R","~$devtools.formatters.markup/<list-details>","^6","devtools/formatters/markup.cljs","^:",21,"^4;",["^Q",[["^6W","^7Q"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",178,"^4?","^4@","^9",178,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^6W","^7Q"]]]]]],"~$<circular-reference>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^P",["^Q",["^48",["^Q",[["~$&","^6:"]]]]],"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^6:"]]],"^P",["^Q",[["~$&","^6:"]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<circular-reference>","^6","devtools/formatters/markup.cljs","^:",27,"^4H",["^ ","^4>",true,"^4I",0,"^4A",0,"^4;",[["^Q",["^6:"]]],"^P",["^Q",[["~$&","^6:"]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^6:"]]],"^4<",null,"^4I",0,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",0,"^4>",true,"^4L","^4M"]],"^7",53,"^4?","^4N","^9",53,"^4A",0,"^4B",true,"^P",["^Q",[["~$&","^6:"]]]],"~$<surrogate-target>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",407,"^8",7,"^9",407,"^:",25,"^P",["^Q",["^48",["^Q",[["^50"]]]]]],"^R","~$devtools.formatters.markup/<surrogate-target>","^6","devtools/formatters/markup.cljs","^:",25,"^4;",["^Q",[["^50"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",407,"^4?","^55","^9",407,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^50"]]]]]],"~$body-line",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",141,"^8",8,"^9",141,"^:",17,"~:private",true,"^P",["^Q",["^48",["^Q",[["~$index","^4S"]]]]]],"^7X",true,"^R","~$devtools.formatters.markup/body-line","^6","devtools/formatters/markup.cljs","^:",17,"^4;",["^Q",[["^7Y","^4S"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",141,"^4?","^4@","^9",141,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^7Y","^4S"]]]]]],"~$body-lines",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",155,"^8",8,"^9",155,"^:",18,"^7X",true,"^P",["^Q",["^48",["^Q",[["^4S","^53"]]]]]],"^7X",true,"^R","~$devtools.formatters.markup/body-lines","^6","devtools/formatters/markup.cljs","^:",18,"^4;",["^Q",[["^4S","^53"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",155,"^4?",["^N",["^55","^4@"]],"^9",155,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^4S","^53"]]]]]],"~$<fields>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",356,"^8",7,"^9",356,"^:",15,"^P",["^Q",["^48",["^Q",[["^5@","~$&",["~$max-fields"]]]]]],"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^5@",["^82"]]]],"^P",["^Q",[["^5@","~$&",["^82"]]]],"^4=",["^Q",[null]]]],"^R","~$devtools.formatters.markup/<fields>","^6","devtools/formatters/markup.cljs","^:",15,"^4H",["^ ","^4>",true,"^4I",1,"^4A",1,"^4;",[["^Q",["^5@",["^82"]]]],"^P",["^Q",[["^5@","~$&",["^82"]]]],"^4=",["^Q",[null]]],"^4;",[["^Q",["^5@",["^82"]]]],"^4<",null,"^4I",1,"^4=",["^Q",[null]],"^8",1,"^4>",true,"^4K",[["^ ","^4I",1,"^4>",true,"^4L","^55"]],"^7",356,"^4?","^4N","^9",356,"^4A",1,"^4B",true,"^P",["^Q",[["^5@","~$&",["^82"]]]]],"~$<nil>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^P",["^Q",["^48",["^Q",[[]]]]]],"^R","~$devtools.formatters.markup/<nil>","^6","devtools/formatters/markup.cljs","^:",12,"^4;",["^Q",[[]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",68,"^4?","^4@","^9",68,"^4A",0,"^4B",true,"^P",["^Q",["^48",["^Q",[[]]]]]],"~$<body>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",114,"^8",7,"^9",114,"^:",13,"^P",["^Q",["^48",["^Q",[["~$markup"]]]]]],"^R","~$devtools.formatters.markup/<body>","^6","devtools/formatters/markup.cljs","^:",13,"^4;",["^Q",[["^87"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",114,"^4?","^4@","^9",114,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^87"]]]]]],"~$<number>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^P",["^Q",["^48",["^Q",[["~$number"]]]]]],"^R","~$devtools.formatters.markup/<number>","^6","devtools/formatters/markup.cljs","^:",15,"^4;",["^Q",[["^8:"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",81,"^4?","^4@","^9",81,"^4A",1,"^4B",true,"^P",["^Q",["^48",["^Q",[["^8:"]]]]]],"~$<protocol-details>",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",305,"^8",7,"^9",305,"^:",25,"^P",["^Q",["^48",["^Q",[["^5A","^1Q","^6T","~$selector","~$_fast?"]]]]]],"^R","~$devtools.formatters.markup/<protocol-details>","^6","devtools/formatters/markup.cljs","^:",25,"^4;",["^Q",[["^5A","^1Q","^6T","^8=","^8>"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",305,"^4?","^4@","^9",305,"^4A",5,"^4B",true,"^P",["^Q",["^48",["^Q",[["^5A","^1Q","^6T","^8=","^8>"]]]]]],"~$prepare-body-lines",["^ ","^47",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",147,"^8",8,"^9",147,"^:",26,"^7X",true,"^P",["^Q",["^48",["^Q",[["~$data","^53"]]]]]],"^7X",true,"^R","~$devtools.formatters.markup/prepare-body-lines","^6","devtools/formatters/markup.cljs","^:",26,"^4;",["^Q",[["^8A","^53"]]],"^4<",null,"^4=",["^Q",[null,null]],"^8",1,"^4>",false,"^7",147,"^4?",["^N",["^55","^4@"]],"^9",147,"^4A",2,"^4B",true,"^P",["^Q",["^48",["^Q",[["^8A","^53"]]]]]]],"^17",["^ ","^L","^L","^13","^13","^11","^11","^12","^11"],"~:cljs.analyzer/constants",["^ ","^15",["^N",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^T","~:symbol","~:fields-details-row","^R","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^4L","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^28",[["^<T","~:static-fns"],true,["^<T","~:elide-asserts"],false,["^<T","~:optimize-constants"],null,["^<T","^1["],null,["^<T","~:external-config"],null,["^<T","~:tooling-config"],null,["^<T","~:emit-constants"],null,["^<T","~:load-tests"],null,["^<T","~:form-size-threshold"],null,["^<T","~:infer-externs"],true,["^<T","^21"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^<T","~:fn-invoke-direct"],null,["^<T","~:source-map"],"/dev/null"]]]