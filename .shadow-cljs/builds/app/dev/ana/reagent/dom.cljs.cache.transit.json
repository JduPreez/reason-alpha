["^ ","~:output",["^ ","~:js","goog.provide('reagent.dom');\r\ngoog.require('cljs.core');\r\nvar module$node_modules$react_dom$index=shadow.js.require(\"module$node_modules$react_dom$index\", {});\r\ngoog.require('reagent.impl.util');\r\ngoog.require('reagent.impl.template');\r\ngoog.require('reagent.impl.batching');\r\ngoog.require('reagent.ratom');\r\ngoog.require('reagent.debug');\r\ngoog.require('reagent.interop');\r\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.imported !== 'undefined')){\r\n} else {\r\nreagent.dom.imported = null;\r\n}\r\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.roots !== 'undefined')){\r\n} else {\r\nreagent.dom.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\r\n}\r\nreagent.dom.unmount_comp = (function reagent$dom$unmount_comp(container){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\r\n\r\nreturn module$node_modules$react_dom$index.unmountComponentAtNode(container);\r\n});\r\nreagent.dom.render_comp = (function reagent$dom$render_comp(comp,container,callback){\r\nvar _STAR_always_update_STAR__orig_val__25074 = reagent.impl.util._STAR_always_update_STAR_;\r\nvar _STAR_always_update_STAR__temp_val__25075 = true;\r\nreagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__25075;\r\n\r\ntry{var G__25076 = (comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null));\r\nvar G__25077 = container;\r\nvar G__25078 = ((function (G__25076,G__25077,_STAR_always_update_STAR__orig_val__25074,_STAR_always_update_STAR__temp_val__25075){\r\nreturn (function (){\r\nvar _STAR_always_update_STAR__orig_val__25079 = reagent.impl.util._STAR_always_update_STAR_;\r\nvar _STAR_always_update_STAR__temp_val__25080 = false;\r\nreagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__25080;\r\n\r\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp,container], null));\r\n\r\nreagent.impl.batching.flush_after_render();\r\n\r\nif((!((callback == null)))){\r\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\r\n} else {\r\nreturn null;\r\n}\r\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__25079;\r\n}});})(G__25076,G__25077,_STAR_always_update_STAR__orig_val__25074,_STAR_always_update_STAR__temp_val__25075))\r\n;\r\nreturn module$node_modules$react_dom$index.render(G__25076,G__25077,G__25078);\r\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__25074;\r\n}});\r\nreagent.dom.re_render_component = (function reagent$dom$re_render_component(comp,container){\r\nreturn reagent.dom.render_comp(comp,container,null);\r\n});\r\n/**\r\n * Render a Reagent component into the DOM. The first argument may be\r\n *   either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\r\n * \r\n *   Optionally takes a callback that is called when the component is in place.\r\n * \r\n *   Returns the mounted component instance.\r\n */\r\nreagent.dom.render = (function reagent$dom$render(var_args){\r\nvar G__25083 = arguments.length;\r\nswitch (G__25083) {\r\ncase 2:\r\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\nreagent.dom.render.cljs$core$IFn$_invoke$arity$2 = (function (comp,container){\r\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,null);\r\n});\r\n\r\nreagent.dom.render.cljs$core$IFn$_invoke$arity$3 = (function (comp,container,callback){\r\nreagent.ratom.flush_BANG_();\r\n\r\nvar f = (function (){\r\nreturn reagent.impl.template.as_element(((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\r\n});\r\nreturn reagent.dom.render_comp(f,container,callback);\r\n});\r\n\r\nreagent.dom.render.cljs$lang$maxFixedArity = 3;\r\n\r\nreagent.dom.unmount_component_at_node = (function reagent$dom$unmount_component_at_node(container){\r\nreturn reagent.dom.unmount_comp(container);\r\n});\r\n/**\r\n * Returns the root DOM node of a mounted component.\r\n */\r\nreagent.dom.dom_node = (function reagent$dom$dom_node(this$){\r\nreturn module$node_modules$react_dom$index.findDOMNode(this$);\r\n});\r\nreagent.impl.template.find_dom_node = reagent.dom.dom_node;\r\n/**\r\n * Force re-rendering of all mounted Reagent components. This is\r\n *   probably only useful in a development environment, when you want to\r\n *   update components in response to some dynamic changes to code.\r\n * \r\n *   Note that force-update-all may not update root components. This\r\n *   happens if a component 'foo' is mounted with `(render [foo])` (since\r\n *   functions are passed by value, and not by reference, in\r\n *   ClojureScript). To get around this you'll have to introduce a layer\r\n *   of indirection, for example by using `(render [#'foo])` instead.\r\n */\r\nreagent.dom.force_update_all = (function reagent$dom$force_update_all(){\r\nreagent.ratom.flush_BANG_();\r\n\r\nvar seq__25087_25097 = cljs.core.seq(cljs.core.vals(cljs.core.deref(reagent.dom.roots)));\r\nvar chunk__25088_25098 = null;\r\nvar count__25089_25099 = (0);\r\nvar i__25090_25100 = (0);\r\nwhile(true){\r\nif((i__25090_25100 < count__25089_25099)){\r\nvar v_25101 = chunk__25088_25098.cljs$core$IIndexed$_nth$arity$2(null,i__25090_25100);\r\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_25101);\r\n\r\n\r\nvar G__25102 = seq__25087_25097;\r\nvar G__25103 = chunk__25088_25098;\r\nvar G__25104 = count__25089_25099;\r\nvar G__25105 = (i__25090_25100 + (1));\r\nseq__25087_25097 = G__25102;\r\nchunk__25088_25098 = G__25103;\r\ncount__25089_25099 = G__25104;\r\ni__25090_25100 = G__25105;\r\ncontinue;\r\n} else {\r\nvar temp__5720__auto___25108 = cljs.core.seq(seq__25087_25097);\r\nif(temp__5720__auto___25108){\r\nvar seq__25087_25109__$1 = temp__5720__auto___25108;\r\nif(cljs.core.chunked_seq_QMARK_(seq__25087_25109__$1)){\r\nvar c__4550__auto___25110 = cljs.core.chunk_first(seq__25087_25109__$1);\r\nvar G__25111 = cljs.core.chunk_rest(seq__25087_25109__$1);\r\nvar G__25112 = c__4550__auto___25110;\r\nvar G__25113 = cljs.core.count(c__4550__auto___25110);\r\nvar G__25114 = (0);\r\nseq__25087_25097 = G__25111;\r\nchunk__25088_25098 = G__25112;\r\ncount__25089_25099 = G__25113;\r\ni__25090_25100 = G__25114;\r\ncontinue;\r\n} else {\r\nvar v_25115 = cljs.core.first(seq__25087_25109__$1);\r\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_25115);\r\n\r\n\r\nvar G__25117 = cljs.core.next(seq__25087_25109__$1);\r\nvar G__25118 = null;\r\nvar G__25119 = (0);\r\nvar G__25120 = (0);\r\nseq__25087_25097 = G__25117;\r\nchunk__25088_25098 = G__25118;\r\ncount__25089_25099 = G__25119;\r\ni__25090_25100 = G__25120;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nreturn \"Updated\";\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/dom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",["^ ","~$dbg","~$reagent.debug","~$$","~$reagent.interop","~$$!","^M"],"~:excludes",["~#set",[]],"~:name","~$reagent.dom","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^W","^M","^M","~$reagent.ratom","^X","^C","^C","~$cljs.core","^Y","~$goog","^Z","~$reagent.impl.template","^[","~$reagent.impl.batching","^10","~$util","^W","~$tmpl","^[","~$ratom","^X","~$batch","^10","^L","^L","^B","^C"],"~:seen",["^P",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^L","^L","^M","^M","^Y","^Y","^X","^X","^13","^X"],"~:form",["~#list",["~$ns","^R",["^1:",["^16",["^B","~:as","^B"],["^W","^1<","^11"],["^[","^1<","^12"],["^10","^1<","^14"],["^X","^1<","^13"],["^L","~:refer-macros",["^K"]],["^M","^1=",["~$$","^N"]]]]]],"~:flags",["^ ","^16",["^P",[]]],"~:js-deps",["^ "],"~:deps",["^Z","^Y","^C","^W","^[","^10","^X","^L","^M"]],"^T","^R","~:resource-id",["~:shadow.build.classpath/resource","reagent/dom.cljs"],"~:compiled-at",1574163713906,"~:resource-name","reagent/dom.cljs","~:warnings",[],"~:source","(ns reagent.dom\n  (:require [react-dom :as react-dom]\n            [reagent.impl.util :as util]\n            [reagent.impl.template :as tmpl]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dbg]]\n            [reagent.interop :refer-macros [$ $!]]))\n\n(defonce ^:private imported nil)\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container [comp container])\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container nil))\n  ([comp container callback]\n   (ratom/flush!)\n   (let [f (fn []\n             (tmpl/as-element (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  [this]\n  (react-dom/findDOMNode this))\n\n(set! tmpl/find-dom-node dom-node)\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  []\n  (ratom/flush!)\n  (doseq [v (vals @roots)]\n    (apply re-render-component v))\n  \"Updated\")\n","~:reader-features",["^P",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;;;;;AASA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAmBC;;AAEnB,AAAA,AAAAH,AAAAC,AAAAG;AAAA;AAAA,AAAA,AAAmBC,AAAM,AAAA,AAACC;;AAE1B,AAAA,AAAOC,AAAcC;AAArB,AACE,AAACC,AAAMJ,AAAMK,AAAOF;;AACpB,AAACG,AAAiCH;;AAEpC,AAAA,AAAOI,AAAaC,AAAKL,AAAUM;AAAnC,AACE,AAAAC,AAAUE;AAAVD,AAAA;AAAA,AAAA,AAAAA,AAAUC;;AAAV,AAAA,AACE,AAAAC,AAAkB,AAACL,AAAAA,AAAAA;AAAnBM,AAAyBX;AAAzBY,AACE;;AAAA,AACE,AAAAE,AAAUL;AAAVM,AAAA;AAAA,AAAA,AAAAA,AAAUN;;AAAV,AAAA,AACE,AAAA,AAACO,AAAMnB,AAAMoB,AAAMjB,AAAWK,AAAKL;;AACnC,AAACkB;;AACD,AAAI,AAAA,AAAA,AAAOZ;AACT,AAACA,AAAAA,AAAAA;;AADH;;AAHF,AAAA,AAAAQ,AAAUL;;;AAFd,AAAA,AAAAC,AAAAC,AAAAC,AAACC;AADH,AAAA,AAAAN,AAAUE;;AASZ,AAAA,AAAOU,AAAqBd,AAAKL;AAAjC,AACE,AAAA,AAACI,AAAYC,AAAKL;;AAEpB,AAAA;;;;;;;;AAAA,AAAAoB,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAOFjB,AAAKL;AAPT,AAQG,AAAA,AAACwB,AAAOnB,AAAKL;;;AARhB,AAAA,AAAA,AAAMsB,AASFjB,AAAKL,AAAUM;AATnB,AAUG,AAACmB;;AACD,AAAMC,AAAE;AAAA,AACE,AAACC,AAAgB,AAAI,AAACC,AAAIvB,AAAM,AAACA,AAAAA,AAAAA,AAAMA;;AADjD,AAEE,AAACD,AAAYsB,AAAE1B,AAAUM;;;AAb9B,AAAA,AAAA,AAAMgB;;AAAN,AAeA,AAAA,AAAMO,AAA2B7B;AAAjC,AACE,AAACD,AAAaC;;AAEhB;;;AAAA,AAAM8B,AAEHC;AAFH,AAGE,AAACC,AAAsBD;;AAEzB,AAAME,AAAmBH;AAEzB;;;;;;;;;;;AAAA,AAAMI;AAAN,AAWE,AAACT;;AACD,AAAAU,AAAA,AAAAC,AAAU,AAAA,AAAAa,AAACC,AAAMrD;AAAjBwC,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAAb;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAD;AAAA,AAAA,AAAAK;AAAA,AAAA,AAAAL,AAAAK;AAAA,AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAAO,AAAA,AAAAC,AAAAR;AAAA,AAAA,AAAA,AAAAS,AAAAT;AAAAO;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAX,AAAQa;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAA,AAAAD,AAAAZ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAZF","names",["js/reagent","js/reagent.dom","js/reagent.dom.imported","reagent.dom/imported","js/reagent.dom.roots","reagent.dom/roots","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.dom/unmount-comp","container","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc","js/module$node_modules$react_dom$index.unmountComponentAtNode","reagent.dom/render-comp","comp","callback","*always-update*-orig-val__25074","*always-update*-temp-val__25075","reagent.impl.util/*always-update*","G__25076","G__25077","G__25078","js/module$node_modules$react_dom$index.render","*always-update*-orig-val__25079","*always-update*-temp-val__25080","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","reagent.impl.batching/flush-after-render","reagent.dom/re-render-component","var_args","G__25083","reagent.dom/render","js/Error","reagent.dom.render.cljs$core$IFn$_invoke$arity$3","reagent.ratom/flush!","f","reagent.impl.template/as-element","cljs.core/fn?","reagent.dom/unmount-component-at-node","reagent.dom/dom-node","this","js/module$node_modules$react_dom$index.findDOMNode","reagent.impl.template/find-dom-node","reagent.dom/force-update-all","seq__25087","cljs.core/seq","chunk__25088","count__25089","i__25090","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","v","cljs.core/deref","cljs.core/vals","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1574163601000,1574163601000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^P",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1B","reagent/impl/batching.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^L","^M","^W","~$clojure.string"]]],["^1B","goog/math/math.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","~$goog.array","~$goog.asserts"]]],["^1B","goog/array/array.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^1Y"]]],["^1O","node_modules/prop-types/checkPropTypes.js"],[1574163601000,1574163601000,1549836454000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1B","reagent/impl/util.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^L","^M","^1W"]]],["^1O","node_modules/fbjs/lib/emptyFunction.js"],[1574163601000,1574163601000,1528785402000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1B","goog/debug/error.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1O","node_modules/fbjs/lib/emptyObject.js"],[1574163601000,1574163601000,1528785402000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1B","goog/dom/nodetype.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1O","node_modules/scheduler/cjs/scheduler.development.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1B","reagent/ratom.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^W","^L","^10","~$clojure.set"]]],["^1O","node_modules/scheduler/cjs/scheduler.production.min.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1O","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1O","node_modules/create-react-class/factory.js"],[1574163601000,1574163601000,1517346959000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1O","node_modules/react/index.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1B","shadow/js.js"],[1574163601395,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1B","goog/object/object.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1B","reagent/impl/template.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^?","^1W","~$clojure.walk","^W","~$reagent.impl.component","^10","^X","^M","^L"]]],["^1O","node_modules/react-dom/cjs/react-dom.production.min.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","^?","^20","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1574163601000,1567262080000],["^1O","node_modules/react/cjs/react.development.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","^20","~$module$node_modules$prop_types$checkPropTypes"]]],["^1B","goog/math/long.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^1Y","~$goog.reflect"]]],["^1O","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1O","node_modules/fbjs/lib/warning.js"],[1574163601000,1574163601000,1528785401000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1B","goog/functions/functions.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1B","reagent/impl/component.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^A","^?","^W","^10","^X","^M","^L"]]],["^1B","clojure/walk.cljs"],[1567262080081,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y"]]],["^1B","goog/structs/map.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"]]],["^1O","node_modules/scheduler/index.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1B","goog/asserts/asserts.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"]]],["^1B","goog/uri/uri.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^1X","^1Y","^2D","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1O","node_modules/object-assign/index.js"],[1574163601000,1574163601000,1484580833000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1B","goog/base.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",[]]],["^1B","goog/structs/structs.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^1X","^2?"]]],["^1B","clojure/string.cljs"],[1567262080081,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^2D","~$goog.string.StringBuffer"]]],["^1O","node_modules/create-react-class/index.js"],[1574163601000,1574163601000,1517346956000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","^?","~$module$node_modules$create_react_class$factory"]]],["^1O","node_modules/react/cjs/react.production.min.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","^20"]]],["^1B","goog/string/string.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1B","goog/reflect/reflect.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1B","goog/string/stringbuffer.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1B","goog/iter/iter.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^1X","^1Y","~$goog.functions","~$goog.math"]]],["^1B","reagent/dom.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y","^C","^W","^[","^10","^X","^L","^M"]]],["^1O","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1574163601000,1574163601000,1549571078000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]],["^1B","reagent/interop.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y"]]],["^1B","cljs/core.cljs"],[1567262080081,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["~$goog.math.Long","~$goog.math.Integer","^2D","^2?","^1X","~$goog.Uri","^2J"]]],["^1B","reagent/debug.cljs"],[1567262094669,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y"]]],["^1B","goog/math/integer.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z"]]],["^1O","node_modules/scheduler/tracing.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1O","node_modules/react-dom/cjs/react-dom.development.js"],[1574163601000,1574163601000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T","^?","^20","^2:","^28","~$module$node_modules$scheduler$tracing"]]],["^1B","clojure/set.cljs"],[1567262080081,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^Y"]]],["^1B","goog/uri/utils.js"],[1567356087625,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^Z","^1X","^1Y","^2D"]]],["^1O","node_modules/fbjs/lib/invariant.js"],[1574163601000,1574163601000,1528785400000,"^1P",["^ ","^1Q",null,"^1R",["^P",[]],"^1S",["^1T"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1567262076000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1567262080000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/dom.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",["^ ","^K","^L","~$$","^M","^N","^M"],"^O",["^P",[]],"~:shadow/js-access-properties",["^P",["findDOMNode","render","unmountComponentAtNode"]],"^Q","^R","^U",null,"^V",["^ ","^W","^W","^M","^M","^X","^X","^C","^C","^Y","^Y","^Z","^Z","^[","^[","^10","^10","^11","^W","^12","^[","^13","^X","^14","^10","^L","^L","^B","^C"],"^15",["^P",["^16"]],"~:shadow/js-access-global",["^P",["Error"]],"^17",null,"~:defs",["^ ","~$re-render-component",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/dom.cljs","^7",28,"^8",8,"^9",28,"^:",27,"~:private",true,"~:arglists",["^1:",["~$quote",["^1:",[["~$comp","~$container"]]]]]],"^3K",true,"^Q","~$reagent.dom/re-render-component","^6","reagent/dom.cljs","^:",27,"~:method-params",["^1:",[["^3N","^3O"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",28,"~:ret-tag","~$any","^9",28,"~:max-fixed-arity",2,"~:fn-var",true,"^3L",["^1:",["^3M",["^1:",[["^3N","^3O"]]]]]],"~$force-update-all",["^ ","^3J",null,"^5",["^ ","^6","reagent/dom.cljs","^7",56,"^8",7,"^9",56,"^:",23,"^3L",["^1:",["^3M",["^1:",[[]]]]],"~:doc","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"^Q","~$reagent.dom/force-update-all","^6","reagent/dom.cljs","^:",23,"^3Q",["^1:",[[]]],"^3R",null,"^3S",["^1:",[null,null]],"^8",1,"^3T",false,"^7",56,"^3U","~$string","^9",56,"^3W",0,"^3X",true,"^3L",["^1:",["^3M",["^1:",[[]]]]],"^3Z","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"~$render-comp",["^ ","^3J",null,"^5",["^ ","^6","reagent/dom.cljs","^7",18,"^8",8,"^9",18,"^:",19,"^3K",true,"^3L",["^1:",["^3M",["^1:",[["^3N","^3O","~$callback"]]]]]],"^3K",true,"^Q","~$reagent.dom/render-comp","^6","reagent/dom.cljs","^:",19,"^3Q",["^1:",[["^3N","^3O","^42"]]],"^3R",null,"^3S",["^1:",[null,null]],"^8",1,"^3T",false,"^7",18,"^9",18,"^3W",3,"^3X",true,"^3L",["^1:",["^3M",["^1:",[["^3N","^3O","^42"]]]]]],"~$imported",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",10,"^8",20,"^9",10,"^:",28,"^3K",true],"^3K",true,"^Q","~$reagent.dom/imported","^6","reagent/dom.cljs","^:",28,"^8",1,"^7",10,"^9",10,"~:tag","~$clj-nil"],"~$unmount-component-at-node",["^ ","^3J",null,"^5",["^ ","^6","reagent/dom.cljs","^7",46,"^8",7,"^9",46,"^:",32,"^3L",["^1:",["^3M",["^1:",[["^3O"]]]]]],"^Q","~$reagent.dom/unmount-component-at-node","^6","reagent/dom.cljs","^:",32,"^3Q",["^1:",[["^3O"]]],"^3R",null,"^3S",["^1:",[null,null]],"^8",1,"^3T",false,"^7",46,"^3U","~$js","^9",46,"^3W",1,"^3X",true,"^3L",["^1:",["^3M",["^1:",[["^3O"]]]]]],"~$unmount-comp",["^ ","^3J",null,"^5",["^ ","^6","reagent/dom.cljs","^7",14,"^8",8,"^9",14,"^:",20,"^3K",true,"^3L",["^1:",["^3M",["^1:",[["^3O"]]]]]],"^3K",true,"^Q","~$reagent.dom/unmount-comp","^6","reagent/dom.cljs","^:",20,"^3Q",["^1:",[["^3O"]]],"^3R",null,"^3S",["^1:",[null,null]],"^8",1,"^3T",false,"^7",14,"^3U","^4:","^9",14,"^3W",1,"^3X",true,"^3L",["^1:",["^3M",["^1:",[["^3O"]]]]]],"~$roots",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",12,"^8",20,"^9",12,"^:",25,"^3K",true],"^3K",true,"^Q","~$reagent.dom/roots","^6","reagent/dom.cljs","^:",25,"^8",1,"^7",12,"^9",12,"^46","~$cljs.core/Atom"],"~$dom-node",["^ ","^3J",null,"^5",["^ ","^6","reagent/dom.cljs","^7",49,"^8",7,"^9",49,"^:",15,"^3L",["^1:",["^3M",["^1:",[["~$this"]]]]],"^3Z","Returns the root DOM node of a mounted component."],"^Q","~$reagent.dom/dom-node","^6","reagent/dom.cljs","^:",15,"^3Q",["^1:",[["^4A"]]],"^3R",null,"^3S",["^1:",[null,null]],"^8",1,"^3T",false,"^7",49,"^3U","^4:","^9",49,"^3W",1,"^3X",true,"^3L",["^1:",["^3M",["^1:",[["^4A"]]]]],"^3Z","Returns the root DOM node of a mounted component."],"~$render",["^ ","^3J",null,"^5",["^ ","^6","reagent/dom.cljs","^7",31,"^8",7,"^9",31,"^:",13,"^3L",["^1:",["^3M",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]]]],"^3Z","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.","~:top-fn",["^ ","^3T",false,"~:fixed-arity",3,"^3W",3,"^3Q",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]],"^3L",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]],"^3S",["^1:",[null,null]]]],"^Q","~$reagent.dom/render","^6","reagent/dom.cljs","^:",13,"^4D",["^ ","^3T",false,"^4E",3,"^3W",3,"^3Q",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]],"^3L",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]],"^3S",["^1:",[null,null]]],"^3Q",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]],"^3R",null,"^4E",3,"^3S",["^1:",[null,null]],"^8",1,"^3T",false,"~:methods",[["^ ","^4E",2,"^3T",false,"^46","^3V"],["^ ","^4E",3,"^3T",false,"^46","^3V"]],"^7",31,"^9",31,"^3W",3,"^3X",true,"^3L",["^1:",[["^3N","^3O"],["^3N","^3O","^42"]]],"^3Z","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance."]],"^18",["^ ","^L","^L","^M","^M","^Y","^Y","^X","^X","^13","^X"],"^1>",["^ ","^16",["^P",[]]],"^1?",["^ "],"^1@",["^Z","^Y","^C","^W","^[","^10","^X","^L","^M"]],"^T","^R","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1N",[["^4J","~:static-fns"],true,["^4J","~:elide-asserts"],false,["^4J","~:optimize-constants"],null,["^4J","^1E"],null,["^4J","~:external-config"],null,["^4J","~:tooling-config"],null,["^4J","~:emit-constants"],null,["^4J","~:load-tests"],null,["^4J","~:form-size-threshold"],null,["^4J","~:infer-externs"],true,["^4J","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4J","~:fn-invoke-direct"],null,["^4J","~:source-map"],"/dev/null"]]]