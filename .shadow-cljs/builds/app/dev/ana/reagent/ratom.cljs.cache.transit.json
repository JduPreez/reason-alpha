["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\r\ngoog.require('cljs.core');\r\ngoog.require('reagent.impl.util');\r\ngoog.require('reagent.debug');\r\ngoog.require('reagent.impl.batching');\r\ngoog.require('clojure.set');\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\r\n} else {\r\nreagent.ratom.debug = false;\r\n}\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\r\n} else {\r\nreagent.ratom.generation = (0);\r\n}\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\r\n} else {\r\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\r\n}\r\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\r\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\r\n});\r\nreagent.ratom.running = (function reagent$ratom$running(){\r\nreturn cljs.core.deref(reagent.ratom._running);\r\n});\r\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\r\nif((x == null)){\r\nreturn (0);\r\n} else {\r\nreturn x.length;\r\n}\r\n});\r\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\r\nvar len = reagent.ratom.arr_len(x);\r\nvar and__4120__auto__ = (len === reagent.ratom.arr_len(y));\r\nif(and__4120__auto__){\r\nvar i = (0);\r\nwhile(true){\r\nvar or__4131__auto__ = (i === len);\r\nif(or__4131__auto__){\r\nreturn or__4131__auto__;\r\n} else {\r\nif(((x[i]) === (y[i]))){\r\nvar G__24895 = (i + (1));\r\ni = G__24895;\r\ncontinue;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn and__4120__auto__;\r\n}\r\n});\r\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\r\nvar _STAR_ratom_context_STAR__orig_val__24773 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__24774 = obj;\r\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__24774;\r\n\r\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__24773;\r\n}});\r\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\r\nr.captured = null;\r\n\r\nr.ratomGeneration = reagent.ratom.generation = (reagent.ratom.generation + (1));\r\n\r\n\r\nvar res = reagent.ratom.in_context(r,f);\r\nvar c = r.captured;\r\nr.dirty_QMARK_ = false;\r\n\r\nif(reagent.ratom.arr_eq(c,r.watching)){\r\n} else {\r\nr._update_watching(c);\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\r\nvar temp__5724__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\r\nif((temp__5724__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar r = temp__5724__auto__;\r\nvar c = r.captured;\r\nif((c == null)){\r\nreturn r.captured = [derefed];\r\n} else {\r\nreturn c.push(derefed);\r\n}\r\n}\r\n});\r\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\r\n} else {\r\n}\r\n\r\nreturn new$;\r\n});\r\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\r\nvar w = this$.watches;\r\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f));\r\n\r\nreturn this$.watchesArr = null;\r\n});\r\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\r\nvar w = this$.watches;\r\nthis$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key));\r\n\r\nreturn this$.watchesArr = null;\r\n});\r\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\r\nvar w = this$.watchesArr;\r\nvar a = (((w == null))?this$.watchesArr = cljs.core.reduce_kv(((function (w){\r\nreturn (function (p1__24780_SHARP_,p2__24781_SHARP_,p3__24782_SHARP_){\r\nvar G__24783 = p1__24780_SHARP_;\r\nG__24783.push(p2__24781_SHARP_);\r\n\r\nG__24783.push(p3__24782_SHARP_);\r\n\r\nreturn G__24783;\r\n});})(w))\r\n,[],this$.watches):w);\r\nvar len = a.length;\r\nvar i = (0);\r\nwhile(true){\r\nif((i < len)){\r\nvar k_24896 = (a[i]);\r\nvar f_24897 = (a[(i + (1))]);\r\n(f_24897.cljs$core$IFn$_invoke$arity$4 ? f_24897.cljs$core$IFn$_invoke$arity$4(k_24896,this$,old,new$) : f_24897.call(null,k_24896,this$,old,new$));\r\n\r\nvar G__24898 = ((2) + i);\r\ni = G__24898;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s){\r\ncljs.core._write(writer,[\"#<\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\r\n\r\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__24786 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__24787 = null;\r\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__24787;\r\n\r\ntry{return cljs.core._deref(a);\r\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__24786;\r\n}})(),writer,opts);\r\n\r\nreturn cljs.core._write(writer,\">\");\r\n});\r\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\r\n} else {\r\nreagent.ratom.rea_queue = null;\r\n}\r\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\r\nif((reagent.ratom.rea_queue == null)){\r\nreagent.ratom.rea_queue = [];\r\n\r\nreagent.impl.batching.schedule();\r\n} else {\r\n}\r\n\r\nreturn reagent.ratom.rea_queue.push(r);\r\n});\r\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\r\nwhile(true){\r\nvar q = reagent.ratom.rea_queue;\r\nif((q == null)){\r\nreturn null;\r\n} else {\r\nreagent.ratom.rea_queue = null;\r\n\r\nvar n__4607__auto___24899 = q.length;\r\nvar i_24900 = (0);\r\nwhile(true){\r\nif((i_24900 < n__4607__auto___24899)){\r\n(q[i_24900])._queued_run();\r\n\r\nvar G__24903 = (i_24900 + (1));\r\ni_24900 = G__24903;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_;\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IReactiveAtom = function(){};\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\r\nthis.state = state;\r\nthis.meta = meta;\r\nthis.validator = validator;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\nreagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Atom:\");\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn self__.meta;\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn goog.getUid(this$__$1);\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\r\nvar self__ = this;\r\nvar o__$1 = this;\r\nreturn (o__$1 === other);\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nif((self__.validator == null)){\r\n} else {\r\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\r\n}\r\n}\r\n\r\nvar old_value = self__.state;\r\nself__.state = new_value;\r\n\r\nif((self__.watches == null)){\r\n} else {\r\nreagent.ratom.notify_w(a__$1,old_value,new_value);\r\n}\r\n\r\nreturn new_value;\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\r\n});\r\n\r\nreagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\r\n\r\nreturn self__.state;\r\n});\r\n\r\nreagent.ratom.RAtom.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n});\r\n\r\nreagent.ratom.RAtom.cljs$lang$type = true;\r\n\r\nreagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\";\r\n\r\nreagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\r\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RAtom\");\r\n});\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/RAtom.\r\n */\r\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\r\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\r\n});\r\n\r\n/**\r\n * Like clojure.core/atom, except that it keeps track of derefs.\r\n */\r\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\r\nvar G__24797 = arguments.length;\r\nswitch (G__24797) {\r\ncase 1:\r\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4751__auto__ = [];\r\nvar len__4730__auto___24908 = arguments.length;\r\nvar i__4731__auto___24909 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24909 < len__4730__auto___24908)){\r\nargs_arr__4751__auto__.push((arguments[i__4731__auto___24909]));\r\n\r\nvar G__24910 = (i__4731__auto___24909 + (1));\r\ni__4731__auto___24909 = G__24910;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4752__auto__ = (new cljs.core.IndexedSeq(args_arr__4751__auto__.slice((1)),(0),null));\r\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4752__auto__);\r\n\r\n}\r\n});\r\n\r\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\r\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\r\n});\r\n\r\nreagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__24799){\r\nvar map__24800 = p__24799;\r\nvar map__24800__$1 = (((((!((map__24800 == null))))?(((((map__24800.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24800.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24800):map__24800);\r\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24800__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\r\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24800__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\r\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\r\n});\r\n\r\n/** @this {Function} */\r\nreagent.ratom.atom.cljs$lang$applyTo = (function (seq24795){\r\nvar G__24796 = cljs.core.first(seq24795);\r\nvar seq24795__$1 = cljs.core.next(seq24795);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24796,seq24795__$1);\r\n});\r\n\r\nreagent.ratom.atom.cljs$lang$maxFixedArity = (1);\r\n\r\nreagent.ratom.cache_key = \"reagReactionCache\";\r\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\r\nvar m = (o[\"reagReactionCache\"]);\r\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\r\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\r\nif((!((r == null)))){\r\nreturn cljs.core._deref(r);\r\n} else {\r\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n} else {\r\nvar r__$1 = (function (){var G__24802 = f;\r\nvar G__24803 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\r\nvar G__24804 = ((function (G__24802,G__24803,m,m__$1,r){\r\nreturn (function (x){\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\r\n} else {\r\n}\r\n\r\nvar __24914 = (o[\"reagReactionCache\"]);\r\nvar __24915__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__24914,k);\r\n(o[\"reagReactionCache\"] = __24915__$1);\r\n\r\nif((!((obj == null)))){\r\nobj.reaction = null;\r\n} else {\r\n}\r\n\r\nif((!((destroy == null)))){\r\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\r\n} else {\r\nreturn null;\r\n}\r\n});})(G__24802,G__24803,m,m__$1,r))\r\n;\r\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__24802,G__24803,G__24804) : reagent.ratom.make_reaction.call(null,G__24802,G__24803,G__24804));\r\n})();\r\nvar v = cljs.core._deref(r__$1);\r\n(o[\"reagReactionCache\"] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\r\n\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\r\n} else {\r\n}\r\n\r\nif((!((obj == null)))){\r\nobj.reaction = r__$1;\r\n} else {\r\n}\r\n\r\nreturn v;\r\n\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Track = (function (f,args,reaction){\r\nthis.f = f;\r\nthis.args = args;\r\nthis.reaction = reaction;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 0;\r\n});\r\nreagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nreagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5722__auto__ = self__.reaction;\r\nif((temp__5722__auto__ == null)){\r\nreturn reagent.ratom.cached_reaction(((function (temp__5722__auto__,this$__$1){\r\nreturn (function (){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\r\n});})(temp__5722__auto__,this$__$1))\r\n,self__.f,self__.args,this$__$1,null);\r\n} else {\r\nvar r = temp__5722__auto__;\r\nreturn cljs.core._deref(r);\r\n}\r\n});\r\n\r\nreagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\r\n});\r\n\r\nreagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\r\n});\r\n\r\nreagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track:\");\r\n});\r\n\r\nreagent.ratom.Track.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n});\r\n\r\nreagent.ratom.Track.cljs$lang$type = true;\r\n\r\nreagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\";\r\n\r\nreagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\r\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Track\");\r\n});\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Track.\r\n */\r\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\r\nreturn (new reagent.ratom.Track(f,args,reaction));\r\n});\r\n\r\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\r\nreturn (new reagent.ratom.Track(f,args,null));\r\n});\r\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\r\nvar t = reagent.ratom.make_track(f,args);\r\nvar r = (function (){var G__24806 = ((function (t){\r\nreturn (function (){\r\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\r\n});})(t))\r\n;\r\nvar G__24807 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\r\nvar G__24808 = true;\r\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__24806,G__24807,G__24808) : reagent.ratom.make_reaction.call(null,G__24806,G__24807,G__24808));\r\n})();\r\ncljs.core.deref(r);\r\n\r\nreturn r;\r\n});\r\nreagent.ratom.track = (function reagent$ratom$track(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24917 = arguments.length;\r\nvar i__4731__auto___24918 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24918 < len__4730__auto___24917)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24918]));\r\n\r\nvar G__24919 = (i__4731__auto___24918 + (1));\r\ni__4731__auto___24918 = G__24919;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\nreagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\r\nif(cljs.core.ifn_QMARK_(f)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (ifn? f)\"));\r\n}\r\n\r\nreturn reagent.ratom.make_track(f,args);\r\n});\r\n\r\nreagent.ratom.track.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\nreagent.ratom.track.cljs$lang$applyTo = (function (seq24809){\r\nvar G__24810 = cljs.core.first(seq24809);\r\nvar seq24809__$1 = cljs.core.next(seq24809);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24810,seq24809__$1);\r\n});\r\n\r\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24920 = arguments.length;\r\nvar i__4731__auto___24921 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24921 < len__4730__auto___24920)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24921]));\r\n\r\nvar G__24922 = (i__4731__auto___24921 + (1));\r\ni__4731__auto___24921 = G__24922;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\nreagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\r\nif(cljs.core.ifn_QMARK_(f)){\r\n} else {\r\nthrow (new Error(\"Assert failed: (ifn? f)\"));\r\n}\r\n\r\nreturn reagent.ratom.make_track_BANG_(f,args);\r\n});\r\n\r\nreagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\nreagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq24811){\r\nvar G__24812 = cljs.core.first(seq24811);\r\nvar seq24811__$1 = cljs.core.next(seq24811);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24812,seq24811__$1);\r\n});\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\r\nthis.ratom = ratom;\r\nthis.path = path;\r\nthis.reaction = reaction;\r\nthis.state = state;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\nreagent.ratom.RCursor.prototype._peek = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar _STAR_ratom_context_STAR__orig_val__24813 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__24814 = null;\r\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__24814;\r\n\r\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\r\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__24813;\r\n}});\r\n\r\nreagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif((oldstate === newstate)){\r\nreturn null;\r\n} else {\r\nself__.state = newstate;\r\n\r\nif((!((self__.watches == null)))){\r\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Cursor: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.path)].join(''));\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldstate = self__.state;\r\nthis$__$1._set_state(oldstate,new_value);\r\n\r\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\r\ncljs.core.reset_BANG_(self__.ratom,new_value);\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\r\n}\r\n} else {\r\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\r\n}\r\n\r\nreturn new_value;\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__24816 = a__$1._peek();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24816) : f.call(null,G__24816));\r\n})());\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__24817 = a__$1._peek();\r\nvar G__24818 = x;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24817,G__24818) : f.call(null,G__24817,G__24818));\r\n})());\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__24819 = a__$1._peek();\r\nvar G__24820 = x;\r\nvar G__24821 = y;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24819,G__24820,G__24821) : f.call(null,G__24819,G__24820,G__24821));\r\n})());\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n});\r\n\r\nreagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldstate = self__.state;\r\nvar newstate = (function (){var temp__5722__auto__ = self__.reaction;\r\nif((temp__5722__auto__ == null)){\r\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?((function (temp__5722__auto__,oldstate,this$__$1){\r\nreturn (function (){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\r\n});})(temp__5722__auto__,oldstate,this$__$1))\r\n:((function (temp__5722__auto__,oldstate,this$__$1){\r\nreturn (function (){\r\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\r\n});})(temp__5722__auto__,oldstate,this$__$1))\r\n);\r\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\r\n} else {\r\nvar r = temp__5722__auto__;\r\nreturn cljs.core._deref(r);\r\n}\r\n})();\r\nthis$__$1._set_state(oldstate,newstate);\r\n\r\nreturn newstate;\r\n});\r\n\r\nreagent.ratom.RCursor.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n});\r\n\r\nreagent.ratom.RCursor.cljs$lang$type = true;\r\n\r\nreagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\";\r\n\r\nreagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\r\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/RCursor\");\r\n});\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/RCursor.\r\n */\r\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\r\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\r\n});\r\n\r\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\r\nif((function (){var or__4131__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\r\nif(or__4131__auto__){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\r\n}\r\n})()){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\r\n}\r\n\r\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\r\n});\r\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\r\nvar temp__5724__auto__ = v.destroy;\r\nif((temp__5724__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar f = temp__5724__auto__;\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}\r\n});\r\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\r\nvar temp__5722__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\r\nif((temp__5722__auto__ == null)){\r\nreturn [];\r\n} else {\r\nvar c = temp__5722__auto__;\r\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\r\n}\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IDisposable = function(){};\r\n\r\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\r\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\r\n} else {\r\nvar x__4433__auto__ = (((this$ == null))?null:this$);\r\nvar m__4434__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4433__auto__)]);\r\nif((!((m__4434__auto__ == null)))){\r\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\r\n} else {\r\nvar m__4431__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\r\nif((!((m__4431__auto__ == null)))){\r\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\r\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\r\n} else {\r\nvar x__4433__auto__ = (((this$ == null))?null:this$);\r\nvar m__4434__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4433__auto__)]);\r\nif((!((m__4434__auto__ == null)))){\r\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4434__auto__.call(null,this$,f));\r\n} else {\r\nvar m__4431__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\r\nif((!((m__4431__auto__ == null)))){\r\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4431__auto__.call(null,this$,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IRunnable = function(){};\r\n\r\nreagent.ratom.run = (function reagent$ratom$run(this$){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\r\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\r\n} else {\r\nvar x__4433__auto__ = (((this$ == null))?null:this$);\r\nvar m__4434__auto__ = (reagent.ratom.run[goog.typeOf(x__4433__auto__)]);\r\nif((!((m__4434__auto__ == null)))){\r\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4434__auto__.call(null,this$));\r\n} else {\r\nvar m__4431__auto__ = (reagent.ratom.run[\"_\"]);\r\nif((!((m__4431__auto__ == null)))){\r\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4431__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\r\n}\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\r\nreturn this$._handle_change(sender,old,new$);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {reagent.ratom.IRunnable}\r\n * @implements {reagent.ratom.IDisposable}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\r\nthis.f = f;\r\nthis.state = state;\r\nthis.dirty_QMARK_ = dirty_QMARK_;\r\nthis.nocache_QMARK_ = nocache_QMARK_;\r\nthis.watching = watching;\r\nthis.watches = watches;\r\nthis.auto_run = auto_run;\r\nthis.caught = caught;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\nreagent.ratom.Reaction.prototype._peek_at = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar _STAR_ratom_context_STAR__orig_val__24825 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__24826 = null;\r\nreagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__24826;\r\n\r\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\r\n}finally {reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__24825;\r\n}});\r\n\r\nreagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\r\nreturn null;\r\n} else {\r\nif((self__.auto_run == null)){\r\nself__.dirty_QMARK_ = true;\r\n\r\nreturn reagent.ratom.rea_enqueue(this$);\r\n} else {\r\nif(self__.auto_run === true){\r\nreturn this$._run(false);\r\n} else {\r\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\r\n}\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype._update_watching = (function (derefed){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar new$ = cljs.core.set(derefed);\r\nvar old = cljs.core.set(self__.watching);\r\nself__.watching = derefed;\r\n\r\nvar seq__24827_24929 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\r\nvar chunk__24828_24930 = null;\r\nvar count__24829_24931 = (0);\r\nvar i__24830_24932 = (0);\r\nwhile(true){\r\nif((i__24830_24932 < count__24829_24931)){\r\nvar w_24933 = chunk__24828_24930.cljs$core$IIndexed$_nth$arity$2(null,i__24830_24932);\r\ncljs.core._add_watch(w_24933,this$,reagent.ratom.handle_reaction_change);\r\n\r\n\r\nvar G__24934 = seq__24827_24929;\r\nvar G__24935 = chunk__24828_24930;\r\nvar G__24936 = count__24829_24931;\r\nvar G__24937 = (i__24830_24932 + (1));\r\nseq__24827_24929 = G__24934;\r\nchunk__24828_24930 = G__24935;\r\ncount__24829_24931 = G__24936;\r\ni__24830_24932 = G__24937;\r\ncontinue;\r\n} else {\r\nvar temp__5720__auto___24938 = cljs.core.seq(seq__24827_24929);\r\nif(temp__5720__auto___24938){\r\nvar seq__24827_24939__$1 = temp__5720__auto___24938;\r\nif(cljs.core.chunked_seq_QMARK_(seq__24827_24939__$1)){\r\nvar c__4550__auto___24940 = cljs.core.chunk_first(seq__24827_24939__$1);\r\nvar G__24941 = cljs.core.chunk_rest(seq__24827_24939__$1);\r\nvar G__24942 = c__4550__auto___24940;\r\nvar G__24943 = cljs.core.count(c__4550__auto___24940);\r\nvar G__24944 = (0);\r\nseq__24827_24929 = G__24941;\r\nchunk__24828_24930 = G__24942;\r\ncount__24829_24931 = G__24943;\r\ni__24830_24932 = G__24944;\r\ncontinue;\r\n} else {\r\nvar w_24946 = cljs.core.first(seq__24827_24939__$1);\r\ncljs.core._add_watch(w_24946,this$,reagent.ratom.handle_reaction_change);\r\n\r\n\r\nvar G__24947 = cljs.core.next(seq__24827_24939__$1);\r\nvar G__24948 = null;\r\nvar G__24949 = (0);\r\nvar G__24950 = (0);\r\nseq__24827_24929 = G__24947;\r\nchunk__24828_24930 = G__24948;\r\ncount__24829_24931 = G__24949;\r\ni__24830_24932 = G__24950;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__24831 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\r\nvar chunk__24832 = null;\r\nvar count__24833 = (0);\r\nvar i__24834 = (0);\r\nwhile(true){\r\nif((i__24834 < count__24833)){\r\nvar w = chunk__24832.cljs$core$IIndexed$_nth$arity$2(null,i__24834);\r\ncljs.core._remove_watch(w,this$);\r\n\r\n\r\nvar G__24951 = seq__24831;\r\nvar G__24952 = chunk__24832;\r\nvar G__24953 = count__24833;\r\nvar G__24954 = (i__24834 + (1));\r\nseq__24831 = G__24951;\r\nchunk__24832 = G__24952;\r\ncount__24833 = G__24953;\r\ni__24834 = G__24954;\r\ncontinue;\r\n} else {\r\nvar temp__5720__auto__ = cljs.core.seq(seq__24831);\r\nif(temp__5720__auto__){\r\nvar seq__24831__$1 = temp__5720__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__24831__$1)){\r\nvar c__4550__auto__ = cljs.core.chunk_first(seq__24831__$1);\r\nvar G__24955 = cljs.core.chunk_rest(seq__24831__$1);\r\nvar G__24956 = c__4550__auto__;\r\nvar G__24957 = cljs.core.count(c__4550__auto__);\r\nvar G__24958 = (0);\r\nseq__24831 = G__24955;\r\nchunk__24832 = G__24956;\r\ncount__24833 = G__24957;\r\ni__24834 = G__24958;\r\ncontinue;\r\n} else {\r\nvar w = cljs.core.first(seq__24831__$1);\r\ncljs.core._remove_watch(w,this$);\r\n\r\n\r\nvar G__24959 = cljs.core.next(seq__24831__$1);\r\nvar G__24960 = null;\r\nvar G__24961 = (0);\r\nvar G__24962 = (0);\r\nseq__24831 = G__24959;\r\nchunk__24832 = G__24960;\r\ncount__24833 = G__24961;\r\ni__24834 = G__24962;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype._queued_run = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\r\nreturn this$._run(true);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\r\nvar self__ = this;\r\nvar this$ = this;\r\ntry{self__.caught = null;\r\n\r\nreturn reagent.ratom.deref_capture(f__$1,this$);\r\n}catch (e24835){var e = e24835;\r\nself__.state = e;\r\n\r\nself__.caught = e;\r\n\r\nreturn self__.dirty_QMARK_ = false;\r\n}});\r\n\r\nreagent.ratom.Reaction.prototype._run = (function (check){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar oldstate = self__.state;\r\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\r\nif(self__.nocache_QMARK_){\r\n} else {\r\nself__.state = res;\r\n\r\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\r\n} else {\r\nreagent.ratom.notify_w(this$,oldstate,res);\r\n}\r\n}\r\n\r\nreturn res;\r\n});\r\n\r\nreagent.ratom.Reaction.prototype._set_opts = (function (p__24836){\r\nvar self__ = this;\r\nvar map__24837 = p__24836;\r\nvar map__24837__$1 = (((((!((map__24837 == null))))?(((((map__24837.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24837.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24837):map__24837);\r\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24837__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\r\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24837__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\r\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24837__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\r\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24837__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\r\nvar this$ = this;\r\nif((!((auto_run__$1 == null)))){\r\nthis$.auto_run = auto_run__$1;\r\n} else {\r\n}\r\n\r\nif((!((on_set == null)))){\r\nthis$.on_set = on_set;\r\n} else {\r\n}\r\n\r\nif((!((on_dispose == null)))){\r\nthis$.on_dispose = on_dispose;\r\n} else {\r\n}\r\n\r\nif((!((no_cache == null)))){\r\nreturn this$.nocache_QMARK_ = no_cache;\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,[\"Reaction \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(a__$1)),\":\"].join(''));\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn goog.getUid(this$__$1);\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\r\nvar self__ = this;\r\nvar o__$1 = this;\r\nreturn (o__$1 === other);\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar s = self__.state;\r\nvar wg = self__.watching;\r\nself__.watching = null;\r\n\r\nself__.state = null;\r\n\r\nself__.auto_run = null;\r\n\r\nself__.dirty_QMARK_ = true;\r\n\r\nvar seq__24839_24965 = cljs.core.seq(cljs.core.set(wg));\r\nvar chunk__24840_24966 = null;\r\nvar count__24841_24967 = (0);\r\nvar i__24842_24968 = (0);\r\nwhile(true){\r\nif((i__24842_24968 < count__24841_24967)){\r\nvar w_24969 = chunk__24840_24966.cljs$core$IIndexed$_nth$arity$2(null,i__24842_24968);\r\ncljs.core._remove_watch(w_24969,this$__$1);\r\n\r\n\r\nvar G__24970 = seq__24839_24965;\r\nvar G__24971 = chunk__24840_24966;\r\nvar G__24972 = count__24841_24967;\r\nvar G__24973 = (i__24842_24968 + (1));\r\nseq__24839_24965 = G__24970;\r\nchunk__24840_24966 = G__24971;\r\ncount__24841_24967 = G__24972;\r\ni__24842_24968 = G__24973;\r\ncontinue;\r\n} else {\r\nvar temp__5720__auto___24974 = cljs.core.seq(seq__24839_24965);\r\nif(temp__5720__auto___24974){\r\nvar seq__24839_24975__$1 = temp__5720__auto___24974;\r\nif(cljs.core.chunked_seq_QMARK_(seq__24839_24975__$1)){\r\nvar c__4550__auto___24976 = cljs.core.chunk_first(seq__24839_24975__$1);\r\nvar G__24977 = cljs.core.chunk_rest(seq__24839_24975__$1);\r\nvar G__24978 = c__4550__auto___24976;\r\nvar G__24979 = cljs.core.count(c__4550__auto___24976);\r\nvar G__24980 = (0);\r\nseq__24839_24965 = G__24977;\r\nchunk__24840_24966 = G__24978;\r\ncount__24841_24967 = G__24979;\r\ni__24842_24968 = G__24980;\r\ncontinue;\r\n} else {\r\nvar w_24981 = cljs.core.first(seq__24839_24975__$1);\r\ncljs.core._remove_watch(w_24981,this$__$1);\r\n\r\n\r\nvar G__24982 = cljs.core.next(seq__24839_24975__$1);\r\nvar G__24983 = null;\r\nvar G__24984 = (0);\r\nvar G__24985 = (0);\r\nseq__24839_24965 = G__24982;\r\nchunk__24840_24966 = G__24983;\r\ncount__24841_24967 = G__24984;\r\ni__24842_24968 = G__24985;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif((!((this$__$1.on_dispose == null)))){\r\nthis$__$1.on_dispose(s);\r\n} else {\r\n}\r\n\r\nvar temp__5724__auto__ = this$__$1.on_dispose_arr;\r\nif((temp__5724__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar a = temp__5724__auto__;\r\nvar n__4607__auto__ = a.length;\r\nvar i = (0);\r\nwhile(true){\r\nif((i < n__4607__auto__)){\r\nvar fexpr__24843_24987 = (a[i]);\r\n(fexpr__24843_24987.cljs$core$IFn$_invoke$arity$1 ? fexpr__24843_24987.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__24843_24987.call(null,this$__$1));\r\n\r\nvar G__24988 = (i + (1));\r\ni = G__24988;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5722__auto__ = this$__$1.on_dispose_arr;\r\nif((temp__5722__auto__ == null)){\r\nreturn this$__$1.on_dispose_arr = [f__$1];\r\n} else {\r\nvar a = temp__5722__auto__;\r\nreturn a.push(f__$1);\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\r\n} else {\r\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\r\n}\r\n\r\nvar oldval = self__.state;\r\nself__.state = newval;\r\n\r\na__$1.on_set(oldval,newval);\r\n\r\nreagent.ratom.notify_w(a__$1,oldval,newval);\r\n\r\nreturn newval;\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__24844 = a__$1._peek_at();\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24844) : f__$1.call(null,G__24844));\r\n})());\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__24845 = a__$1._peek_at();\r\nvar G__24846 = x;\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__24845,G__24846) : f__$1.call(null,G__24845,G__24846));\r\n})());\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__24847 = a__$1._peek_at();\r\nvar G__24848 = x;\r\nvar G__24849 = y;\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__24847,G__24848,G__24849) : f__$1.call(null,G__24847,G__24848,G__24849));\r\n})());\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\nreagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreagent.ratom.flush_BANG_();\r\n\r\nreturn this$__$1._run(false);\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\r\nreagent.ratom.remove_w(this$__$1,key);\r\n\r\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\r\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\r\n} else {\r\nreturn null;\r\n}\r\n});\r\n\r\nreagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5724__auto___24989 = self__.caught;\r\nif((temp__5724__auto___24989 == null)){\r\n} else {\r\nvar e_24990 = temp__5724__auto___24989;\r\nthrow e_24990;\r\n}\r\n\r\nvar non_reactive_24991 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\r\nif(non_reactive_24991){\r\nreagent.ratom.flush_BANG_();\r\n} else {\r\n}\r\n\r\nif(((non_reactive_24991) && ((self__.auto_run == null)))){\r\nif(self__.dirty_QMARK_){\r\nvar oldstate_24992 = self__.state;\r\nself__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));\r\n\r\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_24992,self__.state)))){\r\n} else {\r\nreagent.ratom.notify_w(this$__$1,oldstate_24992,self__.state);\r\n}\r\n} else {\r\n}\r\n} else {\r\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\r\n\r\nif(self__.dirty_QMARK_){\r\nthis$__$1._run(false);\r\n} else {\r\n}\r\n}\r\n\r\nreturn self__.state;\r\n});\r\n\r\nreagent.ratom.Reaction.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n});\r\n\r\nreagent.ratom.Reaction.cljs$lang$type = true;\r\n\r\nreagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\";\r\n\r\nreagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\r\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Reaction\");\r\n});\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Reaction.\r\n */\r\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\r\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\r\n});\r\n\r\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___24993 = arguments.length;\r\nvar i__4731__auto___24994 = (0);\r\nwhile(true){\r\nif((i__4731__auto___24994 < len__4730__auto___24993)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___24994]));\r\n\r\nvar G__24995 = (i__4731__auto___24994 + (1));\r\ni__4731__auto___24994 = G__24995;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\r\n});\r\n\r\nreagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__24852){\r\nvar map__24853 = p__24852;\r\nvar map__24853__$1 = (((((!((map__24853 == null))))?(((((map__24853.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__24853.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24853):map__24853);\r\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24853__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\r\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24853__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\r\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24853__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\r\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\r\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\r\n\r\nreturn reaction;\r\n});\r\n\r\nreagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1);\r\n\r\n/** @this {Function} */\r\nreagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq24850){\r\nvar G__24851 = cljs.core.first(seq24850);\r\nvar seq24850__$1 = cljs.core.next(seq24850);\r\nvar self__4717__auto__ = this;\r\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24851,seq24850__$1);\r\n});\r\n\r\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\r\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\r\nvar r = reagent.ratom.temp_reaction;\r\nvar res = reagent.ratom.deref_capture(f,r);\r\nif((r.watching == null)){\r\n} else {\r\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\r\n\r\nr._set_opts(opts);\r\n\r\nr.f = f;\r\n\r\nr.auto_run = ((function (r,res){\r\nreturn (function (){\r\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\r\n});})(r,res))\r\n;\r\n\r\n(obj[key] = r);\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\r\nvar ctx = ({});\r\nvar res = reagent.ratom.in_context(ctx,f);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\r\nthis.state = state;\r\nthis.callback = callback;\r\nthis.changed = changed;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\r\n});\r\nreagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\r\nif(reagent.debug.has_console){\r\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\r\n} else {\r\n}\r\n} else {\r\n}\r\n\r\n\r\nreturn self__.state;\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldval = self__.state;\r\nself__.changed = true;\r\n\r\nself__.state = newval;\r\n\r\nif((!((self__.watches == null)))){\r\nreagent.ratom.notify_w(this$__$1,oldval,newval);\r\n} else {\r\n}\r\n\r\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\r\n\r\nreturn newval;\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n});\r\n\r\nreagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrap:\");\r\n});\r\n\r\nreagent.ratom.Wrapper.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n});\r\n\r\nreagent.ratom.Wrapper.cljs$lang$type = true;\r\n\r\nreagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\";\r\n\r\nreagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\r\nreturn cljs.core._write(writer__4375__auto__,\"reagent.ratom/Wrapper\");\r\n});\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Wrapper.\r\n */\r\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\r\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\r\n});\r\n\r\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\r\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",["^ ","~$with-let","~$reagent.ratom","~$dbg","~$reagent.debug","~$log","^N","~$warn","^N","~$error","^N","~$dev?","^N","~$time","^N"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","^K",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",17,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","^L","~:macro",true],"~$reaction",["^ ","^X",["^Y",[["~$&","^["]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^10","~$reagent.ratom/reaction","^12","^L","^13",true],"~$run!",["^ ","^X",["^Y",[["~$&","^["]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^10","~$reagent.ratom/run!","^12","^L","^13",true]],"^10","^L","~:op","^12","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^1<","~$cljs.core","^1=","~$goog","^1>","~$reagent.impl.batching","^1?","~$clojure.set","^1@","~$util","^1<","~$s","^1@","~$batch","^1?","^N","^N"],"~:seen",["^U",["~:require","~:require-macros"]],"~:uses",null,"^1E",["^ ","^L","^L","^N","^N","^1=","^1="],"~:form",["^Y",["~$ns","^L",["^Y",["~:refer-clojure","~:exclude",["^V"]]],["^Y",["^1E",["^L","~:refer",["^K"]]]],["^Y",["^1D",["^1<","~:as","^1A"],["^N","~:refer-macros",["^M","^O","^P","^Q","^R","^S"]],["^1?","^1L","^1B"],["^1@","^1L","~$s"]]]]],"~:flags",["^ ","^1E",["^U",[]],"^1D",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^1>","^1=","^1<","^N","^1?","^1@"]],"^12","^L","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1574163713762,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom :refer [with-let]])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [dbg log warn error dev? time]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]))\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture [f r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher! [derefed]\n  (when-some [r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)]\n    (let [len (alength a)]\n      (loop [i 0]\n        (when (< i len)\n          (let [k (aget a i)\n                f (aget a (inc i))]\n            (f k this old new))\n          (recur (+ 2 i)))))))\n\n(defn- pr-atom [a writer opts s]\n  (-write writer (str \"#<\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] (-deref a)) writer opts)\n  (-write writer \">\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (._queued-run (aget q i)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Atom:\"))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(def ^{:private true :const true} cache-key \"reagReactionCache\")\n\n(defn- cached-reaction [f o k obj destroy]\n  (let [m (aget o cache-key)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (aget o cache-key) _\n                                       (dissoc _ k)\n                                       (aset o cache-key _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (aset o cache-key (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track:\")))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Cursor: \" path)))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key\n                     nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [this sender old new]\n  (._handle-change this sender old new))\n\n\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts (str \"Reaction \" (hash a) \":\")))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n(defn run-in-reaction [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (aset obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [_ other]\n          (and (instance? Wrapper other)\n               ;; If either of the wrappers have changed, equality\n               ;; cannot be relied on.\n               (not changed)\n               (not (.-changed other))\n               (= state (.-state other))\n               (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrap:\")))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__4120__auto__","i","or__4131__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__24773","*ratom-context*-temp-val__24774","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5724__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","reagent.ratom/remove-w","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","reagent.ratom/notify-w","a","p1__24780#","p2__24781#","p3__24782#","cljs.core/reduce-kv","G__24783","k","reagent.ratom/pr-atom","writer","opts","s","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__24786","*ratom-context*-temp-val__24787","cljs.core/-deref","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/flush!","q","n__4607__auto__","reagent.impl.batching/ratom-flush","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply.cljs$core$IFn$_invoke$arity$5","_","new-meta","goog/getUid","var_args","G__24797","reagent.ratom/atom","args-arr__4751__auto__","len__4730__auto__","i__4731__auto__","argseq__4752__auto__","cljs.core/IndexedSeq","p__24799","map__24800","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","seq24795","G__24796","cljs.core/first","cljs.core/next","self__4717__auto__","reagent.ratom/cache-key","reagent.ratom/cached-reaction","destroy","m","G__24802","G__24803","G__24804","reagent.ratom/make-reaction","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/dec","v","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5722__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__24806","G__24807","G__24808","args__4736__auto__","argseq__4737__auto__","reagent.ratom/track","seq24809","G__24810","cljs.core/ifn?","reagent.ratom/track!","seq24811","G__24812","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__24813","*ratom-context*-temp-val__24814","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core/reset!","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc-in","G__24816","G__24817","G__24818","G__24819","G__24820","G__24821","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","x__4433__auto__","m__4434__auto__","reagent.ratom/dispose!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__24836","map__24837","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__24844","G__24845","G__24846","G__24847","G__24848","G__24849","*ratom-context*-orig-val__24825","*ratom-context*-temp-val__24826","cljs.core/set","seq__24827","cljs.core/seq","chunk__24828","count__24829","i__24830","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","cljs.core/-add-watch","seq__24831","chunk__24832","count__24833","i__24834","cljs.core/-remove-watch","e24835","e","check","on-set","on-dispose","no-cache","non-reactive","wg","seq__24839","chunk__24840","count__24841","i__24842","fexpr__24843","p__24852","map__24853","seq24850","G__24851","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]]],"~:cache-keys",["~#cmap",[["^1R","reagent/impl/batching.cljs"],[1567262094669,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^1>","^1=","^N","~$reagent.interop","^1<","~$clojure.string"]]],["^1R","goog/math/math.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","~$goog.array","~$goog.asserts"]]],["^1R","goog/array/array.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^2:"]]],["^1R","reagent/impl/util.cljs"],[1567262094669,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^1=","^N","^27","^28"]]],["^1R","goog/debug/error.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","goog/dom/nodetype.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","reagent/ratom.cljs"],[1567262094669,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^1=","^1<","^N","^1?","^1@"]]],["^1R","goog/object/object.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],"~:SHADOW-TIMESTAMP",[1574163601000,1567262080000],["^1R","goog/math/long.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^2:","~$goog.reflect"]]],["^1R","goog/functions/functions.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","goog/structs/map.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"]]],["^1R","goog/asserts/asserts.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","~$goog.debug.Error","~$goog.dom.NodeType","~$goog.string"]]],["^1R","goog/uri/uri.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^29","^2:","^2B","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1R","goog/base.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",[]]],["^1R","goog/structs/structs.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^29","^2?"]]],["^1R","clojure/string.cljs"],[1567262080081,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^1=","^2B","~$goog.string.StringBuffer"]]],["^1R","goog/string/string.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","goog/reflect/reflect.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","goog/string/stringbuffer.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","goog/iter/iter.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^29","^2:","~$goog.functions","~$goog.math"]]],["^1R","reagent/interop.cljs"],[1567262094669,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^1="]]],["^1R","cljs/core.cljs"],[1567262080081,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["~$goog.math.Long","~$goog.math.Integer","^2B","^2?","^29","~$goog.Uri","^2H"]]],["^1R","reagent/debug.cljs"],[1567262094669,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^1="]]],["^1R","goog/math/integer.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>"]]],["^1R","clojure/set.cljs"],[1567262080081,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^1="]]],["^1R","goog/uri/utils.js"],[1567356087625,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^1>","^29","^2:","^2B"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1567262076000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1567262080000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"~:shadow/protocol-prefixes",["^U",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^J",["^ ","^K","^L","^M","^N","^O","^N","^P","^N","^Q","^N","^R","^N","^S","^N"],"^T",["^U",["^V"]],"^W",["^ ","^K",["^ ","^X",["^Y",[["^Z","~$&","^["]]],"^7",17,"^8",1,"^6","reagent/ratom.clj","^10","^11","^12","^L","^13",true],"^14",["^ ","^X",["^Y",[["~$&","^["]]],"^7",5,"^8",1,"^6","reagent/ratom.clj","^10","^15","^12","^L","^13",true],"^16",["^ ","^X",["^Y",[["~$&","^["]]],"^17","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",9,"^8",1,"^6","reagent/ratom.clj","^10","^18","^12","^L","^13",true]],"~:shadow/js-access-properties",["^U",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^10","^L","^1:",null,"^1;",["^ ","^1<","^1<","^1=","^1=","^1>","^1>","^1?","^1?","^1@","^1@","^1A","^1<","~$s","^1@","^1B","^1?","^N","^N"],"^1C",["^U",["^1D","^1E"]],"~:shadow/js-access-global",["^U",["Error"]],"^1F",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",89,"^8",8,"^9",89,"^:",15,"~:private",true,"^X",["^Y",["~$quote",["^Y",[["~$a","~$writer","~$opts","~$s"]]]]]],"^3F",true,"^10","~$reagent.ratom/pr-atom","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^Y",[["~$a","^3H","^3I","~$s"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^8",1,"~:variadic?",false,"^7",89,"~:ret-tag","~$any","^9",89,"~:max-fixed-arity",4,"~:fn-var",true,"^X",["^Y",["^3G",["^Y",[["~$a","^3H","^3I","~$s"]]]]]],"~$->RCursor",["^ ","^3E",null,"^5",["^ ","~:protocols",["^U",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","~$reagent.ratom/IReactiveAtom","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",243,"^9",243,"^X",["^Y",["^3G",["^Y",[["~$ratom","~$path","^14","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^17","Positional factory function for reagent.ratom/RCursor."],"^3T",["^U",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42"]],"^10","~$reagent.ratom/->RCursor","^6","reagent/ratom.cljs","^:",17,"^3K",["^Y",[["^45","^46","^14","^47","^48"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",243,"^3O","~$reagent.ratom/RCursor","^9",243,"^3Q",5,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^45","^46","^14","^47","^48"]]]]],"^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^17","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",51,"^8",8,"^9",51,"^:",29,"^3F",true,"^X",["^Y",["^3G",["^Y",[["~$derefed"]]]]]],"^3F",true,"^10","~$reagent.ratom/notify-deref-watcher!","^6","reagent/ratom.cljs","^:",29,"^3K",["^Y",[["^4="]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",51,"^3O",["^U",[null,"^3P","~$clj-nil"]],"^9",51,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4="]]]]]],"~$rea-enqueue",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",99,"^8",8,"^9",99,"^:",19,"^3F",true,"^X",["^Y",["^3G",["^Y",[["~$r"]]]]]],"^3F",true,"^10","~$reagent.ratom/rea-enqueue","^6","reagent/ratom.cljs","^:",19,"^3K",["^Y",[["~$r"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",99,"^3O","^3P","^9",99,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$r"]]]]]],"~$in-context",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",35,"^8",8,"^9",35,"^:",18,"^3F",true,"^X",["^Y",["^3G",["^Y",[["~$obj","~$f"]]]]]],"^3F",true,"^10","~$reagent.ratom/in-context","^6","reagent/ratom.cljs","^:",18,"^3K",["^Y",[["^4C","~$f"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",35,"^9",35,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4C","~$f"]]]]]],"~$make-track",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",223,"^8",7,"^9",223,"^:",17,"^X",["^Y",["^3G",["^Y",[["~$f","~$args"]]]]]],"^10","~$reagent.ratom/make-track","^6","reagent/ratom.cljs","^:",17,"^3K",["^Y",[["~$f","^4F"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",223,"^3O","~$reagent.ratom/Track","^9",223,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","^4F"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^3T",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^40","~$cljs.core/IMeta","^41","^42","~$cljs.core/IWithMeta"]],"^10","~$reagent.ratom/RAtom","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",121,"~:record",false,"^9",121,"~:tag","~$function","^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^4K","^41","^42","^4L"]]],"^V",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",166,"^8",7,"^9",166,"^:",11,"^X",["^Y",["^3G",["^Y",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^17","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^3N",true,"~:fixed-arity",1,"^3Q",1,"^3K",["^Y",[["~$x"]]],"^X",["^Y",[["~$x"],["~$x","~$&",["^ ","^4R",["^4S","^4T"]]]]],"^3M",["^Y",[null,null]]]],"^10","~$reagent.ratom/atom","^6","reagent/ratom.cljs","^:",11,"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",["^Y",[["~$x"]]],"^X",["^Y",[["~$x"],["~$x","~$&",["^ ","^4R",["^4S","^4T"]]]]],"^3M",["^Y",[null,null]]],"^3K",["^Y",[["~$x"]]],"^3L",null,"^4V",1,"^3M",["^Y",[null,null]],"^8",1,"^3N",true,"~:methods",[["^ ","^4V",1,"^3N",false,"^4P","^4M"],["^ ","^4V",1,"^3N",true,"^4P","^4M"]],"^7",166,"^9",166,"^3Q",1,"^3R",true,"^X",["^Y",[["~$x"],["~$x","~$&",["^ ","^4R",["^4S","^4T"]]]]],"^17","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",73,"^8",8,"^9",73,"^:",16,"^3F",true,"^X",["^Y",["^3G",["^Y",[["~$this","~$old","~$new"]]]]]],"^3F",true,"^10","~$reagent.ratom/notify-w","^6","reagent/ratom.cljs","^:",16,"^3K",["^Y",[["^4Z","^4[","^50"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",73,"^3O","^4?","^9",73,"^3Q",3,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z","^4[","^50"]]]]]],"~$->Reaction",["^ ","^3E",null,"^5",["^ ","^3T",["^U",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","~$reagent.ratom/IRunnable","~$reagent.ratom/IDisposable","^41","^42"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^43","^44","^7",341,"^9",341,"^X",["^Y",["^3G",["^Y",[["~$f","^47","~$dirty?","~$nocache?","~$watching","^48","~$auto-run","~$caught"]]]]],"^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^17","Positional factory function for reagent.ratom/Reaction."],"^3T",["^U",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^53","^54","^41","^42"]],"^10","~$reagent.ratom/->Reaction","^6","reagent/ratom.cljs","^:",18,"^3K",["^Y",[["~$f","^47","^55","^56","^57","^48","^58","^59"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",341,"^3O","~$reagent.ratom/Reaction","^9",341,"^3Q",8,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","^47","^55","^56","^57","^48","^58","^59"]]]]],"^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]],"^17","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",568,"^8",7,"^9",568,"^:",19,"^X",["^Y",["^3G",["^Y",[["~$value","~$callback-fn","^4F"]]]]]],"^10","~$reagent.ratom/make-wrapper","^6","reagent/ratom.cljs","^:",19,"^3K",["^Y",[["^5=","^5>","^4F"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",568,"^3O","~$reagent.ratom/Wrapper","^9",568,"^3Q",3,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^5=","^5>","^4F"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",119,"^8",14,"^9",119,"^:",27,"~:protocol-symbol",true,"~:jsdoc",["^Y",["@interface"]],"~:protocol-info",["^ ","^4X",["^ "]]],"^5B",true,"^10","^40","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",119,"^5D",["^ ","^4X",["^ "]],"~:info",null,"^9",119,"^4P","^3P","~:impls",["^U",["^4;","^4H","^5;","^4M"]],"^5C",["^Y",["@interface"]]],"~$track",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",233,"^8",7,"^9",233,"^:",12,"^X",["^Y",["^3G",["^Y",[["~$f","~$&","^4F"]]]]],"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",[["^Y",["~$f","^4F"]]],"^X",["^Y",[["~$f","~$&","^4F"]]],"^3M",["^Y",[null]]]],"^10","~$reagent.ratom/track","^6","reagent/ratom.cljs","^:",12,"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",[["^Y",["~$f","^4F"]]],"^X",["^Y",[["~$f","~$&","^4F"]]],"^3M",["^Y",[null]]],"^3K",[["^Y",["~$f","^4F"]]],"^3L",null,"^4V",1,"^3M",["^Y",[null]],"^8",1,"^3N",true,"^4X",[["^ ","^4V",1,"^3N",true,"^4P","^4H"]],"^7",233,"^3O","^3P","^9",233,"^3Q",1,"^3R",true,"^X",["^Y",[["~$f","~$&","^4F"]]]],"~$dispose!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",331,"^8",4,"^9",331,"^:",12,"~:protocol","^54","^17",null,"^X",["^Y",["^3G",["^Y",[["^4Z"]]]]]],"^5J","^54","^10","~$reagent.ratom/dispose!","^6","reagent/ratom.cljs","^:",12,"^3K",["^Y",[["^4Z"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",330,"^3O","^3P","^9",331,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z"]]]]],"^17",null],"~$arr-eq",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",17,"^9",26,"^:",23,"^4P","~$boolean","^3F",true,"^X",["^Y",["^3G",["^Y",[["~$x","~$y"]]]]]],"^3F",true,"^10","~$reagent.ratom/arr-eq","^6","reagent/ratom.cljs","^:",23,"^3K",["^Y",[["~$x","~$y"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",26,"^3O","^5M","^9",26,"^3Q",2,"^4P","^5M","^3R",true,"^X",["^Y",["^3G",["^Y",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",337,"^8",8,"^9",337,"^:",30,"^3F",true,"^X",["^Y",["^3G",["^Y",[["^4Z","~$sender","^4[","^50"]]]]]],"^3F",true,"^10","~$reagent.ratom/handle-reaction-change","^6","reagent/ratom.cljs","^:",30,"^3K",["^Y",[["^4Z","^5P","^4[","^50"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",337,"^3O","^3P","^9",337,"^3Q",4,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z","^5P","^4[","^50"]]]]]],"~$run",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",335,"^8",4,"^9",335,"^:",7,"^5J","^53","^17",null,"^X",["^Y",["^3G",["^Y",[["^4Z"]]]]]],"^5J","^53","^10","~$reagent.ratom/run","^6","reagent/ratom.cljs","^:",7,"^3K",["^Y",[["^4Z"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",334,"^3O","^3P","^9",335,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z"]]]]],"^17",null],"~$add-on-dispose!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",332,"^8",4,"^9",332,"^:",19,"^5J","^54","^17",null,"^X",["^Y",["^3G",["^Y",[["^4Z","~$f"]]]]]],"^5J","^54","^10","~$reagent.ratom/add-on-dispose!","^6","reagent/ratom.cljs","^:",19,"^3K",["^Y",[["^4Z","~$f"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",330,"^3O","^3P","^9",332,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z","~$f"]]]]],"^17",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",500,"^8",16,"^9",500,"^:",29,"^3F",true],"^3F",true,"^10","~$reagent.ratom/temp-reaction","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",500,"^9",500,"^4P","^5;"],"~$cache-key",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",176,"^8",35,"^9",176,"^:",44,"^3F",true,"~:const",true],"^3F",true,"^10","~$reagent.ratom/cache-key","^6","reagent/ratom.cljs","^:",44,"~:const-expr",["^ ","^19","^5Y","~:val","reagReactionCache","~:env",["^ ","~:context","~:expr"],"^1G","reagReactionCache","^4P","~$string"],"^8",1,"^5Y",true,"^7",176,"^9",176,"^4P","^64"],"~$make-track!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",226,"^8",7,"^9",226,"^:",18,"^X",["^Y",["^3G",["^Y",[["~$f","^4F"]]]]]],"^10","~$reagent.ratom/make-track!","^6","reagent/ratom.cljs","^:",18,"^3K",["^Y",[["~$f","^4F"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",226,"^3O","^3P","^9",226,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","^4F"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",11,"^8",20,"^9",11,"^:",30,"^3F",true],"^3F",true,"^10","~$reagent.ratom/generation","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",11,"^9",11,"^4P","~$number"],"~$run-in-reaction",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",502,"^8",7,"^9",502,"^:",22,"^X",["^Y",["^3G",["^Y",[["~$f","^4C","~$key","^5R","^3I"]]]]]],"^10","~$reagent.ratom/run-in-reaction","^6","reagent/ratom.cljs","^:",22,"^3K",["^Y",[["~$f","^4C","^6;","^5R","^3I"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",502,"^3O","^3P","^9",502,"^3Q",5,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","^4C","^6;","^5R","^3I"]]]]]],"~$IDisposable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",330,"^8",14,"^9",330,"^:",25,"^5B",true,"^5C",["^Y",["@interface"]],"^5D",["^ ","^4X",["^ ","^5I",[["^4Z"]],"^5T",[["^4Z","~$f"]]]]],"^5B",true,"^10","^54","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",330,"^5D",["^ ","^4X",["^ ","^5I",[["^4Z"]],"^5T",[["^4Z","~$f"]]]],"^5E",null,"^9",330,"^4P","^3P","^5F",["^U",["^5;"]],"^5C",["^Y",["@interface"]]],"~$check-watches",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",58,"^8",8,"^9",58,"^:",21,"^3F",true,"^X",["^Y",["^3G",["^Y",[["^4[","^50"]]]]]],"^3F",true,"^10","~$reagent.ratom/check-watches","^6","reagent/ratom.cljs","^:",21,"^3K",["^Y",[["^4[","^50"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",58,"^9",58,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4[","^50"]]]]]],"~$with-let-destroy",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",317,"^8",7,"^9",317,"^:",23,"^X",["^Y",["^3G",["^Y",[["~$v"]]]]]],"^10","~$reagent.ratom/with-let-destroy","^6","reagent/ratom.cljs","^:",23,"^3K",["^Y",[["~$v"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",317,"^3O",["^U",["^3P","^4?"]],"^9",317,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$v"]]]]]],"~$make-reaction",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",491,"^8",7,"^9",491,"^:",20,"^X",["^Y",["^3G",["^Y",[["~$f","~$&",["^ ","^4R",["^58","~$on-set","~$on-dispose"]]]]]]],"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",[["^Y",["~$f",["^ ","^4R",["^58","^6C","^6D"]]]]],"^X",["^Y",[["~$f","~$&",["^ ","^4R",["^58","^6C","^6D"]]]]],"^3M",["^Y",[null]]]],"^10","~$reagent.ratom/make-reaction","^6","reagent/ratom.cljs","^:",20,"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",[["^Y",["~$f",["^ ","^4R",["^58","^6C","^6D"]]]]],"^X",["^Y",[["~$f","~$&",["^ ","^4R",["^58","^6C","^6D"]]]]],"^3M",["^Y",[null]]],"^3K",[["^Y",["~$f",["^ ","^4R",["^58","^6C","^6D"]]]]],"^3L",null,"^4V",1,"^3M",["^Y",[null]],"^8",1,"^3N",true,"^4X",[["^ ","^4V",1,"^3N",true,"^4P","^5;"]],"^7",491,"^3O","^3P","^9",491,"^3Q",1,"^3R",true,"^X",["^Y",[["~$f","~$&",["^ ","^4R",["^58","^6C","^6D"]]]]]],"~$add-w",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",63,"^8",8,"^9",63,"^:",13,"^3F",true,"^X",["^Y",["^3G",["^Y",[["^4Z","^6;","~$f"]]]]]],"^3F",true,"^10","~$reagent.ratom/add-w","^6","reagent/ratom.cljs","^:",13,"^3K",["^Y",[["^4Z","^6;","~$f"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",63,"^9",63,"^3Q",3,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z","^6;","~$f"]]]]]],"~$Reaction",["^ ","^4J",8,"^3T",["^U",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^53","^54","^41","^42"]],"^10","^5;","^6","reagent/ratom.cljs","^:",18,"^4N",true,"^8",10,"^7",341,"^4O",false,"^9",341,"^4P","^4Q","^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]]],"~$flush!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",105,"^8",7,"^9",105,"^:",13,"^X",["^Y",["^3G",["^Y",[[]]]]]],"^10","~$reagent.ratom/flush!","^6","reagent/ratom.cljs","^:",13,"^3K",["^Y",[[]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",105,"^3O","^4?","^9",105,"^3Q",0,"^3R",true,"^X",["^Y",["^3G",["^Y",[[]]]]]],"~$RCursor",["^ ","^4J",5,"^3T",["^U",["^3U","^3V","^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42"]],"^10","^4;","^6","reagent/ratom.cljs","^:",17,"^4N",true,"^8",10,"^7",243,"^4O",false,"^9",243,"^4P","^4Q","^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^41","^42"]]],"~$cached-reaction",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",178,"^8",8,"^9",178,"^:",23,"^3F",true,"^X",["^Y",["^3G",["^Y",[["~$f","~$o","~$k","^4C","~$destroy"]]]]]],"^3F",true,"^10","~$reagent.ratom/cached-reaction","^6","reagent/ratom.cljs","^:",23,"^3K",["^Y",[["~$f","~$o","~$k","^4C","^6M"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",178,"^3O","^3P","^9",178,"^3Q",5,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","~$o","~$k","^4C","^6M"]]]]]],"~$Track",["^ ","^4J",3,"^3T",["^U",["^3W","^3X","^40","^41","^42"]],"^10","^4H","^6","reagent/ratom.cljs","^:",15,"^4N",true,"^8",10,"^7",202,"^4O",false,"^9",202,"^4P","^4Q","^49",["^U",["^3W","^3X","^41","^42"]]],"~$debug",["^ ","^10","~$reagent.ratom/debug","^6","reagent/ratom.cljs","^7",10,"^8",1,"^9",10,"^:",24,"^4P","^5M","^5",["^ ","^6","reagent/ratom.cljs","^7",10,"^8",19,"^9",10,"^:",24,"^4P","^5M"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",28,"^3F",true],"^3F",true,"^10","~$reagent.ratom/-running","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",12,"^9",12,"^4P","~$cljs.core/Atom"],"~$cursor",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",305,"^8",7,"^9",305,"^:",13,"^X",["^Y",["^3G",["^Y",[["~$src","^46"]]]]]],"^10","~$reagent.ratom/cursor","^6","reagent/ratom.cljs","^:",13,"^3K",["^Y",[["^6V","^46"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",305,"^3O","^4;","^9",305,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^6V","^46"]]]]]],"~$Wrapper",["^ ","^4J",4,"^3T",["^U",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^10","^5@","^6","reagent/ratom.cljs","^:",17,"^4N",true,"^8",10,"^7",521,"^4O",false,"^9",521,"^4P","^4Q","^49",["^U",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]]],"~$running",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",20,"^8",7,"^9",20,"^:",14,"^X",["^Y",["^3G",["^Y",[[]]]]]],"^10","~$reagent.ratom/running","^6","reagent/ratom.cljs","^:",14,"^3K",["^Y",[[]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",20,"^3O","^3P","^9",20,"^3Q",0,"^3R",true,"^X",["^Y",["^3G",["^Y",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",334,"^8",14,"^9",334,"^:",23,"^5B",true,"^5C",["^Y",["@interface"]],"^5D",["^ ","^4X",["^ ","^5R",[["^4Z"]]]]],"^5B",true,"^10","^53","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",334,"^5D",["^ ","^4X",["^ ","^5R",[["^4Z"]]]],"^5E",null,"^9",334,"^4P","^3P","^5F",["^U",["^5;"]],"^5C",["^Y",["@interface"]]],"~$reactive?",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",16,"^9",14,"^:",25,"^4P","^5M","^X",["^Y",["^3G",["^Y",[[]]]]]],"^10","~$reagent.ratom/reactive?","^6","reagent/ratom.cljs","^:",25,"^3K",["^Y",[[]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",14,"^3O","^5M","^9",14,"^3Q",0,"^4P","^5M","^3R",true,"^X",["^Y",["^3G",["^Y",[[]]]]]],"~$deref-capture",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",39,"^8",8,"^9",39,"^:",21,"^3F",true,"^X",["^Y",["^3G",["^Y",[["~$f","~$r"]]]]]],"^3F",true,"^10","~$reagent.ratom/deref-capture","^6","reagent/ratom.cljs","^:",21,"^3K",["^Y",[["~$f","~$r"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",39,"^3O","^3P","^9",39,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","~$r"]]]]]],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",97,"^8",20,"^9",97,"^:",29,"^3F",true],"^3F",true,"^10","~$reagent.ratom/rea-queue","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",97,"^9",97,"^4P","^4?"],"~$with-let-values",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",321,"^8",7,"^9",321,"^:",22,"^X",["^Y",["^3G",["^Y",[["^6;"]]]]]],"^10","~$reagent.ratom/with-let-values","^6","reagent/ratom.cljs","^:",22,"^3K",["^Y",[["^6;"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",321,"^3O",["^U",["^3P","~$array"]],"^9",321,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^6;"]]]]]],"~$track!",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",237,"^8",7,"^9",237,"^:",13,"^X",["^Y",["^3G",["^Y",[["~$f","~$&","^4F"]]]]],"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",[["^Y",["~$f","^4F"]]],"^X",["^Y",[["~$f","~$&","^4F"]]],"^3M",["^Y",[null]]]],"^10","~$reagent.ratom/track!","^6","reagent/ratom.cljs","^:",13,"^4U",["^ ","^3N",true,"^4V",1,"^3Q",1,"^3K",[["^Y",["~$f","^4F"]]],"^X",["^Y",[["~$f","~$&","^4F"]]],"^3M",["^Y",[null]]],"^3K",[["^Y",["~$f","^4F"]]],"^3L",null,"^4V",1,"^3M",["^Y",[null]],"^8",1,"^3N",true,"^4X",[["^ ","^4V",1,"^3N",true,"^4P","^3P"]],"^7",237,"^3O","^3P","^9",237,"^3Q",1,"^3R",true,"^X",["^Y",[["~$f","~$&","^4F"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",9,"^8",20,"^9",9,"^:",35,"~:dynamic",true,"~:declared",true],"^10","~$reagent.ratom/*ratom-context*","^6","reagent/ratom.cljs","^:",35,"^8",1,"^7<",true,"^7",9,"^7=",true,"^9",9],"~$check-derefs",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",513,"^8",7,"^9",513,"^:",19,"^X",["^Y",["^3G",["^Y",[["~$f"]]]]]],"^10","~$reagent.ratom/check-derefs","^6","reagent/ratom.cljs","^:",19,"^3K",["^Y",[["~$f"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",513,"^3O","~$cljs.core/IVector","^9",513,"^3Q",1,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f"]]]]]],"~$remove-w",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",68,"^8",8,"^9",68,"^:",16,"^3F",true,"^X",["^Y",["^3G",["^Y",[["^4Z","^6;"]]]]]],"^3F",true,"^10","~$reagent.ratom/remove-w","^6","reagent/ratom.cljs","^:",16,"^3K",["^Y",[["^4Z","^6;"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",68,"^9",68,"^3Q",2,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^4Z","^6;"]]]]]],"~$->Wrapper",["^ ","^3E",null,"^5",["^ ","^3T",["^U",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^43","^44","^7",521,"^9",521,"^X",["^Y",["^3G",["^Y",[["^47","~$callback","~$changed","^48"]]]]],"^49",["^U",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^17","Positional factory function for reagent.ratom/Wrapper."],"^3T",["^U",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^10","~$reagent.ratom/->Wrapper","^6","reagent/ratom.cljs","^:",17,"^3K",["^Y",[["^47","^7E","^7F","^48"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",521,"^3O","^5@","^9",521,"^3Q",4,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^47","^7E","^7F","^48"]]]]],"^49",["^U",["^3U","^3V","^3W","^3Z","^3[","^41","^42"]],"^17","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^3E",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",16,"^9",23,"^:",23,"^4P","^69","^3F",true,"^X",["^Y",["^3G",["^Y",[["~$x"]]]]]],"^3F",true,"^10","~$reagent.ratom/arr-len","^6","reagent/ratom.cljs","^:",23,"^3K",["^Y",[["~$x"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^7",23,"^3O","^69","^9",23,"^3Q",1,"^4P","^69","^3R",true,"^X",["^Y",["^3G",["^Y",[["~$x"]]]]]],"~$->RAtom",["^ ","^3E",null,"^5",["^ ","^3T",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^40","^4K","^41","^42","^4L"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^43","^44","^7",121,"^9",121,"^X",["^Y",["^3G",["^Y",[["^47","^4S","^4T","^48"]]]]],"^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^4K","^41","^42","^4L"]],"^17","Positional factory function for reagent.ratom/RAtom."],"^3T",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^40","^4K","^41","^42","^4L"]],"^10","~$reagent.ratom/->RAtom","^6","reagent/ratom.cljs","^:",15,"^3K",["^Y",[["^47","^4S","^4T","^48"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",121,"^3O","^4M","^9",121,"^3Q",4,"^3R",true,"^X",["^Y",["^3G",["^Y",[["^47","^4S","^4T","^48"]]]]],"^49",["^U",["^3U","^3V","^3W","^3X","^3Z","^3[","^4K","^41","^42","^4L"]],"^17","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^3E",null,"^5",["^ ","^3T",["^U",["^3W","^3X","^40","^41","^42"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^43","^44","^7",202,"^9",202,"^X",["^Y",["^3G",["^Y",[["~$f","^4F","^14"]]]]],"^49",["^U",["^3W","^3X","^41","^42"]],"^17","Positional factory function for reagent.ratom/Track."],"^3T",["^U",["^3W","^3X","^40","^41","^42"]],"^10","~$reagent.ratom/->Track","^6","reagent/ratom.cljs","^:",15,"^3K",["^Y",[["~$f","^4F","^14"]]],"^3L",null,"^3M",["^Y",[null,null]],"^8",1,"^3N",false,"^43","^44","^7",202,"^3O","^4H","^9",202,"^3Q",3,"^3R",true,"^X",["^Y",["^3G",["^Y",[["~$f","^4F","^14"]]]]],"^49",["^U",["^3W","^3X","^41","^42"]],"^17","Positional factory function for reagent.ratom/Track."]],"^1E",["^ ","^L","^L","^N","^N","^1=","^1="],"~:cljs.analyzer/constants",["^ ","^1C",["^U",["~:on-set","^59","^57","^5M","^14","^7E","^5","~:else","^46","^4F","~:validator","^48","^4S","^4T","^55","~:no-cache","^45","^47","~:auto-run","~:on-dispose","^4P","~:mutable","^7F","^58","^56","~$f"]],"~:order",["^47","^7U","^4S","^4T","^48","^5","^7Q","^7P","^7T","~$f","^4F","^14","^7S","^45","^46","^7O","^7R","^55","^4P","^5M","^56","^57","^58","^59","^7E","^7F"]],"^1N",["^ ","^1E",["^U",[]],"^1D",["^U",[]]],"^1O",["^ "],"^1P",["^1>","^1=","^1<","^N","^1?","^1@"]],"^12","^L","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^22",[["^7Y","~:static-fns"],true,["^7Y","~:elide-asserts"],false,["^7Y","~:optimize-constants"],null,["^7Y","^1U"],null,["^7Y","~:external-config"],null,["^7Y","~:tooling-config"],null,["^7Y","~:emit-constants"],null,["^7Y","~:load-tests"],null,["^7Y","~:form-size-threshold"],null,["^7Y","~:infer-externs"],true,["^7Y","^1W"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7Y","~:fn-invoke-direct"],null,["^7Y","~:source-map"],"/dev/null"]]]