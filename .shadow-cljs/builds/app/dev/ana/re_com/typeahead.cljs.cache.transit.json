["^ ","~:output",["^ ","~:js","goog.provide('re_com.typeahead');\r\ngoog.require('cljs.core');\r\ngoog.require('cljs.core.async');\r\ngoog.require('re_com.misc');\r\ngoog.require('re_com.util');\r\ngoog.require('re_com.popover');\r\ngoog.require('re_com.box');\r\ngoog.require('re_com.validate');\r\ngoog.require('reagent.core');\r\ngoog.require('goog.events.KeyCodes');\r\n\r\n/**\r\n * Return an initial value for the typeahead state, given `args`.\r\n */\r\nre_com.typeahead.make_typeahead_state = (function re_com$typeahead$make_typeahead_state(p__31063){\r\nvar map__31064 = p__31063;\r\nvar map__31064__$1 = (((((!((map__31064 == null))))?(((((map__31064.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31064.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31064):map__31064);\r\nvar args = map__31064__$1;\r\nvar on_change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149));\r\nvar rigid_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118));\r\nvar change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925));\r\nvar data_source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676));\r\nvar suggestion_to_string = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962));\r\nvar debounce_delay = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"debounce-delay\",\"debounce-delay\",-608187982));\r\nvar model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31064__$1,new cljs.core.Keyword(null,\"model\",\"model\",331153215));\r\nvar external_model_value = re_com.util.deref_or_value(model);\r\nvar G__31067 = (function (){var c_input = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\r\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962),new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118),new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676),new cljs.core.Keyword(null,\"c-search\",\"c-search\",1832536180),new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925),new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618),new cljs.core.Keyword(null,\"c-input\",\"c-input\",-1821004232),new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),new cljs.core.Keyword(null,\"external-model\",\"external-model\",506095421),new cljs.core.Keyword(null,\"model\",\"model\",331153215)],[false,(function (){var or__4131__auto__ = suggestion_to_string;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn cljs.core.str;\r\n}\r\n})(),false,\"\",rigid_QMARK_,data_source,(re_com.typeahead.debounce.cljs$core$IFn$_invoke$arity$2 ? re_com.typeahead.debounce.cljs$core$IFn$_invoke$arity$2(c_input,debounce_delay) : re_com.typeahead.debounce.call(null,c_input,debounce_delay)),change_on_blur_QMARK_,cljs.core.PersistentVector.EMPTY,c_input,on_change,re_com.util.deref_or_value(model),re_com.util.deref_or_value(model)]);\r\n})();\r\nif(cljs.core.truth_(external_model_value)){\r\nreturn (re_com.typeahead.display_suggestion.cljs$core$IFn$_invoke$arity$2 ? re_com.typeahead.display_suggestion.cljs$core$IFn$_invoke$arity$2(G__31067,external_model_value) : re_com.typeahead.display_suggestion.call(null,G__31067,external_model_value));\r\n} else {\r\nreturn G__31067;\r\n}\r\n});\r\n/**\r\n * Should `event` update the `typeahead` `model`?\r\n */\r\nre_com.typeahead.event_updates_model_QMARK_ = (function re_com$typeahead$event_updates_model_QMARK_(p__31071,event){\r\nvar map__31072 = p__31071;\r\nvar map__31072__$1 = (((((!((map__31072 == null))))?(((((map__31072.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31072.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31072):map__31072);\r\nvar state = map__31072__$1;\r\nvar change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31072__$1,new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925));\r\nvar rigid_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31072__$1,new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118));\r\nvar change_on_blur_QMARK___$1 = re_com.util.deref_or_value(change_on_blur_QMARK_);\r\nvar rigid_QMARK___$1 = re_com.util.deref_or_value(rigid_QMARK_);\r\nvar G__31077 = event;\r\nvar G__31077__$1 = (((G__31077 instanceof cljs.core.Keyword))?G__31077.fqn:null);\r\nswitch (G__31077__$1) {\r\ncase \"input-text-blurred\":\r\nvar and__4120__auto__ = change_on_blur_QMARK___$1;\r\nif(cljs.core.truth_(and__4120__auto__)){\r\nreturn cljs.core.not(rigid_QMARK___$1);\r\n} else {\r\nreturn and__4120__auto__;\r\n}\r\n\r\nbreak;\r\ncase \"suggestion-activated\":\r\nreturn cljs.core.not(change_on_blur_QMARK___$1);\r\n\r\nbreak;\r\ncase \"input-text-changed\":\r\nreturn cljs.core.not((function (){var or__4131__auto__ = change_on_blur_QMARK___$1;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn rigid_QMARK___$1;\r\n}\r\n})());\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__31077__$1)].join('')));\r\n\r\n}\r\n});\r\n/**\r\n * Should `event` cause the `input-text` value to be used to show the active suggestion?\r\n */\r\nre_com.typeahead.event_displays_suggestion_QMARK_ = (function re_com$typeahead$event_displays_suggestion_QMARK_(p__31086,event){\r\nvar map__31088 = p__31086;\r\nvar map__31088__$1 = (((((!((map__31088 == null))))?(((((map__31088.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31088.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31088):map__31088);\r\nvar state = map__31088__$1;\r\nvar change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31088__$1,new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925));\r\nvar change_on_blur_QMARK___$1 = re_com.util.deref_or_value(change_on_blur_QMARK_);\r\nvar G__31092 = event;\r\nvar G__31092__$1 = (((G__31092 instanceof cljs.core.Keyword))?G__31092.fqn:null);\r\nswitch (G__31092__$1) {\r\ncase \"suggestion-activated\":\r\nreturn cljs.core.not(change_on_blur_QMARK___$1);\r\n\r\nbreak;\r\ndefault:\r\nreturn false;\r\n\r\n}\r\n});\r\n/**\r\n * Change the `typeahead` `model` value to `new-value`\r\n */\r\nre_com.typeahead.update_model = (function re_com$typeahead$update_model(p__31095,new_value){\r\nvar map__31096 = p__31095;\r\nvar map__31096__$1 = (((((!((map__31096 == null))))?(((((map__31096.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31096.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31096):map__31096);\r\nvar state = map__31096__$1;\r\nvar on_change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31096__$1,new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149));\r\nif(cljs.core.truth_(on_change)){\r\n(on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(new_value) : on_change.call(null,new_value));\r\n} else {\r\n}\r\n\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\"model\",\"model\",331153215),new_value);\r\n});\r\n/**\r\n * Change the `input-text` `model` to the string representation of `suggestion`\r\n */\r\nre_com.typeahead.display_suggestion = (function re_com$typeahead$display_suggestion(p__31106,suggestion){\r\nvar map__31108 = p__31106;\r\nvar map__31108__$1 = (((((!((map__31108 == null))))?(((((map__31108.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31108.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31108):map__31108);\r\nvar state = map__31108__$1;\r\nvar suggestion_to_string = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31108__$1,new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962));\r\nvar suggestion_string = (suggestion_to_string.cljs$core$IFn$_invoke$arity$1 ? suggestion_to_string.cljs$core$IFn$_invoke$arity$1(suggestion) : suggestion_to_string.call(null,suggestion));\r\nvar G__31112 = state;\r\nif(cljs.core.truth_(suggestion_string)){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__31112,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),suggestion_string,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),true], 0));\r\n} else {\r\nreturn G__31112;\r\n}\r\n});\r\nre_com.typeahead.clear_suggestions = (function re_com$typeahead$clear_suggestions(state){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(state,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728)], 0));\r\n});\r\n/**\r\n * Make the suggestion at `index` the active suggestion\r\n */\r\nre_com.typeahead.activate_suggestion_by_index = (function re_com$typeahead$activate_suggestion_by_index(p__31117,index){\r\nvar map__31118 = p__31117;\r\nvar map__31118__$1 = (((((!((map__31118 == null))))?(((((map__31118.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31118.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31118):map__31118);\r\nvar state = map__31118__$1;\r\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31118__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\r\nvar suggestion = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(suggestions,index);\r\nvar G__31120 = state;\r\nvar G__31120__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__31120,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728),index)\r\n;\r\nvar G__31120__$2 = (cljs.core.truth_(re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"suggestion-activated\",\"suggestion-activated\",316961778)))?re_com.typeahead.update_model(G__31120__$1,suggestion):G__31120__$1);\r\nif(cljs.core.truth_(re_com.typeahead.event_displays_suggestion_QMARK_(state,new cljs.core.Keyword(null,\"suggestion-activated\",\"suggestion-activated\",316961778)))){\r\nreturn re_com.typeahead.display_suggestion(G__31120__$2,suggestion);\r\n} else {\r\nreturn G__31120__$2;\r\n}\r\n});\r\n/**\r\n * Choose the suggestion at `index`\r\n */\r\nre_com.typeahead.choose_suggestion_by_index = (function re_com$typeahead$choose_suggestion_by_index(p__31123,index){\r\nvar map__31124 = p__31123;\r\nvar map__31124__$1 = (((((!((map__31124 == null))))?(((((map__31124.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31124.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31124):map__31124);\r\nvar state = map__31124__$1;\r\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31124__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\r\nvar suggestion = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(suggestions,index);\r\nreturn re_com.typeahead.clear_suggestions(re_com.typeahead.display_suggestion(re_com.typeahead.update_model(re_com.typeahead.activate_suggestion_by_index(state,index),suggestion),suggestion));\r\n});\r\nre_com.typeahead.choose_suggestion_active = (function re_com$typeahead$choose_suggestion_active(p__31127){\r\nvar map__31129 = p__31127;\r\nvar map__31129__$1 = (((((!((map__31129 == null))))?(((((map__31129.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31129.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31129):map__31129);\r\nvar state = map__31129__$1;\r\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31129__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\r\nvar G__31133 = state;\r\nif(cljs.core.truth_(suggestion_active_index)){\r\nreturn re_com.typeahead.choose_suggestion_by_index(G__31133,suggestion_active_index);\r\n} else {\r\nreturn G__31133;\r\n}\r\n});\r\nre_com.typeahead.wrap = (function re_com$typeahead$wrap(index,count){\r\nreturn cljs.core.mod((count + index),count);\r\n});\r\nre_com.typeahead.activate_suggestion_next = (function re_com$typeahead$activate_suggestion_next(p__31140){\r\nvar map__31143 = p__31140;\r\nvar map__31143__$1 = (((((!((map__31143 == null))))?(((((map__31143.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31143.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31143):map__31143);\r\nvar state = map__31143__$1;\r\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31143__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\r\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31143__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\r\nvar G__31150 = state;\r\nif(cljs.core.truth_(suggestions)){\r\nreturn re_com.typeahead.activate_suggestion_by_index(G__31150,re_com.typeahead.wrap(((function (){var or__4131__auto__ = suggestion_active_index;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn (-1);\r\n}\r\n})() + (1)),cljs.core.count(suggestions)));\r\n} else {\r\nreturn G__31150;\r\n}\r\n});\r\nre_com.typeahead.activate_suggestion_prev = (function re_com$typeahead$activate_suggestion_prev(p__31158){\r\nvar map__31159 = p__31158;\r\nvar map__31159__$1 = (((((!((map__31159 == null))))?(((((map__31159.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31159.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31159):map__31159);\r\nvar state = map__31159__$1;\r\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31159__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\r\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31159__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\r\nvar G__31163 = state;\r\nif(cljs.core.truth_(suggestions)){\r\nreturn re_com.typeahead.activate_suggestion_by_index(G__31163,re_com.typeahead.wrap(((function (){var or__4131__auto__ = suggestion_active_index;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn (0);\r\n}\r\n})() - (1)),cljs.core.count(suggestions)));\r\n} else {\r\nreturn G__31163;\r\n}\r\n});\r\nre_com.typeahead.reset_typeahead = (function re_com$typeahead$reset_typeahead(state){\r\nvar G__31166 = state;\r\nvar G__31166__$1 = re_com.typeahead.clear_suggestions(G__31166)\r\n;\r\nvar G__31166__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__31166__$1,new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),\"\",new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),false], 0))\r\n;\r\nif(cljs.core.truth_(re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"input-text-changed\",\"input-text-changed\",-1906799535)))){\r\nreturn re_com.typeahead.update_model(G__31166__$2,null);\r\n} else {\r\nreturn G__31166__$2;\r\n}\r\n});\r\n/**\r\n * Update state when new suggestions are available\r\n */\r\nre_com.typeahead.got_suggestions = (function re_com$typeahead$got_suggestions(state,suggestions){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(state,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618),suggestions,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),false,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728),null], 0));\r\n});\r\n/**\r\n * Update state when the `input-text` is about to lose focus.\r\n */\r\nre_com.typeahead.input_text_will_blur = (function re_com$typeahead$input_text_will_blur(p__31169){\r\nvar map__31170 = p__31169;\r\nvar map__31170__$1 = (((((!((map__31170 == null))))?(((((map__31170.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31170.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31170):map__31170);\r\nvar state = map__31170__$1;\r\nvar input_text = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31170__$1,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114));\r\nvar displaying_suggestion_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31170__$1,new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862));\r\nvar G__31176 = state;\r\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core.not(displaying_suggestion_QMARK_);\r\nif(and__4120__auto__){\r\nreturn re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"input-text-blurred\",\"input-text-blurred\",-501892307));\r\n} else {\r\nreturn and__4120__auto__;\r\n}\r\n})())){\r\nreturn re_com.typeahead.update_model(G__31176,input_text);\r\n} else {\r\nreturn G__31176;\r\n}\r\n});\r\n/**\r\n * Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\r\n *   came from the old `data-source`.\r\n */\r\nre_com.typeahead.change_data_source = (function re_com$typeahead$change_data_source(state,data_source){\r\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(re_com.typeahead.reset_typeahead(state),new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676),data_source);\r\n});\r\n/**\r\n * Update state when the external model value has changed.\r\n */\r\nre_com.typeahead.external_model_changed = (function re_com$typeahead$external_model_changed(state,new_value){\r\nreturn re_com.typeahead.clear_suggestions(re_com.typeahead.display_suggestion(re_com.typeahead.update_model(state,new_value),new_value));\r\n});\r\n/**\r\n * Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\r\n *   (asynchronously, if `data-source` does not return a truthy value).\r\n */\r\nre_com.typeahead.search_data_source_BANG_ = (function re_com$typeahead$search_data_source_BANG_(data_source,state_atom,text){\r\nvar temp__5718__auto__ = (function (){var G__31188 = text;\r\nvar G__31189 = ((function (G__31188){\r\nreturn (function (p1__31184_SHARP_){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.got_suggestions,p1__31184_SHARP_);\r\n});})(G__31188))\r\n;\r\nreturn (data_source.cljs$core$IFn$_invoke$arity$2 ? data_source.cljs$core$IFn$_invoke$arity$2(G__31188,G__31189) : data_source.call(null,G__31188,G__31189));\r\n})();\r\nif(cljs.core.truth_(temp__5718__auto__)){\r\nvar return_value = temp__5718__auto__;\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.got_suggestions,return_value);\r\n} else {\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state_atom,cljs.core.assoc,new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215),true);\r\n}\r\n});\r\n/**\r\n * For every value arriving on the `c-search` channel, call `search-data-source!`.\r\n */\r\nre_com.typeahead.search_data_source_loop_BANG_ = (function re_com$typeahead$search_data_source_loop_BANG_(state_atom,c_search){\r\nvar c__28935__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (c__28935__auto__){\r\nreturn (function (){\r\nvar f__28936__auto__ = (function (){var switch__28807__auto__ = ((function (c__28935__auto__){\r\nreturn (function (state_31208){\r\nvar state_val_31209 = (state_31208[(1)]);\r\nif((state_val_31209 === (1))){\r\nvar state_31208__$1 = state_31208;\r\nvar statearr_31213_31537 = state_31208__$1;\r\n(statearr_31213_31537[(2)] = null);\r\n\r\n(statearr_31213_31537[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31209 === (2))){\r\nvar state_31208__$1 = state_31208;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_31208__$1,(4),c_search);\r\n} else {\r\nif((state_val_31209 === (3))){\r\nvar inst_31206 = (state_31208[(2)]);\r\nvar state_31208__$1 = state_31208;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_31208__$1,inst_31206);\r\n} else {\r\nif((state_val_31209 === (4))){\r\nvar inst_31194 = (state_31208[(7)]);\r\nvar inst_31194__$1 = (state_31208[(2)]);\r\nvar inst_31195 = cljs.core.deref(state_atom);\r\nvar inst_31196 = new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676).cljs$core$IFn$_invoke$arity$1(inst_31195);\r\nvar inst_31197 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",inst_31194__$1);\r\nvar state_31208__$1 = (function (){var statearr_31215 = state_31208;\r\n(statearr_31215[(7)] = inst_31194__$1);\r\n\r\n(statearr_31215[(8)] = inst_31196);\r\n\r\nreturn statearr_31215;\r\n})();\r\nif(inst_31197){\r\nvar statearr_31219_31540 = state_31208__$1;\r\n(statearr_31219_31540[(1)] = (5));\r\n\r\n} else {\r\nvar statearr_31220_31543 = state_31208__$1;\r\n(statearr_31220_31543[(1)] = (6));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31209 === (5))){\r\nvar inst_31199 = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.reset_typeahead);\r\nvar state_31208__$1 = state_31208;\r\nvar statearr_31224_31545 = state_31208__$1;\r\n(statearr_31224_31545[(2)] = inst_31199);\r\n\r\n(statearr_31224_31545[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31209 === (6))){\r\nvar inst_31194 = (state_31208[(7)]);\r\nvar inst_31196 = (state_31208[(8)]);\r\nvar inst_31201 = re_com.typeahead.search_data_source_BANG_(inst_31196,state_atom,inst_31194);\r\nvar state_31208__$1 = state_31208;\r\nvar statearr_31225_31546 = state_31208__$1;\r\n(statearr_31225_31546[(2)] = inst_31201);\r\n\r\n(statearr_31225_31546[(1)] = (7));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31209 === (7))){\r\nvar inst_31203 = (state_31208[(2)]);\r\nvar state_31208__$1 = (function (){var statearr_31226 = state_31208;\r\n(statearr_31226[(9)] = inst_31203);\r\n\r\nreturn statearr_31226;\r\n})();\r\nvar statearr_31227_31547 = state_31208__$1;\r\n(statearr_31227_31547[(2)] = null);\r\n\r\n(statearr_31227_31547[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});})(c__28935__auto__))\r\n;\r\nreturn ((function (switch__28807__auto__,c__28935__auto__){\r\nreturn (function() {\r\nvar re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto__ = null;\r\nvar re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto____0 = (function (){\r\nvar statearr_31229 = [null,null,null,null,null,null,null,null,null,null];\r\n(statearr_31229[(0)] = re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto__);\r\n\r\n(statearr_31229[(1)] = (1));\r\n\r\nreturn statearr_31229;\r\n});\r\nvar re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto____1 = (function (state_31208){\r\nwhile(true){\r\nvar ret_value__28809__auto__ = (function (){try{while(true){\r\nvar result__28810__auto__ = switch__28807__auto__(state_31208);\r\nif(cljs.core.keyword_identical_QMARK_(result__28810__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__28810__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e31231){if((e31231 instanceof Object)){\r\nvar ex__28811__auto__ = e31231;\r\nvar statearr_31232_31550 = state_31208;\r\n(statearr_31232_31550[(5)] = ex__28811__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_31208);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e31231;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__28809__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__31552 = state_31208;\r\nstate_31208 = G__31552;\r\ncontinue;\r\n} else {\r\nreturn ret_value__28809__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nre_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto__ = function(state_31208){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto____0.call(this);\r\ncase 1:\r\nreturn re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto____1.call(this,state_31208);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nre_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto__.cljs$core$IFn$_invoke$arity$0 = re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto____0;\r\nre_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto__.cljs$core$IFn$_invoke$arity$1 = re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto____1;\r\nreturn re_com$typeahead$search_data_source_loop_BANG__$_state_machine__28808__auto__;\r\n})()\r\n;})(switch__28807__auto__,c__28935__auto__))\r\n})();\r\nvar state__28937__auto__ = (function (){var statearr_31233 = (f__28936__auto__.cljs$core$IFn$_invoke$arity$0 ? f__28936__auto__.cljs$core$IFn$_invoke$arity$0() : f__28936__auto__.call(null));\r\n(statearr_31233[(6)] = c__28935__auto__);\r\n\r\nreturn statearr_31233;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__28937__auto__);\r\n});})(c__28935__auto__))\r\n);\r\n\r\nreturn c__28935__auto__;\r\n});\r\n/**\r\n * Update state in response to `input-text` `on-change`, and put text on the `c-input` channel\r\n */\r\nre_com.typeahead.input_text_on_change_BANG_ = (function re_com$typeahead$input_text_on_change_BANG_(state_atom,new_text){\r\nvar map__31248 = cljs.core.deref(state_atom);\r\nvar map__31248__$1 = (((((!((map__31248 == null))))?(((((map__31248.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31248.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31248):map__31248);\r\nvar state = map__31248__$1;\r\nvar input_text = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31248__$1,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114));\r\nvar c_input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31248__$1,new cljs.core.Keyword(null,\"c-input\",\"c-input\",-1821004232));\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new_text,input_text)){\r\nreturn state;\r\n} else {\r\nif(clojure.string.blank_QMARK_(new_text)){\r\n} else {\r\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(c_input,new_text);\r\n}\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,((function (map__31248,map__31248__$1,state,input_text,c_input){\r\nreturn (function (p1__31243_SHARP_){\r\nvar G__31256 = p1__31243_SHARP_;\r\nvar G__31256__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__31256,new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114),new_text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"displaying-suggestion?\",\"displaying-suggestion?\",1244493862),false], 0))\r\n;\r\nif(cljs.core.truth_(re_com.typeahead.event_updates_model_QMARK_(state,new cljs.core.Keyword(null,\"input-text-changed\",\"input-text-changed\",-1906799535)))){\r\nreturn re_com.typeahead.update_model(G__31256__$1,new_text);\r\n} else {\r\nreturn G__31256__$1;\r\n}\r\n});})(map__31248,map__31248__$1,state,input_text,c_input))\r\n);\r\n}\r\n});\r\nre_com.typeahead.input_text_on_key_down_BANG_ = (function re_com$typeahead$input_text_on_key_down_BANG_(state_atom,event){\r\nvar pred__31262 = cljs.core._EQ_;\r\nvar expr__31263 = event.which;\r\nif(cljs.core.truth_((pred__31262.cljs$core$IFn$_invoke$arity$2 ? pred__31262.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.UP,expr__31263) : pred__31262.call(null,goog.events.KeyCodes.UP,expr__31263)))){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.activate_suggestion_prev);\r\n} else {\r\nif(cljs.core.truth_((pred__31262.cljs$core$IFn$_invoke$arity$2 ? pred__31262.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.DOWN,expr__31263) : pred__31262.call(null,goog.events.KeyCodes.DOWN,expr__31263)))){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.activate_suggestion_next);\r\n} else {\r\nif(cljs.core.truth_((pred__31262.cljs$core$IFn$_invoke$arity$2 ? pred__31262.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.ENTER,expr__31263) : pred__31262.call(null,goog.events.KeyCodes.ENTER,expr__31263)))){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.choose_suggestion_active);\r\n} else {\r\nif(cljs.core.truth_((pred__31262.cljs$core$IFn$_invoke$arity$2 ? pred__31262.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.ESC,expr__31263) : pred__31262.call(null,goog.events.KeyCodes.ESC,expr__31263)))){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.reset_typeahead);\r\n} else {\r\nif(cljs.core.truth_((pred__31262.cljs$core$IFn$_invoke$arity$2 ? pred__31262.cljs$core$IFn$_invoke$arity$2(goog.events.KeyCodes.TAB,expr__31263) : pred__31262.call(null,goog.events.KeyCodes.TAB,expr__31263)))){\r\nif(cljs.core.truth_(cljs.core.not_empty(new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(state_atom))))){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.activate_suggestion_next);\r\n\r\nreturn event.preventDefault();\r\n} else {\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(state_atom,re_com.typeahead.input_text_will_blur);\r\n}\r\n} else {\r\nreturn true;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});\r\nre_com.typeahead.typeahead_args_desc = new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),true,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"fn\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\" supplies suggestion objects. This can either accept a single string argument (the search term), or a string and a callback. For the first case, the fn should return a collection of suggestion objects (which can be anything). For the second case, the fn should return \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"nil\"], null),\", and eventually result in a call to the callback with a collection of suggestion objects.\"], null)], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),null,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string -> nil\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":change-on-blur?\"], null),\" controls when it is called. It is passed a suggestion object.\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),true,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"when true, invoke \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":on-change\"], null),\" when the user chooses a suggestion, otherwise invoke it on every change (navigating through suggestions with the mouse or keyboard, or if \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"rigid?\"], null),\" is also \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"false\"], null),\", invoke it on every character typed.)\"], null)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"model\",\"model\",331153215),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),null,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"object | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"The initial value of the typeahead (should match the suggestion objects returned by \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\").\"]),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"debounce-delay\",\"debounce-delay\",-608187982),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(250),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"integer\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.integer_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"After receiving input, the typeahead will wait this many milliseconds without receiving new input before calling \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\".\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"render-suggestion\",\"render-suggestion\",1472406503),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"render fn\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"override the rendering of the suggestion items by passing a fn that returns hiccup forms. The fn will receive two arguments: the search term, and the suggestion object.\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"suggestion-to-string\",\"suggestion-to-string\",1991188962),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"suggestion -> string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.fn_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"When a suggestion is chosen, the input-text value will be set to the result of calling this fn with the suggestion object.\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"rigid?\",\"rigid?\",-1498832118),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),true,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"If \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"false\"], null),\" the user will be allowed to choose arbitrary text input rather than a suggestion from \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":data-source\"], null),\". In this case, a string will be supplied in lieu of a suggestion object.\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"keyword\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),re_com.validate.input_status_type_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"validation status. \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\"nil/omitted\"], null),\" for normal status or one of: \",re_com.validate.input_status_types_list], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"status-icon?\",\"status-icon?\",1328423612),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"when true, display an icon to match \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":status\"], null),\" (no icon for nil)\"], null)], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"status-tooltip\",\"status-tooltip\",1912159007),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"displayed in status icon's tooltip\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"placeholder\",\"placeholder\",-104873083),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"background text shown when empty\"], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"width\",\"width\",-384071477),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),\"250px\",new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"standard CSS width setting for this input\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"height\",\"height\",1025178622),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"standard CSS height setting for this input\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"disabled?\",\"disabled?\",-1523234181),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"boolean | atom\",new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"if true, the user can't interact (input anything)\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"string\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),cljs.core.string_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"CSS class names, space separated\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"CSS style map\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),re_com.validate.css_style_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),\"CSS styles to add or override\"], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.Keyword(null,\"required\",\"required\",1807647006),false,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"HTML attr map\",new cljs.core.Keyword(null,\"validate-fn\",\"validate-fn\",1430169944),re_com.validate.html_attr_QMARK_,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"span\",\"span\",1394872991),\"HTML attributes, like \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":on-mouse-move\"], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"br\",\"br\",934104792)], null),\"No \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":class\"], null),\" or \",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"code\",\"code\",1586293142),\":style\"], null),\"allowed\"], null)], null)], null);\r\n/**\r\n * typeahead reagent component\r\n */\r\nre_com.typeahead.typeahead = (function re_com$typeahead$typeahead(var_args){\r\nvar args__4736__auto__ = [];\r\nvar len__4730__auto___31588 = arguments.length;\r\nvar i__4731__auto___31589 = (0);\r\nwhile(true){\r\nif((i__4731__auto___31589 < len__4730__auto___31588)){\r\nargs__4736__auto__.push((arguments[i__4731__auto___31589]));\r\n\r\nvar G__31590 = (i__4731__auto___31589 + (1));\r\ni__4731__auto___31589 = G__31590;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\r\nreturn re_com.typeahead.typeahead.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\r\n});\r\n\r\nre_com.typeahead.typeahead.cljs$core$IFn$_invoke$arity$variadic = (function (p__31281){\r\nvar map__31282 = p__31281;\r\nvar map__31282__$1 = (((((!((map__31282 == null))))?(((((map__31282.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31282.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31282):map__31282);\r\nvar args = map__31282__$1;\r\nif((((!(goog.DEBUG)))?true:re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic(re_com.validate.extract_arg_data(re_com.typeahead.typeahead_args_desc),args,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"typeahead\"], 0)))){\r\n} else {\r\nthrow (new Error(\"Assert failed: (validate-args-macro typeahead-args-desc args \\\"typeahead\\\")\"));\r\n}\r\n\r\nvar map__31284 = re_com.typeahead.make_typeahead_state(args);\r\nvar map__31284__$1 = (((((!((map__31284 == null))))?(((((map__31284.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31284.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31284):map__31284);\r\nvar state = map__31284__$1;\r\nvar c_search = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31284__$1,new cljs.core.Keyword(null,\"c-search\",\"c-search\",1832536180));\r\nvar c_input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31284__$1,new cljs.core.Keyword(null,\"c-input\",\"c-input\",-1821004232));\r\nvar state_atom = reagent.core.atom.cljs$core$IFn$_invoke$arity$1(state);\r\nvar input_text_model = reagent.core.cursor(state_atom,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"input-text\",\"input-text\",-1336297114)], null));\r\nre_com.typeahead.search_data_source_loop_BANG_(state_atom,c_search);\r\n\r\nreturn ((function (map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function() { \r\nvar G__31595__delegate = function (p__31289){\r\nvar map__31290 = p__31289;\r\nvar map__31290__$1 = (((((!((map__31290 == null))))?(((((map__31290.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31290.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31290):map__31290);\r\nvar args__$1 = map__31290__$1;\r\nvar disabled_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"disabled?\",\"disabled?\",-1523234181));\r\nvar status_icon_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"status-icon?\",\"status-icon?\",1328423612));\r\nvar height = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622));\r\nvar status_tooltip = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"status-tooltip\",\"status-tooltip\",1912159007));\r\nvar model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"model\",\"model\",331153215));\r\nvar _debounce_delay = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"_debounce-delay\",\"_debounce-delay\",-1476744225));\r\nvar _on_change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"_on-change\",\"_on-change\",156649312));\r\nvar placeholder = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"placeholder\",\"placeholder\",-104873083));\r\nvar render_suggestion = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"render-suggestion\",\"render-suggestion\",1472406503));\r\nvar _suggestion_to_string = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"_suggestion-to-string\",\"_suggestion-to-string\",795407399));\r\nvar width = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"width\",\"width\",-384071477));\r\nvar data_source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676));\r\nvar _rigid_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"_rigid?\",\"_rigid?\",1424449294));\r\nvar style = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"style\",\"style\",-496642736));\r\nvar _change_on_blur_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"_change-on-blur?\",\"_change-on-blur?\",1219941073));\r\nvar status = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"status\",\"status\",-1997798413));\r\nvar class$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996));\r\nvar _attr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31290__$1,new cljs.core.Keyword(null,\"_attr\",\"_attr\",299438964));\r\nif((((!(goog.DEBUG)))?true:re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic(re_com.validate.extract_arg_data(re_com.typeahead.typeahead_args_desc),args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"typeahead\"], 0)))){\r\n} else {\r\nthrow (new Error(\"Assert failed: (validate-args-macro typeahead-args-desc args \\\"typeahead\\\")\"));\r\n}\r\n\r\nvar map__31303 = cljs.core.deref(state_atom);\r\nvar map__31303__$1 = (((((!((map__31303 == null))))?(((((map__31303.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__31303.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31303):map__31303);\r\nvar state__$1 = map__31303__$1;\r\nvar suggestions = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31303__$1,new cljs.core.Keyword(null,\"suggestions\",\"suggestions\",-859472618));\r\nvar waiting_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31303__$1,new cljs.core.Keyword(null,\"waiting?\",\"waiting?\",-2117257215));\r\nvar suggestion_active_index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31303__$1,new cljs.core.Keyword(null,\"suggestion-active-index\",\"suggestion-active-index\",-1593564728));\r\nvar external_model = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31303__$1,new cljs.core.Keyword(null,\"external-model\",\"external-model\",506095421));\r\nvar last_data_source = new cljs.core.Keyword(null,\"data-source\",\"data-source\",-658934676).cljs$core$IFn$_invoke$arity$1(state__$1);\r\nvar latest_external_model = re_com.util.deref_or_value(model);\r\nvar width__$1 = (function (){var or__4131__auto__ = width;\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn \"250px\";\r\n}\r\n})();\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(last_data_source,data_source)){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.change_data_source,data_source);\r\n} else {\r\n}\r\n\r\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(latest_external_model,external_model)){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.external_model_changed,latest_external_model);\r\n} else {\r\n}\r\n\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.v_box,new cljs.core.Keyword(null,\"width\",\"width\",-384071477),width__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 27, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.misc.input_text,new cljs.core.Keyword(null,\"model\",\"model\",331153215),input_text_model,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),class$,new cljs.core.Keyword(null,\"style\",\"style\",-496642736),style,new cljs.core.Keyword(null,\"disabled?\",\"disabled?\",-1523234181),disabled_QMARK_,new cljs.core.Keyword(null,\"status-icon?\",\"status-icon?\",1328423612),status_icon_QMARK_,new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),status,new cljs.core.Keyword(null,\"status-tooltip\",\"status-tooltip\",1912159007),status_tooltip,new cljs.core.Keyword(null,\"width\",\"width\",-384071477),width__$1,new cljs.core.Keyword(null,\"height\",\"height\",1025178622),height,new cljs.core.Keyword(null,\"placeholder\",\"placeholder\",-104873083),placeholder,new cljs.core.Keyword(null,\"on-change\",\"on-change\",-732046149),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_com.typeahead.input_text_on_change_BANG_,state_atom),new cljs.core.Keyword(null,\"change-on-blur?\",\"change-on-blur?\",854283925),false,new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-key-down\",\"on-key-down\",-1374733765),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_com.typeahead.input_text_on_key_down_BANG_,state_atom)], null)], null),(cljs.core.truth_((function (){var or__4131__auto__ = cljs.core.not_empty(suggestions);\r\nif(cljs.core.truth_(or__4131__auto__)){\r\nreturn or__4131__auto__;\r\n} else {\r\nreturn waiting_QMARK_;\r\n}\r\n})())?new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"style\",\"style\",-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"position\",\"position\",-2011731912),\"relative\"], null),new cljs.core.Keyword(null,\"child\",\"child\",623967545),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.v_box,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),\"rc-typeahead-suggestions-container\",new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(waiting_QMARK_)?new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"align\",\"align\",1964212802),new cljs.core.Keyword(null,\"center\",\"center\",-748944368),new cljs.core.Keyword(null,\"child\",\"child\",623967545),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.misc.throbber,new cljs.core.Keyword(null,\"size\",\"size\",1098693007),new cljs.core.Keyword(null,\"small\",\"small\",2133478704),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),\"rc-typeahead-throbber\"], null)], null):null),(function (){var iter__4523__auto__ = ((function (map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function re_com$typeahead$iter__31313(s__31314){\r\nreturn (new cljs.core.LazySeq(null,((function (map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function (){\r\nvar s__31314__$1 = s__31314;\r\nwhile(true){\r\nvar temp__5720__auto__ = cljs.core.seq(s__31314__$1);\r\nif(temp__5720__auto__){\r\nvar s__31314__$2 = temp__5720__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__31314__$2)){\r\nvar c__4521__auto__ = cljs.core.chunk_first(s__31314__$2);\r\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\r\nvar b__31316 = cljs.core.chunk_buffer(size__4522__auto__);\r\nif((function (){var i__31315 = (0);\r\nwhile(true){\r\nif((i__31315 < size__4522__auto__)){\r\nvar vec__31317 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__31315);\r\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31317,(0),null);\r\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31317,(1),null);\r\nvar selected_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(suggestion_active_index,i);\r\ncljs.core.chunk_append(b__31316,cljs.core.with_meta(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"child\",\"child\",623967545),(cljs.core.truth_(render_suggestion)?(render_suggestion.cljs$core$IFn$_invoke$arity$1 ? render_suggestion.cljs$core$IFn$_invoke$arity$1(s) : render_suggestion.call(null,s)):s),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),[\"rc-typeahead-suggestion\",((selected_QMARK_)?\" active\":null)].join(''),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"on-mouse-over\",\"on-mouse-over\",-858472552),((function (i__31315,selected_QMARK_,vec__31317,i,s,c__4521__auto__,size__4522__auto__,b__31316,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function (){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.activate_suggestion_by_index,i);\r\n});})(i__31315,selected_QMARK_,vec__31317,i,s,c__4521__auto__,size__4522__auto__,b__31316,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n,new cljs.core.Keyword(null,\"on-mouse-down\",\"on-mouse-down\",1147755470),((function (i__31315,selected_QMARK_,vec__31317,i,s,c__4521__auto__,size__4522__auto__,b__31316,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function (p1__31277_SHARP_){\r\np1__31277_SHARP_.preventDefault();\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.choose_suggestion_by_index,i);\r\n});})(i__31315,selected_QMARK_,vec__31317,i,s,c__4521__auto__,size__4522__auto__,b__31316,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),i], null)));\r\n\r\nvar G__31609 = (i__31315 + (1));\r\ni__31315 = G__31609;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__31316),re_com$typeahead$iter__31313(cljs.core.chunk_rest(s__31314__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__31316),null);\r\n}\r\n} else {\r\nvar vec__31324 = cljs.core.first(s__31314__$2);\r\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31324,(0),null);\r\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31324,(1),null);\r\nvar selected_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(suggestion_active_index,i);\r\nreturn cljs.core.cons(cljs.core.with_meta(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_com.box.box,new cljs.core.Keyword(null,\"child\",\"child\",623967545),(cljs.core.truth_(render_suggestion)?(render_suggestion.cljs$core$IFn$_invoke$arity$1 ? render_suggestion.cljs$core$IFn$_invoke$arity$1(s) : render_suggestion.call(null,s)):s),new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),[\"rc-typeahead-suggestion\",((selected_QMARK_)?\" active\":null)].join(''),new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"on-mouse-over\",\"on-mouse-over\",-858472552),((function (selected_QMARK_,vec__31324,i,s,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function (){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.activate_suggestion_by_index,i);\r\n});})(selected_QMARK_,vec__31324,i,s,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n,new cljs.core.Keyword(null,\"on-mouse-down\",\"on-mouse-down\",1147755470),((function (selected_QMARK_,vec__31324,i,s,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args){\r\nreturn (function (p1__31277_SHARP_){\r\np1__31277_SHARP_.preventDefault();\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(state_atom,re_com.typeahead.choose_suggestion_by_index,i);\r\n});})(selected_QMARK_,vec__31324,i,s,s__31314__$2,temp__5720__auto__,map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n], null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),i], null)),re_com$typeahead$iter__31313(cljs.core.rest(s__31314__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});})(map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n,null,null));\r\n});})(map__31303,map__31303__$1,state__$1,suggestions,waiting_QMARK_,suggestion_active_index,external_model,last_data_source,latest_external_model,width__$1,map__31290,map__31290__$1,args__$1,disabled_QMARK_,status_icon_QMARK_,height,status_tooltip,model,_debounce_delay,_on_change,placeholder,render_suggestion,_suggestion_to_string,width,data_source,_rigid_QMARK_,style,_change_on_blur_QMARK_,status,class$,_attr,map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n;\r\nreturn iter__4523__auto__(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.range.cljs$core$IFn$_invoke$arity$0(),suggestions));\r\n})()], null)], null)], null):null)], null)], null);\r\n};\r\nvar G__31595 = function (var_args){\r\nvar p__31289 = null;\r\nif (arguments.length > 0) {\r\nvar G__31648__i = 0, G__31648__a = new Array(arguments.length -  0);\r\nwhile (G__31648__i < G__31648__a.length) {G__31648__a[G__31648__i] = arguments[G__31648__i + 0]; ++G__31648__i;}\r\n  p__31289 = new cljs.core.IndexedSeq(G__31648__a,0,null);\r\n} \r\nreturn G__31595__delegate.call(this,p__31289);};\r\nG__31595.cljs$lang$maxFixedArity = 0;\r\nG__31595.cljs$lang$applyTo = (function (arglist__31652){\r\nvar p__31289 = cljs.core.seq(arglist__31652);\r\nreturn G__31595__delegate(p__31289);\r\n});\r\nG__31595.cljs$core$IFn$_invoke$arity$variadic = G__31595__delegate;\r\nreturn G__31595;\r\n})()\r\n;\r\n;})(map__31284,map__31284__$1,state,c_search,c_input,state_atom,input_text_model,map__31282,map__31282__$1,args))\r\n});\r\n\r\nre_com.typeahead.typeahead.cljs$lang$maxFixedArity = (0);\r\n\r\n/** @this {Function} */\r\nre_com.typeahead.typeahead.cljs$lang$applyTo = (function (seq31279){\r\nvar self__4718__auto__ = this;\r\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq31279));\r\n});\r\n\r\n/**\r\n * Return a channel which will receive a value from the `in` channel only\r\n *   if no further value is received on the `in` channel in the next `ms` milliseconds.\r\n */\r\nre_com.typeahead.debounce = (function re_com$typeahead$debounce(in$,ms){\r\nvar out = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\r\nvar c__28935__auto___31663 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\r\ncljs.core.async.impl.dispatch.run(((function (c__28935__auto___31663,out){\r\nreturn (function (){\r\nvar f__28936__auto__ = (function (){var switch__28807__auto__ = ((function (c__28935__auto___31663,out){\r\nreturn (function (state_31444){\r\nvar state_val_31445 = (state_31444[(1)]);\r\nif((state_val_31445 === (7))){\r\nvar inst_31345 = (state_31444[(2)]);\r\nvar state_31444__$1 = state_31444;\r\nvar statearr_31446_31672 = state_31444__$1;\r\n(statearr_31446_31672[(2)] = inst_31345);\r\n\r\n(statearr_31446_31672[(1)] = (6));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (1))){\r\nvar inst_31340 = null;\r\nvar state_31444__$1 = (function (){var statearr_31447 = state_31444;\r\n(statearr_31447[(7)] = inst_31340);\r\n\r\nreturn statearr_31447;\r\n})();\r\nvar statearr_31448_31682 = state_31444__$1;\r\n(statearr_31448_31682[(2)] = null);\r\n\r\n(statearr_31448_31682[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (4))){\r\nvar state_31444__$1 = state_31444;\r\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_31444__$1,(7),in$);\r\n} else {\r\nif((state_val_31445 === (15))){\r\nvar inst_31429 = (state_31444[(2)]);\r\nvar state_31444__$1 = (function (){var statearr_31449 = state_31444;\r\n(statearr_31449[(8)] = inst_31429);\r\n\r\nreturn statearr_31449;\r\n})();\r\nvar statearr_31450_31686 = state_31444__$1;\r\n(statearr_31450_31686[(2)] = null);\r\n\r\n(statearr_31450_31686[(1)] = (14));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (13))){\r\nvar inst_31415 = (state_31444[(9)]);\r\nvar inst_31431 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_31415,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\r\nvar state_31444__$1 = state_31444;\r\nif(inst_31431){\r\nvar statearr_31451_31687 = state_31444__$1;\r\n(statearr_31451_31687[(1)] = (16));\r\n\r\n} else {\r\nvar statearr_31452_31688 = state_31444__$1;\r\n(statearr_31452_31688[(1)] = (17));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (6))){\r\nvar inst_31349 = (state_31444[(10)]);\r\nvar inst_31348 = (state_31444[(2)]);\r\nvar inst_31349__$1 = cljs.core.async.timeout(ms);\r\nvar inst_31409 = cljs.core.PersistentVector.EMPTY_NODE;\r\nvar inst_31410 = [in$,inst_31349__$1];\r\nvar inst_31411 = (new cljs.core.PersistentVector(null,2,(5),inst_31409,inst_31410,null));\r\nvar state_31444__$1 = (function (){var statearr_31453 = state_31444;\r\n(statearr_31453[(11)] = inst_31348);\r\n\r\n(statearr_31453[(10)] = inst_31349__$1);\r\n\r\nreturn statearr_31453;\r\n})();\r\nreturn cljs.core.async.ioc_alts_BANG_(state_31444__$1,(8),inst_31411);\r\n} else {\r\nif((state_val_31445 === (17))){\r\nvar state_31444__$1 = state_31444;\r\nvar statearr_31454_31692 = state_31444__$1;\r\n(statearr_31454_31692[(2)] = null);\r\n\r\n(statearr_31454_31692[(1)] = (18));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (3))){\r\nvar inst_31442 = (state_31444[(2)]);\r\nvar state_31444__$1 = state_31444;\r\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_31444__$1,inst_31442);\r\n} else {\r\nif((state_val_31445 === (12))){\r\nvar inst_31348 = (state_31444[(11)]);\r\nvar state_31444__$1 = state_31444;\r\nreturn cljs.core.async.impl.ioc_helpers.put_BANG_(state_31444__$1,(15),out,inst_31348);\r\n} else {\r\nif((state_val_31445 === (2))){\r\nvar inst_31340 = (state_31444[(7)]);\r\nvar inst_31342 = (inst_31340 == null);\r\nvar state_31444__$1 = state_31444;\r\nif(cljs.core.truth_(inst_31342)){\r\nvar statearr_31455_31695 = state_31444__$1;\r\n(statearr_31455_31695[(1)] = (4));\r\n\r\n} else {\r\nvar statearr_31456_31696 = state_31444__$1;\r\n(statearr_31456_31696[(1)] = (5));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (11))){\r\nvar inst_31439 = (state_31444[(2)]);\r\nvar inst_31340 = inst_31439;\r\nvar state_31444__$1 = (function (){var statearr_31457 = state_31444;\r\n(statearr_31457[(7)] = inst_31340);\r\n\r\nreturn statearr_31457;\r\n})();\r\nvar statearr_31458_31700 = state_31444__$1;\r\n(statearr_31458_31700[(2)] = null);\r\n\r\n(statearr_31458_31700[(1)] = (2));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (9))){\r\nvar inst_31413 = (state_31444[(12)]);\r\nvar inst_31423 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31413,(0),null);\r\nvar inst_31424 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31413,(1),null);\r\nvar state_31444__$1 = (function (){var statearr_31460 = state_31444;\r\n(statearr_31460[(13)] = inst_31424);\r\n\r\nreturn statearr_31460;\r\n})();\r\nvar statearr_31461_31707 = state_31444__$1;\r\n(statearr_31461_31707[(2)] = inst_31423);\r\n\r\n(statearr_31461_31707[(1)] = (11));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (5))){\r\nvar inst_31340 = (state_31444[(7)]);\r\nvar state_31444__$1 = state_31444;\r\nvar statearr_31463_31710 = state_31444__$1;\r\n(statearr_31463_31710[(2)] = inst_31340);\r\n\r\n(statearr_31463_31710[(1)] = (6));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (14))){\r\nvar inst_31437 = (state_31444[(2)]);\r\nvar state_31444__$1 = state_31444;\r\nvar statearr_31464_31712 = state_31444__$1;\r\n(statearr_31464_31712[(2)] = inst_31437);\r\n\r\n(statearr_31464_31712[(1)] = (11));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (16))){\r\nvar inst_31414 = (state_31444[(14)]);\r\nvar state_31444__$1 = state_31444;\r\nvar statearr_31465_31713 = state_31444__$1;\r\n(statearr_31465_31713[(2)] = inst_31414);\r\n\r\n(statearr_31465_31713[(1)] = (18));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (10))){\r\nvar inst_31349 = (state_31444[(10)]);\r\nvar inst_31415 = (state_31444[(9)]);\r\nvar inst_31426 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_31415,inst_31349);\r\nvar state_31444__$1 = state_31444;\r\nif(inst_31426){\r\nvar statearr_31466_31715 = state_31444__$1;\r\n(statearr_31466_31715[(1)] = (12));\r\n\r\n} else {\r\nvar statearr_31467_31720 = state_31444__$1;\r\n(statearr_31467_31720[(1)] = (13));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (18))){\r\nvar inst_31435 = (state_31444[(2)]);\r\nvar state_31444__$1 = state_31444;\r\nvar statearr_31468_31722 = state_31444__$1;\r\n(statearr_31468_31722[(2)] = inst_31435);\r\n\r\n(statearr_31468_31722[(1)] = (14));\r\n\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nif((state_val_31445 === (8))){\r\nvar inst_31413 = (state_31444[(12)]);\r\nvar inst_31415 = (state_31444[(9)]);\r\nvar inst_31413__$1 = (state_31444[(2)]);\r\nvar inst_31414 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31413__$1,(0),null);\r\nvar inst_31415__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_31413__$1,(1),null);\r\nvar inst_31417 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_31415__$1,in$);\r\nvar state_31444__$1 = (function (){var statearr_31469 = state_31444;\r\n(statearr_31469[(14)] = inst_31414);\r\n\r\n(statearr_31469[(12)] = inst_31413__$1);\r\n\r\n(statearr_31469[(9)] = inst_31415__$1);\r\n\r\nreturn statearr_31469;\r\n})();\r\nif(inst_31417){\r\nvar statearr_31470_31729 = state_31444__$1;\r\n(statearr_31470_31729[(1)] = (9));\r\n\r\n} else {\r\nvar statearr_31471_31730 = state_31444__$1;\r\n(statearr_31471_31730[(1)] = (10));\r\n\r\n}\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n});})(c__28935__auto___31663,out))\r\n;\r\nreturn ((function (switch__28807__auto__,c__28935__auto___31663,out){\r\nreturn (function() {\r\nvar re_com$typeahead$debounce_$_state_machine__28808__auto__ = null;\r\nvar re_com$typeahead$debounce_$_state_machine__28808__auto____0 = (function (){\r\nvar statearr_31473 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\r\n(statearr_31473[(0)] = re_com$typeahead$debounce_$_state_machine__28808__auto__);\r\n\r\n(statearr_31473[(1)] = (1));\r\n\r\nreturn statearr_31473;\r\n});\r\nvar re_com$typeahead$debounce_$_state_machine__28808__auto____1 = (function (state_31444){\r\nwhile(true){\r\nvar ret_value__28809__auto__ = (function (){try{while(true){\r\nvar result__28810__auto__ = switch__28807__auto__(state_31444);\r\nif(cljs.core.keyword_identical_QMARK_(result__28810__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\ncontinue;\r\n} else {\r\nreturn result__28810__auto__;\r\n}\r\nbreak;\r\n}\r\n}catch (e31477){if((e31477 instanceof Object)){\r\nvar ex__28811__auto__ = e31477;\r\nvar statearr_31478_31736 = state_31444;\r\n(statearr_31478_31736[(5)] = ex__28811__auto__);\r\n\r\n\r\ncljs.core.async.impl.ioc_helpers.process_exception(state_31444);\r\n\r\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\r\n} else {\r\nthrow e31477;\r\n\r\n}\r\n}})();\r\nif(cljs.core.keyword_identical_QMARK_(ret_value__28809__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\r\nvar G__31738 = state_31444;\r\nstate_31444 = G__31738;\r\ncontinue;\r\n} else {\r\nreturn ret_value__28809__auto__;\r\n}\r\nbreak;\r\n}\r\n});\r\nre_com$typeahead$debounce_$_state_machine__28808__auto__ = function(state_31444){\r\nswitch(arguments.length){\r\ncase 0:\r\nreturn re_com$typeahead$debounce_$_state_machine__28808__auto____0.call(this);\r\ncase 1:\r\nreturn re_com$typeahead$debounce_$_state_machine__28808__auto____1.call(this,state_31444);\r\n}\r\nthrow(new Error('Invalid arity: ' + arguments.length));\r\n};\r\nre_com$typeahead$debounce_$_state_machine__28808__auto__.cljs$core$IFn$_invoke$arity$0 = re_com$typeahead$debounce_$_state_machine__28808__auto____0;\r\nre_com$typeahead$debounce_$_state_machine__28808__auto__.cljs$core$IFn$_invoke$arity$1 = re_com$typeahead$debounce_$_state_machine__28808__auto____1;\r\nreturn re_com$typeahead$debounce_$_state_machine__28808__auto__;\r\n})()\r\n;})(switch__28807__auto__,c__28935__auto___31663,out))\r\n})();\r\nvar state__28937__auto__ = (function (){var statearr_31480 = (f__28936__auto__.cljs$core$IFn$_invoke$arity$0 ? f__28936__auto__.cljs$core$IFn$_invoke$arity$0() : f__28936__auto__.call(null));\r\n(statearr_31480[(6)] = c__28935__auto___31663);\r\n\r\nreturn statearr_31480;\r\n})();\r\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__28937__auto__);\r\n});})(c__28935__auto___31663,out))\r\n);\r\n\r\n\r\nreturn out;\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_com/typeahead.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",["^ ","~$handler-fn","~$re-com.core","~$alt!","~$cljs.core.async.macros","~$go-loop","^N","~$validate-args-macro","~$re-com.validate"],"~:excludes",["~#set",[]],"~:name","~$re-com.typeahead","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent","~$reagent.core","~$re-com.util","^10","~$re-com.popover","^11","~$re-com.box","^12","^[","^[","~$cljs.core","^13","~$goog","^14","~$cljs.core.async","^15","^Q","^Q","~$goog.events.KeyCodes","^16","~$re-com.misc","^17"],"~:seen",["^S",["~:require","~:require-macros"]],"~:uses",["^ ","~$align-style","^12","~$timeout","^15","~$html-attr?","^Q","~$h-box","^12","~$<!","^15","~$string-or-atom?","^Q","~$deref-or-value","^10","~$throbber-sizes-list","^Q","~$throbber-size?","^Q","~$chan","^15","~$input-text","^17","~$regex?","^Q","~$css-style?","^Q","~$box","^12","~$px","^10","~$string-or-hiccup?","^Q","~$v-box","^12","~$flex-child-style","^12","~$input-status-type?","^Q","~$popover-tooltip","^11","~$line","^12","~$number-or-string?","^Q","~$input-status-types-list","^Q","~$gap","^12","~$throbber","^17","~$put!","^15"],"^1:",["^ ","^L","^L","^N","^N","^Q","^Q","^13","^13","^Z","^[","^[","^[","^15","^15"],"~:form",["~#list",["~$ns","^U",["^1W",["^1:",["^L","~:refer",["^K"]],["^N","^1Y",["^M","^O"]]]],["^1W",["^19",["^15","^1Y",["^1E","^1=","^1@","^1U"]],["^17","^1Y",["^1T","^1F"]],["^10","^1Y",["^1B","^1J"]],["^11","^1Y",["^1O"]],["^12","^1Y",["^1?","^1L","^1I","^1S","^1P","^1M","^1<"]],["^Q","^1Y",["^1N","^1R","^1G","^1K","^1H","^1>","^1Q","^1A","^1D","^1C"],"~:refer-macros",["^P"]],["^[","~:as","^Z"],["^16"]]]]],"~:flags",["^ ","^1:",["^S",[]],"^19",["^S",[]]],"~:js-deps",["^ "],"~:deps",["^14","^13","^15","^17","^10","^11","^12","^Q","^[","^16"]],"^W","^U","~:resource-id",["~:shadow.build.classpath/resource","re_com/typeahead.cljs"],"~:compiled-at",1574163717767,"~:resource-name","re_com/typeahead.cljs","~:warnings",[],"~:source","(ns re-com.typeahead\r\n  (:require-macros [re-com.core :refer [handler-fn]]\r\n                   [cljs.core.async.macros :refer [alt! go-loop]])\r\n  (:require [cljs.core.async :refer [chan timeout <! put!]]\r\n            [re-com.misc     :refer [throbber input-text]]\r\n            [re-com.util     :refer [deref-or-value px]]\r\n            [re-com.popover  :refer [popover-tooltip]] ;; need?\r\n            [re-com.box      :refer [h-box v-box box gap line flex-child-style align-style]] ;; need?\r\n            [re-com.validate :refer [input-status-type? input-status-types-list regex? string-or-hiccup? css-style? html-attr? number-or-string?\r\n                                     string-or-atom? throbber-size? throbber-sizes-list] :refer-macros [validate-args-macro]]\r\n            [reagent.core    :as    reagent]\r\n            [goog.events.KeyCodes]))\r\n\r\n;; TODO\r\n;; ability to focus & blur the input-text would be nice... this is also missing from input-text\r\n;; the typeahead should blur the input-text after a selection is chosen\r\n\r\n(declare debounce display-suggestion)\r\n(defn- make-typeahead-state\r\n  \"Return an initial value for the typeahead state, given `args`.\"\r\n  [{:as args :keys [on-change rigid? change-on-blur? data-source suggestion-to-string debounce-delay model]}]\r\n  (let [external-model-value (deref-or-value model)]\r\n    (cond-> (let [c-input (chan)]\r\n              {:input-text \"\"\r\n               :external-model (deref-or-value model)\r\n               :model          (deref-or-value model)\r\n               :waiting? false\r\n               :suggestions []\r\n               :displaying-suggestion? false\r\n               :suggestion-to-string (or suggestion-to-string str)\r\n               :data-source data-source\r\n               :change-on-blur? change-on-blur?\r\n               :on-change  on-change\r\n               :rigid?     rigid?\r\n               :c-input    c-input\r\n               :c-search   (debounce c-input debounce-delay)})\r\n      external-model-value\r\n      (display-suggestion external-model-value))))\r\n\r\n;; ------------------------------------------------------------------------------------\r\n;; State predicates:  state -> value? -> boolean\r\n;; ------------------------------------------------------------------------------------\r\n\r\n(defn- event-updates-model?\r\n  \"Should `event` update the `typeahead` `model`?\"\r\n  [{:as state :keys [change-on-blur? rigid?]} event]\r\n  (let [change-on-blur? (deref-or-value change-on-blur?)\r\n        rigid?          (deref-or-value rigid?)]\r\n    (case event\r\n      :input-text-blurred   (and change-on-blur? (not rigid?))\r\n      :suggestion-activated (not change-on-blur?)\r\n      :input-text-changed   (not (or change-on-blur? rigid?)))))\r\n\r\n(defn- event-displays-suggestion?\r\n  \"Should `event` cause the `input-text` value to be used to show the active suggestion?\"\r\n  [{:as state :keys [change-on-blur?]} event]\r\n  (let [change-on-blur? (deref-or-value change-on-blur?)]\r\n    (case event\r\n      :suggestion-activated (not change-on-blur?)\r\n      false)))\r\n\r\n;; ------------------------------------------------------------------------------------\r\n;; State update helpers: state -> value? -> next-state\r\n;;   all pure, _except_ that they may call `on-change`\r\n;; ------------------------------------------------------------------------------------\r\n\r\n(defn- update-model\r\n  \"Change the `typeahead` `model` value to `new-value`\"\r\n  [{:as state :keys [on-change]} new-value]\r\n  (when on-change (on-change new-value))\r\n  (assoc state :model new-value))\r\n\r\n(defn- display-suggestion\r\n  \"Change the `input-text` `model` to the string representation of `suggestion`\"\r\n  [{:as state :keys [suggestion-to-string]} suggestion]\r\n  (let [suggestion-string (suggestion-to-string suggestion)]\r\n    (cond-> state\r\n      suggestion-string (assoc :input-text suggestion-string\r\n                               :displaying-suggestion? true))))\r\n\r\n(defn- clear-suggestions\r\n  [state]\r\n  (-> state\r\n      (dissoc :suggestions :suggestion-active-index)))\r\n\r\n(defn- activate-suggestion-by-index\r\n  \"Make the suggestion at `index` the active suggestion\"\r\n  [{:as state :keys [suggestions]} index]\r\n  (let [suggestion (nth suggestions index)]\r\n    (cond-> state\r\n      :always (assoc :suggestion-active-index index)\r\n      (event-updates-model?       state :suggestion-activated) (update-model suggestion)\r\n      (event-displays-suggestion? state :suggestion-activated) (display-suggestion suggestion))))\r\n\r\n(defn- choose-suggestion-by-index\r\n  \"Choose the suggestion at `index`\"\r\n  [{:as state :keys [suggestions]} index]\r\n  (let [suggestion (nth suggestions index)]\r\n    (-> state\r\n        (activate-suggestion-by-index index)\r\n        (update-model suggestion)\r\n        (display-suggestion suggestion)\r\n        clear-suggestions)))\r\n\r\n(defn- choose-suggestion-active\r\n  [{:as state :keys [suggestion-active-index]}]\r\n  (cond-> state\r\n    suggestion-active-index (choose-suggestion-by-index suggestion-active-index)))\r\n\r\n(defn- wrap [index count] (mod (+ count index) count))\r\n\r\n(defn- activate-suggestion-next\r\n  [{:as state :keys [suggestions suggestion-active-index]}]\r\n  (cond-> state\r\n    suggestions\r\n    (activate-suggestion-by-index (-> suggestion-active-index (or -1) inc (wrap (count suggestions))))))\r\n\r\n(defn- activate-suggestion-prev\r\n  [{:as state :keys [suggestions suggestion-active-index]}]\r\n  (cond-> state\r\n    suggestions\r\n    (activate-suggestion-by-index (-> suggestion-active-index (or 0) dec (wrap (count suggestions))))))\r\n\r\n(defn- reset-typeahead\r\n  [state]\r\n  (cond-> state\r\n    :always clear-suggestions\r\n    :always (assoc :waiting? false :input-text \"\" :displaying-suggestion? false)\r\n    (event-updates-model? state :input-text-changed) (update-model nil)))\r\n\r\n(defn- got-suggestions\r\n  \"Update state when new suggestions are available\"\r\n  [state suggestions]\r\n  (-> state\r\n      (assoc :suggestions suggestions\r\n             :waiting? false\r\n             :suggestion-active-index nil)))\r\n\r\n(defn- input-text-will-blur\r\n  \"Update state when the `input-text` is about to lose focus.\"\r\n  [{:keys [input-text displaying-suggestion?] :as state}]\r\n  (cond-> state\r\n    (and (not displaying-suggestion?)\r\n         (event-updates-model? state :input-text-blurred))\r\n    (update-model input-text)))\r\n\r\n(defn- change-data-source\r\n  \"Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\r\n  came from the old `data-source`.\"\r\n  [state data-source]\r\n  (-> state\r\n      reset-typeahead\r\n      (assoc :data-source data-source)))\r\n\r\n(defn- external-model-changed\r\n  \"Update state when the external model value has changed.\"\r\n  [state new-value]\r\n  (-> state\r\n      (update-model new-value)\r\n      (display-suggestion new-value)\r\n      clear-suggestions))\r\n\r\n;; ------------------------------------------------------------------------------------\r\n;; Functions with side-effects\r\n;; ------------------------------------------------------------------------------------\r\n\r\n(defn- search-data-source!\r\n  \"Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\r\n  (asynchronously, if `data-source` does not return a truthy value).\"\r\n  [data-source state-atom text]\r\n  (if-let [return-value (data-source text #(swap! state-atom got-suggestions %1))]\r\n    (swap! state-atom got-suggestions return-value)\r\n    (swap! state-atom assoc :waiting? true)))\r\n\r\n(defn- search-data-source-loop!\r\n  \"For every value arriving on the `c-search` channel, call `search-data-source!`.\"\r\n  [state-atom c-search]\r\n  (go-loop []\r\n    (let [new-text (<! c-search)\r\n          data-source (:data-source @state-atom)]\r\n      (if (= \"\" new-text)\r\n        (swap! state-atom reset-typeahead)\r\n        (search-data-source! data-source state-atom new-text))\r\n      (recur))))\r\n\r\n(defn- input-text-on-change!\r\n  \"Update state in response to `input-text` `on-change`, and put text on the `c-input` channel\"\r\n  [state-atom new-text]\r\n  (let [{:as state :keys [input-text c-input]} @state-atom]\r\n    (if (= new-text input-text) state ;; keypresses that do not change the value still call on-change, ignore these\r\n        (do\r\n          (when-not (clojure.string/blank? new-text) (put! c-input new-text))\r\n          (swap! state-atom\r\n                 #(cond-> %\r\n                    :always (assoc :input-text new-text :displaying-suggestion? false)\r\n                    (event-updates-model? state :input-text-changed) (update-model new-text)))))))\r\n\r\n(defn- input-text-on-key-down!\r\n  [state-atom event]\r\n  (condp = (.-which event)\r\n    goog.events.KeyCodes.UP     (swap! state-atom activate-suggestion-prev)\r\n    goog.events.KeyCodes.DOWN   (swap! state-atom activate-suggestion-next)\r\n    goog.events.KeyCodes.ENTER  (swap! state-atom choose-suggestion-active)\r\n    goog.events.KeyCodes.ESC    (swap! state-atom reset-typeahead)\r\n    ;; tab requires special treatment\r\n    ;; trap it IFF there are suggestions, otherwise let the input defocus\r\n    goog.events.KeyCodes.TAB\r\n    (if (not-empty (:suggestions @state-atom))\r\n      (do (swap! state-atom activate-suggestion-next)\r\n          (.preventDefault event))\r\n      (swap! state-atom input-text-will-blur))\r\n    true))\r\n\r\n\r\n;; ------------------------------------------------------------------------------------\r\n;;  Component: typeahead\r\n;; ------------------------------------------------------------------------------------\r\n\r\n(def typeahead-args-desc\r\n  [{:name :data-source       :required true                   :type \"fn\"               :validate-fn fn?                :description [:span [:code \":data-source\"] \" supplies suggestion objects. This can either accept a single string argument (the search term), or a string and a callback. For the first case, the fn should return a collection of suggestion objects (which can be anything). For the second case, the fn should return \"[:code \"nil\" ]\", and eventually result in a call to the callback with a collection of suggestion objects.\"]}\r\n   {:name :on-change         :required false :default nil     :type \"string -> nil\"    :validate-fn fn?                :description [:span [:code \":change-on-blur?\"] \" controls when it is called. It is passed a suggestion object.\"] }\r\n   {:name :change-on-blur?   :required false :default true    :type \"boolean | atom\"                                   :description [:span \"when true, invoke \" [:code \":on-change\"] \" when the user chooses a suggestion, otherwise invoke it on every change (navigating through suggestions with the mouse or keyboard, or if \"[:code \"rigid?\"]\" is also \"[:code \"false\" ]\", invoke it on every character typed.)\"] }\r\n   {:name :model             :required false :default nil     :type \"object | atom\"                                             :description \"The initial value of the typeahead (should match the suggestion objects returned by \" [:code \":data-source\"] \").\"}\r\n   {:name :debounce-delay    :required false :default 250     :type \"integer\"          :validate-fn integer?           :description [:span \"After receiving input, the typeahead will wait this many milliseconds without receiving new input before calling \" [:code \":data-source\"] \".\"]}\r\n   {:name :render-suggestion :required false                  :type \"render fn\"        :validate-fn fn?                :description \"override the rendering of the suggestion items by passing a fn that returns hiccup forms. The fn will receive two arguments: the search term, and the suggestion object.\"}\r\n   {:name :suggestion-to-string :required false               :type \"suggestion -> string\" :validate-fn fn?            :description \"When a suggestion is chosen, the input-text value will be set to the result of calling this fn with the suggestion object.\"}\r\n   {:name :rigid?            :required false :default true    :type \"boolean | atom\"                                   :description [:span \"If \"[:code \"false\"]\" the user will be allowed to choose arbitrary text input rather than a suggestion from \" [:code \":data-source\"]\". In this case, a string will be supplied in lieu of a suggestion object.\" ]}\r\n\r\n   ;; the rest of the arguments are forwarded to the wrapped `input-text`\r\n   {:name :status            :required false                  :type \"keyword\"          :validate-fn input-status-type? :description [:span \"validation status. \" [:code \"nil/omitted\"] \" for normal status or one of: \" input-status-types-list]}\r\n   {:name :status-icon?      :required false :default false   :type \"boolean\"                                          :description [:span \"when true, display an icon to match \" [:code \":status\"] \" (no icon for nil)\"]}\r\n   {:name :status-tooltip    :required false                  :type \"string\"           :validate-fn string?            :description \"displayed in status icon's tooltip\"}\r\n   {:name :placeholder       :required false                  :type \"string\"           :validate-fn string?            :description \"background text shown when empty\"}\r\n   {:name :width             :required false :default \"250px\" :type \"string\"           :validate-fn string?            :description \"standard CSS width setting for this input\"}\r\n   {:name :height            :required false                  :type \"string\"           :validate-fn string?            :description \"standard CSS height setting for this input\"}\r\n   {:name :disabled?         :required false :default false   :type \"boolean | atom\"                                   :description \"if true, the user can't interact (input anything)\"}\r\n   {:name :class             :required false                  :type \"string\"           :validate-fn string?            :description \"CSS class names, space separated\"}\r\n   {:name :style             :required false                  :type \"CSS style map\"    :validate-fn css-style?         :description \"CSS styles to add or override\"}\r\n   {:name :attr              :required false                  :type \"HTML attr map\"    :validate-fn html-attr?         :description [:span \"HTML attributes, like \" [:code \":on-mouse-move\"] [:br] \"No \" [:code \":class\"] \" or \" [:code \":style\"] \"allowed\"]}])\r\n\r\n(defn typeahead\r\n  \"typeahead reagent component\"\r\n  [& {:keys [] :as args}]\r\n  {:pre [(validate-args-macro typeahead-args-desc args \"typeahead\")]}\r\n  (let [{:as state :keys [c-search c-input]} (make-typeahead-state args)\r\n        state-atom (reagent/atom state)\r\n        input-text-model (reagent/cursor state-atom [:input-text])]\r\n    (search-data-source-loop! state-atom c-search)\r\n    (fn\r\n      [& {:as   args\r\n          :keys [data-source _on-change _change-on-blur? model _debounce-delay render-suggestion _suggestion-to-string _rigid?\r\n                 ;; forwarded to wrapped `input-text`:\r\n                 status status-icon? status-tooltip placeholder width height disabled? class style _attr]}]\r\n      {:pre [(validate-args-macro typeahead-args-desc args \"typeahead\")]}\r\n      (let [{:as state :keys [suggestions waiting? suggestion-active-index external-model]} @state-atom\r\n            last-data-source (:data-source state)\r\n            latest-external-model (deref-or-value model)\r\n            width (or width \"250px\")]\r\n        (when (not= last-data-source data-source)\r\n          (swap! state-atom change-data-source data-source))\r\n        (when (not= latest-external-model external-model)\r\n          (swap! state-atom external-model-changed latest-external-model))\r\n        [v-box\r\n         :width width\r\n         :children\r\n         [[input-text\r\n           :model          input-text-model\r\n           :class          class\r\n           :style          style\r\n           :disabled?      disabled?\r\n           :status-icon?   status-icon?\r\n           :status         status\r\n           :status-tooltip status-tooltip\r\n           :width          width\r\n           :height         height\r\n           :placeholder    placeholder\r\n           :on-change      (partial input-text-on-change! state-atom)\r\n           :change-on-blur? false\r\n           :attr {:on-key-down (partial input-text-on-key-down! state-atom)}]\r\n          (if (or (not-empty suggestions) waiting?)\r\n            [box\r\n             :style {:position \"relative\"}\r\n             :child [v-box\r\n                     :class \"rc-typeahead-suggestions-container\"\r\n                     :children [(when waiting?\r\n                                  [box :align :center :child [throbber :size :small :class \"rc-typeahead-throbber\"]])\r\n                                (for [[i s] (map vector (range) suggestions)\r\n                                      :let [selected? (= suggestion-active-index i)]]\r\n                                  ^{:key i}\r\n                                  [box\r\n                                   :child (if render-suggestion\r\n                                            (render-suggestion s)\r\n                                            s)\r\n                                   :class (str \"rc-typeahead-suggestion\"\r\n                                               (when selected? \" active\"))\r\n                                   :attr {:on-mouse-over #(swap! state-atom activate-suggestion-by-index i)\r\n                                          :on-mouse-down #(do (.preventDefault %) (swap! state-atom choose-suggestion-by-index i))}])]]])]]))))\r\n\r\n(defn- debounce\r\n  \"Return a channel which will receive a value from the `in` channel only\r\n  if no further value is received on the `in` channel in the next `ms` milliseconds.\"\r\n  [in ms]\r\n  (let [out (chan)]\r\n    (go-loop [last-val nil]\r\n      (let [val (if (nil? last-val) (<! in) last-val)\r\n            timer (timeout ms)]\r\n        (let [v (alt!\r\n                  in ([val _] val)\r\n                  timer (do (>! out val) nil))]\r\n          (recur v))))\r\n    out))\r\n","~:reader-features",["^S",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p__31063","map__31064","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","re-com.typeahead/make-typeahead-state","args","on-change","rigid?","change-on-blur?","data-source","suggestion-to-string","debounce-delay","model","external-model-value","re-com.util/deref-or-value","G__31067","c-input","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","or__4131__auto__","cljs.core/str","re-com.typeahead/debounce","re-com.typeahead/display-suggestion","p__31071","map__31072","re-com.typeahead/event-updates-model?","state","event","G__31077","cljs.core/Keyword","js/Error","and__4120__auto__","cljs.core/not","p__31086","map__31088","re-com.typeahead/event-displays-suggestion?","G__31092","p__31095","map__31096","re-com.typeahead/update-model","new-value","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p__31106","map__31108","suggestion","suggestion-string","G__31112","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","re-com.typeahead/clear-suggestions","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","p__31117","map__31118","re-com.typeahead/activate-suggestion-by-index","suggestions","index","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","G__31120","p__31123","map__31124","re-com.typeahead/choose-suggestion-by-index","p__31127","map__31129","re-com.typeahead/choose-suggestion-active","suggestion-active-index","G__31133","re-com.typeahead/wrap","count","cljs.core/mod","p__31140","map__31143","re-com.typeahead/activate-suggestion-next","G__31150","cljs.core/count","p__31158","map__31159","re-com.typeahead/activate-suggestion-prev","G__31163","re-com.typeahead/reset-typeahead","G__31166","re-com.typeahead/got-suggestions","p__31169","map__31170","re-com.typeahead/input-text-will-blur","input-text","displaying-suggestion?","G__31176","re-com.typeahead/change-data-source","re-com.typeahead/external-model-changed","re-com.typeahead/search-data-source!","state-atom","text","temp__5718__auto__","return-value","G__31188","G__31189","p1__31184#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","re-com.typeahead/search-data-source-loop!","c-search","c__28935__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__28936__auto__","switch__28807__auto__","state_31208","state_val_31209","statearr-31213","cljs.core.async.impl.ioc-helpers/take!","inst_31206","cljs.core.async.impl.ioc-helpers/return-chan","inst_31194","inst_31195","cljs.core/deref","inst_31196","inst_31197","statearr-31215","statearr-31219","statearr-31220","inst_31199","statearr-31224","inst_31201","statearr-31225","inst_31203","statearr-31226","statearr-31227","statearr-31229","state-machine__28808__auto__","ret-value__28809__auto__","result__28810__auto__","cljs.core/keyword-identical?","e31231","js/Object","ex__28811__auto__","statearr-31232","cljs.core.async.impl.ioc-helpers/process-exception","state__28937__auto__","statearr-31233","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","re-com.typeahead/input-text-on-change!","new-text","map__31248","clojure.string/blank?","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","p1__31243#","G__31256","re-com.typeahead/input-text-on-key-down!","pred__31262","expr__31263","cljs.core/=","js/goog.events.KeyCodes.UP","js/goog.events.KeyCodes.DOWN","js/goog.events.KeyCodes.ENTER","js/goog.events.KeyCodes.ESC","js/goog.events.KeyCodes.TAB","cljs.core/not-empty","re-com.typeahead/typeahead-args-desc","cljs.core/fn?","cljs.core/integer?","re-com.validate/input-status-type?","re-com.validate/input-status-types-list","cljs.core/string?","re-com.validate/css-style?","re-com.validate/html-attr?","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","re-com.typeahead/typeahead","p__31281","map__31282","seq31279","self__4718__auto__","cljs.core/seq","js/goog.DEBUG","re_com.validate.validate_args.cljs$core$IFn$_invoke$arity$variadic","re-com.validate/extract-arg-data","map__31284","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","input-text-model","reagent.core/cursor","p__31289","map__31290","_on-change","_change-on-blur?","_debounce-delay","render-suggestion","_suggestion-to-string","_rigid?","status","status-icon?","status-tooltip","placeholder","width","height","disabled?","class","style","_attr","map__31303","waiting?","external-model","last-data-source","latest-external-model","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","re-com.box/v-box","re-com.misc/input-text","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","re-com.box/box","re-com.misc/throbber","iter__4523__auto__","s__31314","cljs.core/LazySeq","temp__5720__auto__","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__31316","cljs.core/chunk-buffer","i__31315","vec__31317","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","p1__31277#","cljs.core/chunk-cons","cljs.core/chunk","iter__31313","cljs.core/chunk-rest","vec__31324","cljs.core/first","cljs.core/cons","cljs.core/rest","i","s","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/vector","cljs.core.range.cljs$core$IFn$_invoke$arity$0","selected?","in","ms","out","state_31444","state_val_31445","inst_31345","statearr-31446","inst_31340","statearr-31447","statearr-31448","inst_31429","statearr-31449","statearr-31450","inst_31415","inst_31431","statearr-31451","statearr-31452","inst_31349","inst_31348","inst_31409","cljs.core/PersistentVector","inst_31410","inst_31411","statearr-31453","cljs.core.async/ioc-alts!","statearr-31454","inst_31442","cljs.core.async.impl.ioc-helpers/put!","inst_31342","statearr-31455","statearr-31456","inst_31439","statearr-31457","statearr-31458","inst_31413","inst_31423","inst_31424","statearr-31460","statearr-31461","statearr-31463","inst_31437","statearr-31464","inst_31414","statearr-31465","inst_31426","statearr-31466","statearr-31467","inst_31435","statearr-31468","inst_31417","statearr-31469","statearr-31470","statearr-31471","statearr-31473","e31477","statearr-31478","statearr-31480","cljs.core.async/timeout","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1574163601000,1574163601000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^S",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^24","reagent/impl/batching.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","~$reagent.debug","~$reagent.interop","~$reagent.impl.util","~$clojure.string"]]],["^24","goog/dom/tagname.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.dom.HtmlElement"]]],["^24","cljs/core/async/impl/ioc_helpers.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","~$cljs.core.async.impl.protocols"]]],["^24","goog/i18n/datetimesymbols.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","goog/labs/useragent/platform.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.labs.userAgent.util","~$goog.string"]]],["^24","cljs/core/async.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2N","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^24","goog/math/math.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","~$goog.asserts"]]],["^24","goog/labs/useragent/browser.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","^2O","~$goog.object","^2P"]]],["^24","goog/array/array.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2W"]]],["^2A","node_modules/prop-types/checkPropTypes.js"],[1574163601000,1574163601000,1549836454000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^24","reagent/impl/util.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2I","^2J","^2L"]]],["^24","goog/useragent/useragent.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2O","~$goog.reflect","^2P"]]],["^24","goog/events/keycodes.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.userAgent"]]],["^2A","node_modules/fbjs/lib/emptyFunction.js"],[1574163601000,1574163601000,1528785402000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^24","goog/debug/error.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^2A","node_modules/fbjs/lib/emptyObject.js"],[1574163601000,1574163601000,1528785402000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^24","goog/dom/nodetype.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","re_com/util.cljs"],[1574085175707,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","~$clojure.set","~$reagent.ratom","~$goog.date.DateTime","~$goog.date.UtcDateTime"]]],["^2A","node_modules/scheduler/cjs/scheduler.development.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^24","goog/date/utcdatetime.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.date","~$goog.date.Date","^35","~$goog.date.Interval"]]],["^24","reagent/ratom.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2K","^2I","~$reagent.impl.batching","^33"]]],["^2A","node_modules/scheduler/cjs/scheduler.production.min.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^24","goog/date/datelike.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^2A","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^2A","node_modules/create-react-class/factory.js"],[1574163601000,1574163601000,1517346959000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^2A","node_modules/react/index.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^24","shadow/js.js"],[1574163601395,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","goog/object/object.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","reagent/impl/template.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^?","^2L","~$clojure.walk","^2K","~$reagent.impl.component","^3:","^34","^2J","^2I"]]],["^2A","node_modules/react-dom/cjs/react-dom.production.min.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","^?","^3;","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1574163601000,1567262080000],["^2A","node_modules/react/cjs/react.development.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","^3;","~$module$node_modules$prop_types$checkPropTypes"]]],["^24","re_com/validate.cljs"],[1574085175707,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^33","^10","^[","~$reagent.impl.template","^2P","^36"]]],["^24","goog/math/long.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2W","^31"]]],["^24","cljs/core/async/impl/channels.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2N","^2T","^2R"]]],["^2A","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^2A","node_modules/fbjs/lib/warning.js"],[1574163601000,1574163601000,1528785401000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^24","re_com/popover.cljs"],[1574085175707,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^10","^12","^Q","^2L","^[","^34"]]],["^24","goog/functions/functions.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","cljs/core/async/impl/dispatch.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2R","~$goog.async.nextTick"]]],["^24","reagent/impl/component.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^A","^?","^2K","^3:","^34","^2J","^2I"]]],["^24","clojure/walk.cljs"],[1567262080081,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13"]]],["^24","cljs/core/async/impl/protocols.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13"]]],["^24","goog/structs/map.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.iter.Iterator","~$goog.iter.StopIteration","^2X"]]],["^24","goog/date/date.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2W","~$goog.date.DateLike","~$goog.i18n.DateTimeSymbols","^2P"]]],["^24","re_com/typeahead.cljs"],[1574085175707,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^15","^17","^10","^11","^12","^Q","^[","^16"]]],["^2A","node_modules/scheduler/index.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^24","goog/labs/useragent/engine.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","^2O","^2P"]]],["^24","re_com/box.cljs"],[1574085175707,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2L","^Q"]]],["^24","goog/asserts/asserts.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.debug.Error","~$goog.dom.NodeType","^2P"]]],["^24","cljs/core/async/impl/buffers.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2N"]]],["^24","goog/uri/uri.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","^2W","^2P","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^2A","node_modules/object-assign/index.js"],[1574163601000,1574163601000,1484580833000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^24","cljs/core/async/impl/timers.cljs"],[1567262078513,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2N","^2Q","^2T"]]],["^24","goog/base.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",[]]],["^24","goog/structs/structs.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","^2X"]]],["^24","clojure/string.cljs"],[1567262080081,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^2P","~$goog.string.StringBuffer"]]],["^2A","node_modules/create-react-class/index.js"],[1574163601000,1574163601000,1517346956000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","^?","~$module$node_modules$create_react_class$factory"]]],["^2A","node_modules/react/cjs/react.production.min.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","^3;"]]],["^24","goog/debug/entrypointregistry.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2W"]]],["^24","goog/string/string.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","goog/reflect/reflect.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","goog/labs/useragent/util.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2P"]]],["^24","reagent/core.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^?","^3F","^3B","^2K","^3:","^34","^2I","^2J","~$reagent.dom"]]],["^24","goog/string/stringbuffer.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","goog/iter/iter.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","^2W","~$goog.functions","~$goog.math"]]],["^24","goog/async/nexttick.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^3Y","^2Z","^2["]]],["^24","reagent/dom.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^C","^2K","^3F","^3:","^34","^2I","^2J"]]],["^2A","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1574163601000,1574163601000,1549571078000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]],["^24","reagent/interop.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13"]]],["^24","goog/dom/htmlelement.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^24","cljs/core.cljs"],[1567262080081,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["~$goog.math.Long","~$goog.math.Integer","^2P","^2X","^2V","~$goog.Uri","^3V"]]],["^24","reagent/debug.cljs"],[1567262094669,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13"]]],["^24","goog/math/integer.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14"]]],["^2A","node_modules/scheduler/tracing.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2A","node_modules/react-dom/cjs/react-dom.development.js"],[1574163601000,1574163601000,499162500000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F","^?","^3;","^3E","^3C","~$module$node_modules$scheduler$tracing"]]],["^24","clojure/set.cljs"],[1567262080081,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13"]]],["^24","goog/uri/utils.js"],[1567356087625,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^2V","^2W","^2P"]]],["^24","re_com/misc.cljs"],[1574085175707,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^14","^13","^10","^11","^12","^Q","^["]]],["^2A","node_modules/fbjs/lib/invariant.js"],[1574163601000,1574163601000,1528785400000,"^2B",["^ ","^2C",null,"^2D",["^S",[]],"^2E",["^2F"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/ratom.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1567262076000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/dispatch.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/interop.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/core.clj",1567262094000,"jar:file:/C:/Users/jacqu/.m2/repository/re-com/re-com/2.1.0/re-com-2.1.0.jar!/re_com/validate.clj",1574085175000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async/impl/ioc_macros.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/protocols.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/concurrent.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1567262098000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1567262077000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async/macros.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1568573460000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/exec/threadpool.clj",1567262078000,"jar:file:/C:/Users/jacqu/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1567262080000,"jar:file:/C:/Users/jacqu/.m2/repository/re-com/re-com/2.1.0/re-com-2.1.0.jar!/re_com/core.clj",1574085175000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_com/typeahead.cljs","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I"],"^J",["^ ","^K","^L","^M","^N","^O","^N","^P","^Q"],"^R",["^S",[]],"^T","^U","^X",null,"^Y",["^ ","^Z","^[","^10","^10","^11","^11","^12","^12","^[","^[","^13","^13","^14","^14","^15","^15","^Q","^Q","^16","^16","^17","^17"],"^18",["^S",["^19","^1:"]],"~:shadow/js-access-global",["^S",["Object","Error"]],"^1;",["^ ","^1<","^12","^1=","^15","^1>","^Q","^1?","^12","^1@","^15","^1A","^Q","^1B","^10","^1C","^Q","^1D","^Q","^1E","^15","^1F","^17","^1G","^Q","^1H","^Q","^1I","^12","^1J","^10","^1K","^Q","^1L","^12","^1M","^12","^1N","^Q","^1O","^11","^1P","^12","^1Q","^Q","^1R","^Q","^1S","^12","^1T","^17","^1U","^15"],"~:defs",["^ ","~$activate-suggestion-next",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",112,"^8",8,"^9",112,"^:",32,"~:private",true,"~:arglists",["^1W",["~$quote",["^1W",[[["^ ","^1[","~$state","~:keys",["~$suggestions","~$suggestion-active-index"]]]]]]]],"^57",true,"^T","~$re-com.typeahead/activate-suggestion-next","^6","re_com/typeahead.cljs","^:",32,"~:method-params",["^1W",[["~$p__31140"]]],"~:protocol-impl",null,"~:arglists-meta",["^1W",[null,null]],"^8",1,"~:variadic?",false,"^7",112,"~:ret-tag",["^S",[null,"~$clj","~$any"]],"^9",112,"~:max-fixed-arity",1,"~:fn-var",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<","^5="]]]]]]]],"~$search-data-source!",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",167,"^8",8,"^9",167,"^:",27,"^57",true,"^58",["^1W",["^59",["^1W",[["~$data-source","~$state-atom","~$text"]]]]],"~:doc","Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\n  (asynchronously, if `data-source` does not return a truthy value)."],"^57",true,"^T","~$re-com.typeahead/search-data-source!","^6","re_com/typeahead.cljs","^:",27,"^5?",["^1W",[["^5J","^5K","^5L"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",167,"^5D",["^S",[null,"^5F"]],"^9",167,"^5G",3,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5J","^5K","^5L"]]]]],"^5M","Call the `data-source` fn with `text`, and then call `got-suggestions` with the result\n  (asynchronously, if `data-source` does not return a truthy value)."],"~$input-text-will-blur",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",139,"^8",8,"^9",139,"^:",28,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^5;",["^1F","~$displaying-suggestion?"],"^1[","^5:"]]]]]],"^5M","Update state when the `input-text` is about to lose focus."],"^57",true,"^T","~$re-com.typeahead/input-text-will-blur","^6","re_com/typeahead.cljs","^:",28,"^5?",["^1W",[["~$p__31169"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",139,"^5D",["^S",[null,"^5E","^5F"]],"^9",139,"^5G",1,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^5;",["^1F","^5P"],"^1[","^5:"]]]]]],"^5M","Update state when the `input-text` is about to lose focus."],"~$make-typeahead-state",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",19,"^8",8,"^9",19,"^:",28,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","~$args","^5;",["~$on-change","~$rigid?","~$change-on-blur?","^5J","~$suggestion-to-string","~$debounce-delay","~$model"]]]]]]],"^5M","Return an initial value for the typeahead state, given `args`."],"^57",true,"^T","~$re-com.typeahead/make-typeahead-state","^6","re_com/typeahead.cljs","^:",28,"^5?",["^1W",[["~$p__31063"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",19,"^5D",["^S",["^5F","~$cljs.core/IMap"]],"^9",19,"^5G",1,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5T","^5;",["^5U","^5V","^5W","^5J","^5X","^5Y","^5Z"]]]]]]],"^5M","Return an initial value for the typeahead state, given `args`."],"~$event-displays-suggestion?",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",54,"^8",8,"^9",54,"^:",34,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5W"]],"~$event"]]]]],"^5M","Should `event` cause the `input-text` value to be used to show the active suggestion?"],"^57",true,"^T","~$re-com.typeahead/event-displays-suggestion?","^6","re_com/typeahead.cljs","^:",34,"^5?",["^1W",[["~$p__31086","^63"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",54,"^9",54,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5W"]],"^63"]]]]],"^5M","Should `event` cause the `input-text` value to be used to show the active suggestion?"],"~$external-model-changed",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",155,"^8",8,"^9",155,"^:",30,"^57",true,"^58",["^1W",["^59",["^1W",[["^5:","~$new-value"]]]]],"^5M","Update state when the external model value has changed."],"^57",true,"^T","~$re-com.typeahead/external-model-changed","^6","re_com/typeahead.cljs","^:",30,"^5?",["^1W",[["^5:","^67"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",155,"^5D",["^S",["^5E","~$clj-nil"]],"^9",155,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5:","^67"]]]]],"^5M","Update state when the external model value has changed."],"~$clear-suggestions",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",81,"^8",8,"^9",81,"^:",25,"^57",true,"^58",["^1W",["^59",["^1W",[["^5:"]]]]]],"^57",true,"^T","~$re-com.typeahead/clear-suggestions","^6","re_com/typeahead.cljs","^:",25,"^5?",["^1W",[["^5:"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",81,"^5D",["^S",["^5E","^69"]],"^9",81,"^5G",1,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5:"]]]]]],"~$event-updates-model?",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",44,"^8",8,"^9",44,"^:",28,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5W","^5V"]],"^63"]]]]],"^5M","Should `event` update the `typeahead` `model`?"],"^57",true,"^T","~$re-com.typeahead/event-updates-model?","^6","re_com/typeahead.cljs","^:",28,"^5?",["^1W",[["~$p__31071","^63"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",44,"^9",44,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5W","^5V"]],"^63"]]]]],"^5M","Should `event` update the `typeahead` `model`?"],"~$activate-suggestion-by-index",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",86,"^8",8,"^9",86,"^:",36,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<"]],"~$index"]]]]],"^5M","Make the suggestion at `index` the active suggestion"],"^57",true,"^T","~$re-com.typeahead/activate-suggestion-by-index","^6","re_com/typeahead.cljs","^:",36,"^5?",["^1W",[["~$p__31117","^6@"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",86,"^5D",["^S",[null,"^5E","^5F"]],"^9",86,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<"]],"^6@"]]]]],"^5M","Make the suggestion at `index` the active suggestion"],"~$reset-typeahead",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",124,"^8",8,"^9",124,"^:",23,"^57",true,"^58",["^1W",["^59",["^1W",[["^5:"]]]]]],"^57",true,"^T","~$re-com.typeahead/reset-typeahead","^6","re_com/typeahead.cljs","^:",23,"^5?",["^1W",[["^5:"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",124,"^5D",["^S",["^5E","^5F"]],"^9",124,"^5G",1,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5:"]]]]]],"~$choose-suggestion-by-index",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",95,"^8",8,"^9",95,"^:",34,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<"]],"^6@"]]]]],"^5M","Choose the suggestion at `index`"],"^57",true,"^T","~$re-com.typeahead/choose-suggestion-by-index","^6","re_com/typeahead.cljs","^:",34,"^5?",["^1W",[["~$p__31123","^6@"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",95,"^5D",["^S",["^5E","^69"]],"^9",95,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<"]],"^6@"]]]]],"^5M","Choose the suggestion at `index`"],"~$activate-suggestion-prev",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",118,"^8",8,"^9",118,"^:",32,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<","^5="]]]]]]]],"^57",true,"^T","~$re-com.typeahead/activate-suggestion-prev","^6","re_com/typeahead.cljs","^:",32,"^5?",["^1W",[["~$p__31158"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",118,"^5D",["^S",[null,"^5E","^5F"]],"^9",118,"^5G",1,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5<","^5="]]]]]]]],"~$wrap",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",110,"^8",8,"^9",110,"^:",12,"^57",true,"^58",["^1W",["^59",["^1W",[["^6@","~$count"]]]]]],"^57",true,"^T","~$re-com.typeahead/wrap","^6","re_com/typeahead.cljs","^:",12,"^5?",["^1W",[["^6@","^6L"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",110,"^5D","~$number","^9",110,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^6@","^6L"]]]]]],"~$debounce",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",299,"^8",8,"^9",299,"^:",16,"^57",true,"^58",["^1W",["^59",["^1W",[["~$in","~$ms"]]]]],"^5M","Return a channel which will receive a value from the `in` channel only\n  if no further value is received on the `in` channel in the next `ms` milliseconds."],"^57",true,"^T","~$re-com.typeahead/debounce","^6","re_com/typeahead.cljs","^:",16,"^5?",["^1W",[["^6P","^6Q"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",299,"^5D","^5F","^9",299,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^6P","^6Q"]]]]],"^5M","Return a channel which will receive a value from the `in` channel only\n  if no further value is received on the `in` channel in the next `ms` milliseconds."],"~$typeahead",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",241,"^8",7,"^9",241,"^:",16,"^58",["^1W",["^59",["^1W",[["~$&",["^ ","^5;",[],"^1[","^5T"]]]]]],"^5M","typeahead reagent component","~:top-fn",["^ ","^5C",true,"~:fixed-arity",0,"^5G",0,"^5?",[["^1W",[["^ ","^5;",[],"^1[","^5T"]]]],"^58",["^1W",[["~$&",["^ ","^5;",[],"^1[","^5T"]]]],"^5B",["^1W",[null]]]],"^T","~$re-com.typeahead/typeahead","^6","re_com/typeahead.cljs","^:",16,"^6T",["^ ","^5C",true,"^6U",0,"^5G",0,"^5?",[["^1W",[["^ ","^5;",[],"^1[","^5T"]]]],"^58",["^1W",[["~$&",["^ ","^5;",[],"^1[","^5T"]]]],"^5B",["^1W",[null]]],"^5?",[["^1W",[["^ ","^5;",[],"^1[","^5T"]]]],"^5A",null,"^6U",0,"^5B",["^1W",[null]],"^8",1,"^5C",true,"~:methods",[["^ ","^6U",0,"^5C",true,"~:tag","~$function"]],"^7",241,"^5D","^5F","^9",241,"^5G",0,"^5H",true,"^58",["^1W",[["~$&",["^ ","^5;",[],"^1[","^5T"]]]],"^5M","typeahead reagent component"],"~$input-text-on-change!",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",186,"^8",8,"^9",186,"^:",29,"^57",true,"^58",["^1W",["^59",["^1W",[["^5K","~$new-text"]]]]],"^5M","Update state in response to `input-text` `on-change`, and put text on the `c-input` channel"],"^57",true,"^T","~$re-com.typeahead/input-text-on-change!","^6","re_com/typeahead.cljs","^:",29,"^5?",["^1W",[["^5K","^6["]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",186,"^5D",["^S",[null,"^5F"]],"^9",186,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5K","^6["]]]]],"^5M","Update state in response to `input-text` `on-change`, and put text on the `c-input` channel"],"~$update-model",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",67,"^8",8,"^9",67,"^:",20,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5U"]],"^67"]]]]],"^5M","Change the `typeahead` `model` value to `new-value`"],"^57",true,"^T","~$re-com.typeahead/update-model","^6","re_com/typeahead.cljs","^:",20,"^5?",["^1W",[["~$p__31095","^67"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",67,"^5D",["^S",["^5E","^5F"]],"^9",67,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5U"]],"^67"]]]]],"^5M","Change the `typeahead` `model` value to `new-value`"],"~$display-suggestion",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",73,"^8",8,"^9",73,"^:",26,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5X"]],"~$suggestion"]]]]],"^5M","Change the `input-text` `model` to the string representation of `suggestion`"],"^57",true,"^T","~$re-com.typeahead/display-suggestion","^6","re_com/typeahead.cljs","^:",26,"^5?",["^1W",[["~$p__31106","^75"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",73,"^5D",["^S",[null,"^5E","^5F"]],"^9",73,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5X"]],"^75"]]]]],"^5M","Change the `input-text` `model` to the string representation of `suggestion`"],"~$search-data-source-loop!",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",175,"^8",8,"^9",175,"^:",32,"^57",true,"^58",["^1W",["^59",["^1W",[["^5K","~$c-search"]]]]],"^5M","For every value arriving on the `c-search` channel, call `search-data-source!`."],"^57",true,"^T","~$re-com.typeahead/search-data-source-loop!","^6","re_com/typeahead.cljs","^:",32,"^5?",["^1W",[["^5K","^79"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",175,"^5D","^5F","^9",175,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5K","^79"]]]]],"^5M","For every value arriving on the `c-search` channel, call `search-data-source!`."],"~$typeahead-args-desc",["^ ","^T","~$re-com.typeahead/typeahead-args-desc","^6","re_com/typeahead.cljs","^7",219,"^8",1,"^9",219,"^:",25,"^5",["^ ","^6","re_com/typeahead.cljs","^7",219,"^8",6,"^9",219,"^:",25],"^6X","~$cljs.core/IVector"],"~$change-data-source",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",147,"^8",8,"^9",147,"^:",26,"^57",true,"^58",["^1W",["^59",["^1W",[["^5:","^5J"]]]]],"^5M","Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\n  came from the old `data-source`."],"^57",true,"^T","~$re-com.typeahead/change-data-source","^6","re_com/typeahead.cljs","^:",26,"^5?",["^1W",[["^5:","^5J"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",147,"^5D",["^S",["^5E","^5F"]],"^9",147,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5:","^5J"]]]]],"^5M","Update `state` given a new `data-source`. Resets the typeahead since any existing suggestions\n  came from the old `data-source`."],"~$got-suggestions",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",131,"^8",8,"^9",131,"^:",23,"^57",true,"^58",["^1W",["^59",["^1W",[["^5:","^5<"]]]]],"^5M","Update state when new suggestions are available"],"^57",true,"^T","~$re-com.typeahead/got-suggestions","^6","re_com/typeahead.cljs","^:",23,"^5?",["^1W",[["^5:","^5<"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",131,"^5D",["^S",["^5E","^5F"]],"^9",131,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5:","^5<"]]]]],"^5M","Update state when new suggestions are available"],"~$input-text-on-key-down!",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",198,"^8",8,"^9",198,"^:",31,"^57",true,"^58",["^1W",["^59",["^1W",[["^5K","^63"]]]]]],"^57",true,"^T","~$re-com.typeahead/input-text-on-key-down!","^6","re_com/typeahead.cljs","^:",31,"^5?",["^1W",[["^5K","^63"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",198,"^5D",["^S",[null,"~$boolean","^5F"]],"^9",198,"^5G",2,"^5H",true,"^58",["^1W",["^59",["^1W",[["^5K","^63"]]]]]],"~$choose-suggestion-active",["^ ","^56",null,"^5",["^ ","^6","re_com/typeahead.cljs","^7",105,"^8",8,"^9",105,"^:",32,"^57",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5="]]]]]]]],"^57",true,"^T","~$re-com.typeahead/choose-suggestion-active","^6","re_com/typeahead.cljs","^:",32,"^5?",["^1W",[["~$p__31127"]]],"^5A",null,"^5B",["^1W",[null,null]],"^8",1,"^5C",false,"^7",105,"^5D",["^S",[null,"^5E","^5F","^69"]],"^9",105,"^5G",1,"^5H",true,"^58",["^1W",["^59",["^1W",[[["^ ","^1[","^5:","^5;",["^5="]]]]]]]]],"^1:",["^ ","^L","^L","^N","^N","^Q","^Q","^13","^13","^Z","^[","^[","^[","^15","^15"],"~:cljs.analyzer/constants",["^ ","^18",["^S",["~:description","~:_on-change","~:waiting?","~:children","~:suggestion-to-string","~:align","~:key","~:placeholder","~:displaying-suggestion?","~:input-text","~:else","~:_suggestion-to-string","~:render-suggestion","~:default","~:suggestion-active-index","^T","~:rigid?","~:width","~:data-source","~:recur","~:type","~:input-text-blurred","~:_rigid?","~:on-mouse-down","~:size","~:center","~:small","~:style","~:input-text-changed","~:_change-on-blur?","~:debounce-delay","~:suggestion-activated","~:status","~:c-search","~:class","~:_attr","~:change-on-blur?","~:suggestions","~:code","~:position","~:validate-fn","~:c-input","~:br","~:on-mouse-over","~:child","~:on-change","~:on-key-down","~:disabled?","~:status-icon?","~:external-model","~:always","~:required","~:height","~:span","~:status-tooltip","~:model","~:_debounce-delay","~:attr"]],"~:order",["^8I","^7X","^8@","^7Z","^7M","^8:","^8S","^7K","^7Q","^7R","^8=","^8A","^8E","^8M","^7W","^8N","^8;","^88","^81","^7[","^7S","^T","^8O","^80","^8D","^7I","^8Q","^8B","^7V","^7U","^8<","^8L","^8R","^7P","^7Y","^8P","^8K","^8>","^87","^8U","^8F","^8T","^7J","^7T","^82","^89","^8?","^7L","^8J","^8C","^8H","^7N","^85","^84","^86","^8G","^83","^7O"]],"^20",["^ ","^1:",["^S",[]],"^19",["^S",[]]],"^21",["^ "],"^22",["^14","^13","^15","^17","^10","^11","^12","^Q","^[","^16"]],"^W","^U","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^2@",[["^8Y","~:static-fns"],true,["^8Y","~:elide-asserts"],false,["^8Y","~:optimize-constants"],null,["^8Y","^27"],null,["^8Y","~:external-config"],null,["^8Y","~:tooling-config"],null,["^8Y","~:emit-constants"],null,["^8Y","~:load-tests"],null,["^8Y","~:form-size-threshold"],null,["^8Y","~:infer-externs"],true,["^8Y","^29"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8Y","~:fn-invoke-direct"],null,["^8Y","~:source-map"],"/dev/null"]]]